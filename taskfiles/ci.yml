version: '3'

vars:
  DOCKER_REGISTRY: '778696301129.dkr.ecr.us-west-2.amazonaws.com'

tasks:

  configure:
    desc: "Configure a CI agent"
    cmds:
    # operator go test is using at least 2 k3d clusters which might exhaust limits of opened files
    - task: set-aio-max
    - task: set-inotify-watches
    - task: set-inotify-instances
    - task: configure-git-private-repo

  configure-git-private-repo:
    env:
      GITHUB_TOKEN:
        sh: echo "${GITHUB_TOKEN:-$GITHUB_API_TOKEN}"
    cmds:
      - git config --global url."https://$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
    preconditions:
      - test -n "$GITHUB_API_TOKEN" || test -n "$GITHUB_TOKEN"

  run-kuttl-tests:
    cmds:
      - defer: 'task ci:kuttl-artifact-upload KUTTL_CONFIG_FILE={{.KUTTL_CONFIG_FILE}}'
      - task: :k8s:run-kuttl-tests
        vars:
          KUTTL_CONFIG_FILE: '{{.KUTTL_CONFIG_FILE}}'

  kuttl-artifact-upload:
    desc: uploads artifact when kuttl fails
    dir: operator
    summary: |
      kuttl-artifact-upload should be called in `defer`.
      https://taskfile.dev/usage/#doing-task-cleanup-with-defer

      As buildkite pipeline step are wrapped with shell script, that executes
      docker run of a NIX container, where the permission are set to user of
      ID 0 (root). The buildkite agent executor can not resolve glob due to
      not sufficient permission. All invocation, within taskfile, of
      `buildkite-agent artifact upload` will have sufficient permission.
    vars:
      KUTTL_CONFIG_FILE: '{{default "kuttl-test.yaml" .KUTTL_CONFIG_FILE}}'
      KUTTL_ARTIFACTS_DIR:
        sh: |
          cat {{.KUTTL_CONFIG_FILE}} | grep artifactsDir | awk '{print $2}'
    cmds:
      - tar -czf {{.KUTTL_ARTIFACTS_DIR | base}}.tar.gz {{.KUTTL_ARTIFACTS_DIR}}
      - buildkite-agent artifact upload "{{.SRC_DIR}}/operator/{{.KUTTL_ARTIFACTS_DIR | base}}.tar.gz"
      - buildkite-agent artifact upload "{{.SRC_DIR}}/operator/{{.KUTTL_ARTIFACTS_DIR}}/kuttl-report.xml"

  k8s:
    cmds:
      - task: run-k8s-tests
      - task: publish-k8s-operator-images

  k8s-v2-helm:
    cmds:
      - task: :k8s:create-v2-helm-tests
      - task: run-k8s-v2-helm-tests

  k8s-v2:
    cmds:
      - task: run-k8s-v2-tests

  run-k8s-v2-tests:
    cmds:
      - 'echo "~~~ Running operator v2 e2e tests :k8s:"'
      - task: :k8s:run-golangci-lint
      - task: :k8s:generate
      - task: :dev:update-licenses
      - task: assert-no-diffs
      - task: run-kuttl-tests
        vars:
          KUTTL_CONFIG_FILE: kuttl-v2-test.yaml

  run-k8s-v2-helm-tests:
    cmds:
      - 'echo "~~~ Running operator v2 helm-ci e2e tests :k8s:"'
      - task: run-kuttl-tests
        vars:
          KUTTL_CONFIG_FILE: kuttl-v2-helm-test.yaml

  run-k8s-tests:
    cmds:
      - 'echo "~~~ Running operator e2e tests :k8s:"'
      - task: run-kuttl-tests
    status:
      - test -n '{{.TAG_NAME}}' # skip on tagged commit builds

  run-k8s-tests-with-flags:
    cmds:
      - 'echo "~~~ Running operator e2e tests :k8s:"'
      - task: run-kuttl-tests
        vars:
          KUTTL_CONFIG_FILE: kuttl-test-with-flags.yaml
    status:
      - test -n '{{.TAG_NAME}}' # skip on tagged commit builds

  publish-k8s-operator-images:
    cmds:
      - 'echo "~~~ Tagging and uploading images to Dockerhub :docker:"'
      - task: :k8s:build-tag-and-push-images
    status:
      - test -z '{{.TAG_NAME}}' # only run for tagged commits

  publish-k8s-nightly-artifacts:
    cmds:
      - 'echo "~~~ Tagging and uploading images to nightly Dockerhub :docker:"'
      - task: :goreleaser:build-operator-binaries
      - task: :k8s:build-and-push-operator-container-image
      # Package and push Operator helm chart to Dockerhub
      - task: :k8s:package-and-publish-operator-chart

  assert-no-diffs:
    desc: "Fail on any unexpected diffs to generated files (CI only)"
    cmds:
    - ls -lah # Debugging
    - ls -lah .git # Debugging
    - git status # Debugging
    - git diff --exit-code
    status:
      - test "$CI" != "true" # run only in CI as local runs may have unstaged changes.

  lint:
    cmds:
      - task: :generate
      - task: :lint
      # Fail on any generated diffs.
      - git diff --exit-code

  test:integration:
    cmds:
      - defer: 'kind delete clusters --all'
      - task: :charts:kind-cluster
      - defer: 'buildkite-agent artifact upload {{.SRC_DIR}}/integration-tests.xml'
      - task: :test:integration
        vars:
          GO_TEST_RUNNER: gotestsum
          CLI_ARGS: --junitfile=integration-tests.xml -- {{.CLI_ARGS}}

  test:unit:
    cmds:
      - defer: 'buildkite-agent artifact upload {{.SRC_DIR}}/unit-tests.xml'
      - task: :test:unit
        vars:
          GO_TEST_RUNNER: gotestsum
          CLI_ARGS: '--junitfile=unit-tests.xml -- -timeout=30m {{.CLI_ARGS}}'

  set-aio-max:
    desc: set minimum required value for fs.aio-max-nr sysctl option
    vars:
      MIN_REQUIRED_AIO_MAX: 20971520
      USE_SUDO: '{{default "false" .USE_SUDO}}'
    cmds:
      - 'echo "Setting fs.aio-max-nr sysctl option to {{.MIN_REQUIRED_AIO_MAX}}"'
      - '{{if eq .USE_SUDO "true"}}echo "Please enter your sudo password: "{{end}}'
      - '{{if eq .USE_SUDO "true"}}sudo {{end}}sysctl -w fs.aio-max-nr={{.MIN_REQUIRED_AIO_MAX}}'
    status:
      - test {{.MIN_REQUIRED_AIO_MAX}} -le $(sysctl -nb fs.aio-max-nr)
    platforms:
      - linux

  set-inotify-watches:
    desc: |
      set minimum required value for fs.inotify.max_user_watches sysctl option
      REF: https://kind.sigs.k8s.io/docs/user/known-issues/#pod-errors-due-to-too-many-open-files
    vars:
      MIN_REQUIRED_USER_WATCHES: 1310720
      USE_SUDO: '{{default "false" .USE_SUDO}}'
    cmds:
      - '{{if eq .USE_SUDO "true"}}sudo {{end}}sysctl -w fs.inotify.max_user_watches={{.MIN_REQUIRED_USER_WATCHES}}'
    status:
      - test {{.MIN_REQUIRED_USER_WATCHES}} -le $(sysctl -nb fs.inotify.max_user_watches)
    platforms:
      - linux

  set-inotify-instances:
    desc: |
      set minimum required value for fs.inotify.max_user_instances sysctl option
      REF: https://kind.sigs.k8s.io/docs/user/known-issues/#pod-errors-due-to-too-many-open-files
    vars:
      MIN_REQUIRED_USER_INSTANCES: 2560
      USE_SUDO: '{{default "false" .USE_SUDO}}'
    cmds:
      - '{{if eq .USE_SUDO "true"}}sudo {{end}}sysctl -w fs.inotify.max_user_instances={{.MIN_REQUIRED_USER_INSTANCES}}'
    status:
      - test {{.MIN_REQUIRED_USER_INSTANCES}} -le $(sysctl -nb fs.inotify.max_user_instances)
    platforms:
      - linux
