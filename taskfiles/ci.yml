version: '3'

vars:
  DOCKER_REGISTRY: '778696301129.dkr.ecr.us-west-2.amazonaws.com'

tasks:
  configure-git-private-repo:
    env:
      GITHUB_TOKEN:
        sh: echo "${GITHUB_TOKEN:-$GITHUB_API_TOKEN}"
    cmds:
      - git config --global url."https://$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
    preconditions:
      - test -n "$GITHUB_API_TOKEN" || test -n "$GITHUB_TOKEN"

  run-kuttl-tests:
    cmds:
      - defer: 'task ci:kuttl-artifact-upload EXIT_CODE={{.EXIT_CODE}} KUTTL_CONFIG_FILE={{.KUTTL_CONFIG_FILE}}'
      - task: :k8s:run-kuttl-tests
        vars:
          KUTTL_CONFIG_FILE: '{{.KUTTL_CONFIG_FILE}}'

  kuttl-artifact-upload:
    desc: uploads artifact when kuttl fails
    summary: |
      kuttl-artifact-upload should be called in `defer` with EXIT_CODE.
      https://taskfile.dev/usage/#doing-task-cleanup-with-defer
      
      As buildkite pipeline step are wrapped with shell script, that executes
      docker run of a NIX container, where the permission are set to user of
      ID 0 (root). The buildkite agent executor can not resolve glob due to
      not sufficient permission. All invocation, within taskfile, of
      `buildkite-agent artifact upload` will have sufficient permission.
    vars:
      KUTTL_CONFIG_FILE: '{{default "kuttl-test.yaml" .KUTTL_CONFIG_FILE}}'
      KUTTL_ARTIFACTS_DIR:
        sh: |
          cat {{.KUTTL_CONFIG_FILE}} | grep artifactsDir | awk '{print $2}'
    cmds:
      - echo "Kuttl returned exit code {{.EXIT_CODE}}. Creating artifacts tarball"
      - tar -czf {{.KUTTL_ARTIFACTS_DIR | base}}.tar.gz {{.KUTTL_ARTIFACTS_DIR}}
      - buildkite-agent artifact upload "{{.SRC_DIR}}/operator/{{.KUTTL_ARTIFACTS_DIR | base}}.tar.gz"
      - buildkite-agent artifact upload "{{.SRC_DIR}}/operator/{{.KUTTL_ARTIFACTS_DIR}}/kuttl-report.xml"
    status:
      - exit {{.EXIT_CODE}}

  k8s:
    cmds:
      - task: run-k8s-tests
      - task: publish-k8s-operator-images

  k8s-v2-helm:
    cmds:
      - task: :k8s:create-v2-helm-tests
      - task: run-k8s-v2-helm-tests

  k8s-v2:
    cmds:
      - task: run-k8s-v2-tests

  run-k8s-v2-tests:
    cmds:
      - 'echo "~~~ Running operator v2 e2e tests :k8s:"'
      - task: configure-git-private-repo
      - task: :k8s:run-golangci-lint
      - task: :k8s:generate
      - task: :dev:update-licenses
      - task: assert-no-diffs
      - task: run-kuttl-tests
        vars:
          KUTTL_CONFIG_FILE: kuttl-v2-test.yaml

  run-k8s-v2-helm-tests:
    cmds:
      - 'echo "~~~ Running operator v2 helm-ci e2e tests :k8s:"'
      - task: configure-git-private-repo
      - task: run-kuttl-tests
        vars:
          KUTTL_CONFIG_FILE: kuttl-v2-helm-test.yaml

  run-k8s-tests:
    deps:
      # operator go test is using at least 2 k3d clusters which might exhaust limits of opened files
      - task: :k8s:set-aio-max
        vars:
          USE_SUDO: "false"
      - task: :k8s:set-inotify-watches
        vars:
          USE_SUDO: "false"
      - task: :k8s:set-inotify-instances
        vars:
          USE_SUDO: "false"
    cmds:
      - 'echo "~~~ Linting operator code :golangci-lint:"'
      - task: configure-git-private-repo
      - task: :k8s:run-golangci-lint
      - task: :k8s:generate
      - task: :dev:update-licenses
      - task: assert-no-diffs
      - 'echo "~~~ Run operator code unit tests :golang:"'
      - task: :k8s:run-unit-tests
      - 'echo "~~~ Running operator e2e tests :k8s:"'
      - task: run-kuttl-tests
    status:
      - test -n '{{.TAG_NAME}}' # skip on tagged commit builds

  run-k8s-tests-with-flags:
    cmds:
      - task: configure-git-private-repo
      - task: :k8s:generate
      - task: :dev:update-licenses
      - task: assert-no-diffs
      - 'echo "~~~ Running operator e2e tests :k8s:"'
      - task: run-kuttl-tests
        vars:
          KUTTL_CONFIG_FILE: kuttl-test-with-flags.yaml
    status:
      - test -n '{{.TAG_NAME}}' # skip on tagged commit builds


  publish-k8s-operator-images:
    cmds:
      - 'echo "~~~ Tagging and uploading images to Dockerhub :docker:"'
      - task: configure-git-private-repo
      - task: :k8s:build-tag-and-push-images
    status:
      - test -z '{{.TAG_NAME}}' # only run for tagged commits

  assert-no-diffs:
    desc: "Fail on any unexpected diffs to generated files (CI only)"
    cmds:
    - ls -lah # Debugging
    - ls -lah .git # Debugging
    - git status # Debugging
    - git diff --exit-code
    status:
      - test "$CI" != "true" # run only in CI as local runs may have unstaged changes.
