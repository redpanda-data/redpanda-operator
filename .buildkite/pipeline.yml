env:
  BRANCH_NAME: $BUILDKITE_BRANCH
  PULL_REQUEST: $BUILDKITE_PULL_REQUEST
  PULL_REQUEST_BASE_BRANCH_NAME: $BUILDKITE_PULL_REQUEST_BASE_BRANCH
  PIPELINE_NAME: $BUILDKITE_PIPELINE_NAME
  REDPANDA_GITREF: ${REDPANDA_COMMIT:-}

steps:
  - key: k8s-operator
    label: K8s Operator
    timeout_in_minutes: 180
    notify:
      - github_commit_status:
          context: k8s-operator
    commands:
      - |
        TAG_NAME=$(ci/scripts/tag-check.sh) ./ci/scripts/run-in-nix-docker.sh ./task ci:k8s
    agents:
      queue: amd64-builders
    artifact_paths:
      - src/go/k8s/*.tar.gz
      - src/go/k8s/tests/_e2e_artifacts/kuttl-report.xml

  - group: K8s Operator v2 Jobs
    if: |
      build.tag == null ||
      build.env("K8S_NIGHTLY") == "1"
    steps:
      - key: k8s-operator-v2
        label: K8s Operator v2
        timeout: 100
        notify:
          - github_commit_status:
              context: k8s-operator-v2
        commands:
          - ./ci/scripts/run-in-nix-docker.sh ./task ci:k8s-v2
        agents:
          queue: amd64-builders
        artifact_paths:
          - src/go/k8s/*.tar.gz
          - src/go/k8s/tests/_e2e_artifacts_v2/kuttl-report.xml

      - key: annotate-v2-testresults
        label: Parse Operator v2 Test Results
        plugins:
          - junit-annotate#v2.4.1:
              artifacts: src/go/k8s/tests/_e2e_artifacts_v2/kuttl-report.xml 
              report-slowest: 5
        timeout_in_minutes: 0
        agents:
          queue: k8s-builders
        depends_on: k8s-operator-v2
        allow_dependency_failure: true

  - group: K8s Operator v2 Helm Jobs
    if: |
      build.tag == null ||
      build.env("K8S_NIGHTLY") == "1"
    steps:
      - key: k8s-operator-v2-helm
        label: K8s Operator v2 Helm
        timeout_in_minutes: 50
        notify:
          - github_commit_status:
              context: k8s-operator-v2-helm
        commands:
           # The tests that are generated from `ci` folder of the Redpanda helm chart
           # generated too many test cases after introduction files with the `-novalues.yaml`
           # suffix. Those would not be taken by chart testing (`ct`) program, but
           # `hack/v2-helm-setup.sh` takes all files currently and disables only handful of them.
#          - ./ci/scripts/run-in-nix-docker.sh ./task ci:k8s-v2-helm
          - echo Noop
        agents:
          queue: amd64-builders
        artifact_paths:
          - src/go/k8s/*.tar.gz
          - src/go/k8s/tests/_e2e_helm_artifacts_v2/kuttl-report.xml

      - key: annotate-v2-helm-testresults
        label: Parse Operator v2 Helm Test Results
        plugins:
          - junit-annotate#v2.0.2:
              artifacts: src/go/k8s/tests/_e2e_helm_artifacts_v2/kuttl-report.xml
              report-slowest: 5
        timeout_in_minutes: 0
        agents:
          queue: k8s-builders
        depends_on: k8s-operator-v2-helm
        allow_dependency_failure: true
