// Copyright 2022 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// ClusterSourceApplyConfiguration represents an declarative configuration of the ClusterSource type for use
// with apply.
type ClusterSourceApplyConfiguration struct {
	ClusterRef          *ClusterRefApplyConfiguration                `json:"clusterRef,omitempty"`
	StaticConfiguration *StaticConfigurationSourceApplyConfiguration `json:"staticConfiguration,omitempty"`
}

// ClusterSourceApplyConfiguration constructs an declarative configuration of the ClusterSource type for use with
// apply.
func ClusterSource() *ClusterSourceApplyConfiguration {
	return &ClusterSourceApplyConfiguration{}
}

// WithClusterRef sets the ClusterRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterRef field is set to the value of the last call.
func (b *ClusterSourceApplyConfiguration) WithClusterRef(value *ClusterRefApplyConfiguration) *ClusterSourceApplyConfiguration {
	b.ClusterRef = value
	return b
}

// WithStaticConfiguration sets the StaticConfiguration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StaticConfiguration field is set to the value of the last call.
func (b *ClusterSourceApplyConfiguration) WithStaticConfiguration(value *StaticConfigurationSourceApplyConfiguration) *ClusterSourceApplyConfiguration {
	b.StaticConfiguration = value
	return b
}
