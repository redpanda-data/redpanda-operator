// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

import (
	v1 "k8s.io/api/core/v1"
)

// PasswordSourceApplyConfiguration represents an declarative configuration of the PasswordSource type for use
// with apply.
type PasswordSourceApplyConfiguration struct {
	SecretKeyRef *v1.SecretKeySelector `json:"secretKeyRef,omitempty"`
}

// PasswordSourceApplyConfiguration constructs an declarative configuration of the PasswordSource type for use with
// apply.
func PasswordSource() *PasswordSourceApplyConfiguration {
	return &PasswordSourceApplyConfiguration{}
}

// WithSecretKeyRef sets the SecretKeyRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecretKeyRef field is set to the value of the last call.
func (b *PasswordSourceApplyConfiguration) WithSecretKeyRef(value v1.SecretKeySelector) *PasswordSourceApplyConfiguration {
	b.SecretKeyRef = &value
	return b
}
