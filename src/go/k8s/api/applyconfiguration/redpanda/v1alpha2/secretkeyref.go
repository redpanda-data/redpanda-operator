// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// SecretKeyRefApplyConfiguration represents an declarative configuration of the SecretKeyRef type for use
// with apply.
type SecretKeyRefApplyConfiguration struct {
	Name *string `json:"name,omitempty"`
	Key  *string `json:"key,omitempty"`
}

// SecretKeyRefApplyConfiguration constructs an declarative configuration of the SecretKeyRef type for use with
// apply.
func SecretKeyRef() *SecretKeyRefApplyConfiguration {
	return &SecretKeyRefApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *SecretKeyRefApplyConfiguration) WithName(value string) *SecretKeyRefApplyConfiguration {
	b.Name = &value
	return b
}

// WithKey sets the Key field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Key field is set to the value of the last call.
func (b *SecretKeyRefApplyConfiguration) WithKey(value string) *SecretKeyRefApplyConfiguration {
	b.Key = &value
	return b
}
