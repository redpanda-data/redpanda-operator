// Copyright 2022 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "github.com/redpanda-data/redpanda-operator/src/go/k8s/api/redpanda/v1alpha2"
)

// ACLResourceSpecApplyConfiguration represents an declarative configuration of the ACLResourceSpec type for use
// with apply.
type ACLResourceSpecApplyConfiguration struct {
	Type        *v1alpha2.ResourceType `json:"type,omitempty"`
	Name        *string                `json:"name,omitempty"`
	PatternType *v1alpha2.PatternType  `json:"patternType,omitempty"`
}

// ACLResourceSpecApplyConfiguration constructs an declarative configuration of the ACLResourceSpec type for use with
// apply.
func ACLResourceSpec() *ACLResourceSpecApplyConfiguration {
	return &ACLResourceSpecApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *ACLResourceSpecApplyConfiguration) WithType(value v1alpha2.ResourceType) *ACLResourceSpecApplyConfiguration {
	b.Type = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ACLResourceSpecApplyConfiguration) WithName(value string) *ACLResourceSpecApplyConfiguration {
	b.Name = &value
	return b
}

// WithPatternType sets the PatternType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PatternType field is set to the value of the last call.
func (b *ACLResourceSpecApplyConfiguration) WithPatternType(value v1alpha2.PatternType) *ACLResourceSpecApplyConfiguration {
	b.PatternType = &value
	return b
}
