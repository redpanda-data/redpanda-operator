run:
  go: '1.22'
linters-settings:
  dupl:
    threshold: 100
  funlen:
    lines: 100
    statements: 50
  gci:
    sections:
    - standard
    - default
    - prefix(github.com/redpanda-data/redpanda-operator/src/go/k8s)
    skip-generated: true
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - opinionated
      - performance
      - style
  govet:
    check-shadowing: true
  maligned:
    suggest-new: true
  misspell:
    locale: US
  revive:
    confidence: 0.8

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - asciicheck
    - bodyclose
    - dogsled
    - dupl
    - errcheck
    - exhaustive
    - exportloopref
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - gofumpt
    - goimports
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - misspell
    - nakedret
    - nestif
    - noctx
    - revive
    - rowserrcheck
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unused
    - vet
    - whitespace

    # - funlen # Humans perform this check better and go is quite verbose in some cases.
    # - unparam # staticcheck and govet do a much better job with fewer false positives.
    # - prealloc # Better to have suboptimal code than needing to tell prealloc why we can't prealloc all the time.
    # - goerr113 # Not all errors need to be first classed
    # - testpackage # Being able to test unexported functions is useful

  # don't enable:
  # - gochecknoinits # the kubebuilder and kubernetes library enforce using init functions
  # - lll # the markers from controller-gen are 270 characters long
  # - depguard
  # - asciicheck
  # - gochecknoglobals
  # - gocognit
  # - godot
  # - gomnd
  # - godox
  # - maligned
  # - nestif
  # - prealloc
  # - wsl

issues:
  exclude-files:
    - internal/util/pod/pod.go
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)
    # staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
    - ineffective break statement. Did you mean to break out of the outer loop
    # gosec: Too many false-positives on 'unsafe' usage
    - Use of unsafe calls should be audited
    # gosec: Too many false-positives for parametrized shell calls
    - Subprocess launch(ed with variable|ing should be audited)
    # gosec: Duplicated errcheck checks
    - G104
    # gosec: Too many issues in popular repos
    - (Expect directory permissions to be 0750 or less|Expect file permissions to be 0600 or less)
    # gosec: False positive is triggered by 'src, err := ioutil.ReadFile(filename)'
    - Potential file inclusion via variable
  exclude-use-default: false
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - text: 'shadow: declaration of "(err|ctx)" shadows declaration at'
      linters: [ govet ]
    - path: _test\.go
      linters:
        - gomnd

    # https://github.com/go-critic/go-critic/issues/926
    - linters:
        - gocritic
      text: "unnecessaryDefer:"
