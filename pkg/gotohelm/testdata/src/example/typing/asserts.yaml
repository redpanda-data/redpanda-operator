{{- /* Generated from "asserts.go" */ -}}

{{- define "typing.typeTesting" -}}
{{- $dot := (index .a 0) -}}
{{- range $_ := (list 1) -}}
{{- $_is_returning := false -}}
{{- $t := (index $dot.Values "t") -}}
{{- $_19___ok_1 := (get (fromJson (include "_shims.typetest" (dict "a" (list "string" $t "") ))) "r") -}}
{{- $_ := (index $_19___ok_1 0) -}}
{{- $ok_1 := (index $_19___ok_1 1) -}}
{{- $_21___ok_2 := (get (fromJson (include "_shims.asintegral" (dict "a" (list $t) ))) "r") -}}
{{- $_ := ((index $_21___ok_2 0) | int) -}}
{{- $ok_2 := (index $_21___ok_2 1) -}}
{{- $_23___ok_3 := (get (fromJson (include "_shims.asnumeric" (dict "a" (list $t) ))) "r") -}}
{{- $_ := ((index $_23___ok_3 0) | float64) -}}
{{- $ok_3 := (index $_23___ok_3 1) -}}
{{- if $ok_1 -}}
{{- $_is_returning = true -}}
{{- (dict "r" "it's a string!") | toJson -}}
{{- break -}}
{{- else -}}{{- if $ok_2 -}}
{{- $_is_returning = true -}}
{{- (dict "r" "it's an int!") | toJson -}}
{{- break -}}
{{- else -}}{{- if $ok_3 -}}
{{- $_is_returning = true -}}
{{- (dict "r" "it's a float!") | toJson -}}
{{- break -}}
{{- end -}}
{{- end -}}
{{- end -}}
{{- $_is_returning = true -}}
{{- (dict "r" "it's something else!") | toJson -}}
{{- break -}}
{{- end -}}
{{- end -}}

{{- define "typing.typeAssertions" -}}
{{- $dot := (index .a 0) -}}
{{- range $_ := (list 1) -}}
{{- $_is_returning := false -}}
{{- $_is_returning = true -}}
{{- (dict "r" "Not yet supported") | toJson -}}
{{- break -}}
{{- end -}}
{{- end -}}

{{- define "typing.typeSwitching" -}}
{{- $dot := (index .a 0) -}}
{{- range $_ := (list 1) -}}
{{- $_is_returning := false -}}
{{- $_is_returning = true -}}
{{- (dict "r" "Not yet supported") | toJson -}}
{{- break -}}
{{- end -}}
{{- end -}}

