Manually crafted test cases for TestTemplate
-- default-values --
# Intentionally left blank. (test of default values)

-- console-with-role-bindings --
# console.roleBindings specified
config:
  authorization:
    roleBindings:
      - roleName: admin
        users:
          - loginType: OIDC
            name: "104753799096233778779" # Subject claim
      - roleName: viewer
        users:
          - loginType: basic
            name: "user@mycompany.com"

-- autoscaling-nulls --
# Autoscaling w/ explicit nulls
autoscaling:
  enabled: true
  targetCPUUtilizationPercentage: null
  targetMemoryUtilizationPercentage: null

-- autoscaling-cpu --
# Autoscaling w/ memory no cpu
autoscaling:
  enabled: true
  targetCPUUtilizationPercentage: null
  targetMemoryUtilizationPercentage: 10

-- autoscaling-memory --
# Autoscaling w/ cpu no memory
autoscaling:
  enabled: true
  targetCPUUtilizationPercentage: 14
  targetMemoryUtilizationPercentage: null

-- service-nodeport --
# Service type NodePort
service:
  type: "NodePort"
  targetPort: 2000

-- service-with-nodeport --
# Service w/ NodePort
service:
  type: "NodePort"
  nodePort: 1000
  annotations:
    hello: world

-- ingress-templating --
ingress:
 enabled: true
 annotations:
   ingress: test
 hosts:
 - host: '{{ "a-host" | quote }}'
   paths:
   - path: /
     pathType: Exact
 tls:
 - secretName: my-secret
   hosts:
   - '{{ "blah" | quote }}'

-- no-registry --
image:
  registry: ""

-- custom-tag-no-registry --
image:
  registry: ""
  tag: my-custom-tag

-- console-config-listen-port --
config:
  server:
    listenPort: 3333

-- console-config-listen-and-target-port --
service:
  targetPort: 4444
config:
  server:
    listenPort: 3333

-- extra-init-containers --
# NB: Many of the generated tests have an invalid value for extraInitContainers
# as it's just a string and render an error message. This case showcases what
# valid YAML looks like.
initContainers:
  extraInitContainers: |-
   - name: {{ "test-init-container" | quote }}
     image: "mintel/docker-alpine-bash-curl-jq:latest"
     command: [ "/bin/bash", "-c" ]
     args:
       - |
         set -xe
         echo "Hello {{ add 1 2 }}!"

-- console-with-oidc-conf --

extraEnvFrom:
  - secretRef:
      name: my-client-secret-oidc

extraVolumes:
  - name: oidc-issuer-tls
    secret:
      secretName: corporate-issuer-tls

extraVolumeMounts:
  - name: oidc-issuer-tls
    mountPath: /oidc-tls
    readOnly: true

config:
  authentication:
    oidc:
      enabled: true
      clientId: XYZ
      issuerUrl: my-oidc-issuer.com
      issuerTls:
        enabled: true
        caFilepath: /oidc-tls/ca.crt
        certFilepath: /oidc-tls/tls.crt
        keyFilepath: /oidc-tls/tls.key
        insecureSkipTlsVerify: false

-- service-account-automount-token-in-deployment-resource --
automountServiceAccountToken: false

# Console does not uses Kuberentes API, so mounting any service account token is pointless
# The default service account is not bound to any role nor cluster role.
extraVolumeMounts:
- name: kube-api-access-overwrite
  # Default path for kubernetes token where client go is checking
  mountPath: /var/run/secrets/kubernetes.io/serviceaccount

extraVolumes:
- name: kube-api-access-overwrite
  projected:
    defaultMode: 420
    sources:
    - serviceAccountToken:
        expirationSeconds: 666
        path: token
    - configMap:
        items:
        - key: ca.crt
          path: ca.crt
        name: some-kube-root-ca-config-map.crt
    - downwardAPI:
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
          path: namespace

-- service-account-automount-token-in-service-account-resource --
serviceAccount:
  automountServiceAccountToken: false

# Console does not uses Kuberentes API, so mounting any service account token is pointless
# The default service account is not bound to any role nor cluster role.
extraVolumeMounts:
- name: kube-api-access-overwrite
  # Default path for kubernetes token where client go is checking
  mountPath: /var/run/secrets/kubernetes.io/serviceaccount

extraVolumes:
- name: kube-api-access-overwrite
  projected:
    defaultMode: 420
    sources:
    - serviceAccountToken:
        expirationSeconds: 666
        path: token
    - configMap:
        items:
        - key: ca.crt
          path: ca.crt
        name: some-kube-root-ca-config-map.crt
    - downwardAPI:
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
          path: namespace
