version: '3'

# if a task is referenced multiple times, only run it once
run: once

vars:
  SRC_DIR:
    sh: 'realpath {{default "." .SRC_DIR}}'
  BUILD_ROOT:
    sh: 'realpath {{default ".build" .BUILD_ROOT}}'

includes:
  ci: taskfiles/ci.yml
  k8s: taskfiles/k8s.yml
  dev: taskfiles/dev.yml
  goreleaser: taskfiles/goreleaser.yml
  charts: taskfiles/charts.yml

tasks:
  lint:
    var:
      ARGS: ""
    cmds:
      # NB: go list -f takes a go template string, It needs to be escaped in
      # taskfile land to get properly passed to go list.
      - golangci-lint run --timeout 28m $(go list -f '{{"{{.Dir}}"}}/...' -m) {{.CLI_ARGS}}
      - ct lint --chart-dirs ./charts --check-version-increment=false --all
      - task: test
        vars:
          PKG: './pkg/lint'

  lint-fix:
    cmds:
      - task: lint
        vars:
          CLI_ARGS: "--fix"

  mod:tidy:
    cmds:
    - go list -f '{{"{{.Dir}}"}}' -m | xargs -L1 go mod tidy -C
    - go work sync

  fmt:
    cmds:
      - gofumpt -w ./

  generate:
    cmds:
      - task: charts:generate
      # update-licenses may update licenses/boilerplate.go.txt which is used
      # for _some_ of k8s:generate. For simplicity, we just run update-licenses
      # twice.
      - task: dev:update-licenses
      - task: k8s:generate
      - task: dev:update-licenses
      # Ensure flake.nix has been formatted.
      - nix fmt

  build:
    cmds:
      - task: build:binaries

  build:binaries:
    cmds:
      # TODO(chrisseto): Ditch goreleaser in favor of just go build in task
      # files. We're not using it for anything other than an arch build matrix.
      - task: goreleaser:build-operator-binaries

  build:images:
    cmds:
      - task: k8s:build-operator-images

  test:
    vars:
      PKG: '{{default "./..." .PKG}}'
      GO_TEST_RUNNER: '{{default "go test" .GO_TEST_RUNNER}}'
    cmds:
    - "{{.GO_TEST_RUNNER}} {{.CLI_FLAGS}} {{.PKG}}"
