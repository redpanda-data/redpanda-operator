version: '3'

# if a task is referenced multiple times, only run it once
run: once

vars:
  SRC_DIR:
    sh: 'realpath {{default "." .SRC_DIR}}'
  BUILD_ROOT:
    sh: 'realpath {{default ".build" .BUILD_ROOT}}'
  _PKG:
    sh: go work edit -json | jq -j '[.Use[].DiskPath+"/..."]|join(" ")'
  PKG: '{{default ._PKG .PKG}}'

includes:
  ci: taskfiles/ci.yml
  k8s: taskfiles/k8s.yml
  dev: taskfiles/dev.yml
  goreleaser: taskfiles/goreleaser.yml
  charts: taskfiles/charts.yml

tasks:
  lint:
    cmds:
      - golangci-lint run --timeout 28m {{.PKG}} {{.CLI_ARGS}}
      - ct lint --chart-dirs ./charts --check-version-increment=false --all
      - task: test:unit
        vars:
          PKG: './pkg/lint'
          CLI_ARGS: ''

  lint-fix:
    cmds:
      - task: lint
        vars:
          CLI_ARGS: "--fix"

  mod:tidy:
    cmds:
    - go list -f '{{"{{.Dir}}"}}' -m | xargs -L1 go mod tidy -C
    - go work sync

  fmt:
    cmds:
      - gofumpt -w ./

  generate:
    cmds:
      - task: charts:generate
      # update-licenses may update licenses/boilerplate.go.txt which is used
      # for _some_ of k8s:generate. For simplicity, we just run update-licenses
      # twice.
      - task: dev:update-licenses
      - task: k8s:generate
      - task: dev:update-licenses
      - task: generate:third-party-licenses-list
      - task: generate:changelog
      - nix fmt # Ensure flake.nix has been formatted.

  generate:third-party-licenses-list:
    generates:
    - licenses/third_party.md
    sources:
    - ./**/go.mod
    - ./**/go.sum
    cmds:
    # Our own packages should not be reported as third party license
    # The example.com/example depedency is ignored as it's part of the
    # gotohelm test suite (visit ./pkg/gotohelm/testdata/src/example/go.mod)
    - |
      go-licenses report {{.PKG}} --template licenses/third_party.md.tpl \
      --ignore buf.build/gen/go/redpandadata \
      --ignore example.com/example \
      --ignore github.com/redpanda-data/common-go \
      --ignore github.com/redpanda-data/console/backend \
      --ignore github.com/redpanda-data/redpanda \
      --ignore github.com/redpanda-data/redpanda-operator > licenses/third_party.md

  generate:changelog:
    generates:
    - charts/*/CHANGELOG.md
    - operator/CHANGELOG.md
    sources:
    - ./.changes/**/*.md
    - ./.changes/**/*.yaml
    cmds:
    - changie merge -u '## Unreleased' # Ensure CHANGELOG.mds are up to date.

  build:
    cmds:
      - task: build:binaries

  build:binaries:
    cmds:
      # TODO(chrisseto): Ditch goreleaser in favor of just go build in task
      # files. We're not using it for anything other than an arch build matrix.
      - task: goreleaser:build-operator-binaries

  build:images:
    cmds:
      - task: k8s:build-operator-images

  test:unit:
    vars:
      GO_TEST_RUNNER: '{{default "go test" .GO_TEST_RUNNER}}'
    cmds:
    - '{{.GO_TEST_RUNNER}} {{.CLI_ARGS}} {{.PKG}}'

  test:integration:
    cmds:
    - task: test:unit
      vars:
        GO_TEST_RUNNER:
          ref: .GO_TEST_RUNNER
        CLI_ARGS: '{{.CLI_ARGS}} -run "^TestIntegration" -timeout 35m -tags integration'

  test:acceptance:
    vars:
      GO_TEST_RUNNER: '{{default "go test" .GO_TEST_RUNNER}}'
      CLI_ARGS: '{{.CLI_ARGS}} -tags=acceptance -run "^TestAcceptance" -timeout 20m -v'
    cmds:
    - task: k8s:build-operator-images
    - kind delete cluster --name acceptance || true
    - kind create cluster --name acceptance
    - defer: kind delete cluster --name acceptance
    - kind load --name acceptance docker-image localhost/redpanda-operator:dev localhost/configurator:dev
    - '{{.GO_TEST_RUNNER}} {{.CLI_ARGS}} ./acceptance'
