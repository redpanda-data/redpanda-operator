-- basic-test --
pools: []
values:
  auditLogging:
    clientMaxBufferSize: 16777216
    enabled: false
    enabledEventTypes: null
    excludedPrincipals: null
    excludedTopics: null
    listener: internal
    partitions: 12
    queueDrainIntervalMs: 500
    queueMaxBufferSizePerShard: 1048576
    replicationFactor: 0
  auth:
    sasl:
      bootstrapUser:
        mechanism: SCRAM-SHA-256
        name: null
        password: null
        secretKeyRef: null
      enabled: false
      mechanism: SCRAM-SHA-512
      secretRef: redpanda-users
      users: []
  clusterDomain: cluster.local.
  commonLabels: {}
  config:
    cluster: {}
    extraClusterConfiguration: {}
    node:
      crash_loop_limit: 5
    pandaproxy_client:
      consumer_heartbeat_interval_ms: 0
      consumer_rebalance_timeout_ms: 0
      consumer_request_max_bytes: 0
      consumer_request_timeout_ms: 0
      consumer_session_timeout_ms: 0
      produce_batch_delay_ms: 0
      produce_batch_record_count: 0
      produce_batch_size_bytes: 0
      retries: 0
      retry_base_backoff_ms: 0
    rpk: {}
    schema_registry_client:
      consumer_heartbeat_interval_ms: 0
      consumer_rebalance_timeout_ms: 0
      consumer_request_max_bytes: 0
      consumer_request_timeout_ms: 0
      consumer_session_timeout_ms: 0
      produce_batch_delay_ms: 0
      produce_batch_record_count: 0
      produce_batch_size_bytes: 0
      retries: 0
      retry_base_backoff_ms: 0
    tunable:
      compacted_log_segment_size: 67108864
      kafka_connection_rate_limit: 1000
      log_segment_size_max: 268435456
      log_segment_size_min: 16777216
      max_compacted_log_segment_size: 536870912
  console:
    affinity: {}
    automountServiceAccountToken: false
    autoscaling:
      enabled: false
      maxReplicas: 100
      minReplicas: 1
      targetCPUUtilizationPercentage: 80
    configmap:
      create: false
    deployment:
      create: false
    enabled: true
    fullnameOverride: ""
    image:
      pullPolicy: IfNotPresent
      registry: docker.redpanda.com
      repository: redpandadata/console
      tag: ""
    ingress:
      enabled: false
      hosts:
      - host: chart-example.local
        paths:
        - path: /
          pathType: ImplementationSpecific
    initContainers:
      extraInitContainers: ""
    livenessProbe:
      failureThreshold: 3
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    nameOverride: ""
    podSecurityContext:
      fsGroup: 99
      fsGroupChangePolicy: Always
      runAsUser: 99
    priorityClassName: ""
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    replicaCount: 1
    resources: {}
    secret:
      authentication:
        jwtSigningKey: ""
        oidc: {}
      create: false
      kafka: {}
      license: ""
      redpanda:
        adminApi: {}
      schemaRegistry: {}
      serde: {}
    securityContext:
      runAsNonRoot: true
    service:
      port: 8080
      type: ClusterIP
    serviceAccount:
      automountServiceAccountToken: false
      create: true
      name: ""
    strategy: {}
    tests:
      enabled: true
  enterprise:
    license: ""
  external:
    addresses: null
    annotations: null
    domain: null
    enabled: true
    externalDns: null
    prefixTemplate: ""
    service:
      enabled: true
    sourceRanges: null
    type: NodePort
  force: false
  fullnameOverride: ""
  image:
    repository: redpandadata/redpanda
    tag: v25.2.1
  license_key: ""
  listeners:
    admin:
      enabled: false
      external:
        default:
          advertisedPorts:
          - 31644
          enabled: null
          nodePort: null
          port: 9645
          tls:
            cert: external
            enabled: null
            requireClientAuth: null
            trustStore: null
      port: 9644
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
    http:
      enabled: true
      external:
        default:
          advertisedPorts:
          - 30082
          enabled: null
          nodePort: null
          port: 8083
          tls:
            cert: external
            enabled: null
            requireClientAuth: false
            trustStore: null
      port: 8082
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
    kafka:
      enabled: false
      external:
        default:
          advertisedPorts:
          - 31092
          enabled: null
          nodePort: null
          port: 9094
          tls:
            cert: external
            enabled: null
            requireClientAuth: null
            trustStore: null
      port: 9093
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
    rpc:
      port: 33145
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
    schemaRegistry:
      enabled: true
      external:
        default:
          advertisedPorts:
          - 30081
          enabled: null
          nodePort: null
          port: 8084
          tls:
            cert: external
            enabled: null
            requireClientAuth: false
            trustStore: null
      port: 8081
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
  logging:
    logLevel: info
    usageStats:
      clusterId: null
      enabled: true
  monitoring:
    enableHttp2: null
    enabled: false
    labels: {}
    scrapeInterval: 30s
    tlsConfig: null
  nameOverride: ""
  podTemplate:
    spec:
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
        runAsUser: 101
  post_install_job:
    annotations: null
    enabled: true
    labels: null
    podTemplate:
      spec:
        containers:
        - name: post-install
          securityContext: {}
        securityContext: {}
  rackAwareness:
    enabled: false
    nodeAnnotation: topology.kubernetes.io/zone
  rbac:
    annotations: {}
    enabled: true
    rpkDebugBundle: true
  resources:
    cpu:
      cores: "1"
      overprovisioned: null
    memory:
      container:
        max: 2560Mi
        min: null
      enable_memory_locking: null
      redpanda: null
  service: null
  serviceAccount:
    annotations: {}
    create: true
    name: ""
  statefulset:
    additionalRedpandaCmdFlags: []
    additionalSelectorLabels: {}
    budget:
      maxUnavailable: 1
    initContainerImage:
      repository: busybox
      tag: latest
    initContainers:
      configurator: {}
      fsValidator:
        enabled: false
        expectedFS: xfs
      setDataDirOwnership:
        enabled: false
    podAntiAffinity:
      custom: {}
      topologyKey: kubernetes.io/hostname
      type: hard
      weight: 100
    podTemplate:
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: '{{ include "redpanda.name" . }}-statefulset'
                  app.kubernetes.io/instance: '{{ .Release.Name }}'
                  app.kubernetes.io/name: '{{ include "redpanda.name" . }}'
              topologyKey: kubernetes.io/hostname
        containers:
        - name: redpanda
        - name: sidecar
        initContainers:
        - name: redpanda-configurator
        priorityClassName: ""
        securityContext: {}
        terminationGracePeriodSeconds: 90
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: '{{ include "redpanda.name" . }}-statefulset'
              app.kubernetes.io/instance: '{{ .Release.Name }}'
              app.kubernetes.io/name: '{{ include "redpanda.name" . }}'
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
    replicas: 3
    sideCars:
      args:
      - --no-set-superusers
      brokerDecommissioner:
        decommissionAfter: 60s
        decommissionRequeueTimeout: 10s
        enabled: false
      configWatcher:
        enabled: true
      controllers:
        createRBAC: true
        enabled: false
        healthProbeAddress: :8085
        image:
          repository: localhost/redpanda-operator
          tag: dev
        metricsAddress: :9082
        pprofAddress: :9083
        run:
        - all
      image:
        repository: localhost/redpanda-operator
        tag: dev
      pvcUnbinder:
        enabled: false
        unbindAfter: 60s
    updateStrategy:
      type: RollingUpdate
  storage:
    hostPath: ""
    persistentVolume:
      annotations: {}
      enabled: true
      labels: {}
      nameOverwrite: ""
      size: 20Gi
      storageClass: ""
    tiered:
      config:
        cloud_storage_cache_size: 5368709120
        cloud_storage_enable_remote_read: true
        cloud_storage_enable_remote_write: true
        cloud_storage_enabled: false
      credentialsSecretRef:
        accessKey:
          configurationKey: cloud_storage_access_key
          key: ""
          name: ""
        secretKey:
          configurationKey: cloud_storage_secret_key
          key: ""
          name: ""
      hostPath: ""
      mountType: none
      persistentVolume:
        annotations: {}
        enabled: false
        labels: {}
        nameOverwrite: ""
        size: ""
        storageClass: ""
    tieredConfig: null
    tieredStorageHostPath: ""
    tieredStoragePersistentVolume: null
  tests:
    enabled: true
  tls:
    certs:
      default:
        applyInternalDNSNames: null
        caEnabled: true
        clientSecretRef: null
        duration: ""
        enabled: null
        issuerRef: null
        secretRef: null
      external:
        applyInternalDNSNames: null
        caEnabled: true
        clientSecretRef: null
        duration: ""
        enabled: null
        issuerRef: null
        secretRef: null
    enabled: true
  tuning:
    tune_aio_events: true
-- compat-test --
pools:
- Generation: "0"
  Name: pool
  Statefulset:
    additionalRedpandaCmdFlags: []
    additionalSelectorLabels: {}
    budget:
      maxUnavailable: 1
    initContainerImage:
      repository: public.ecr.aws/docker/library/busybox
      tag: 1.36-glibc@sha256:e046063223f7eaafbfbc026aa3954d9a31b9f1053ba5db04a4f1fdc97abd8963
    initContainers:
      configurator:
        additionalCLIArgs:
        - foo
        - bar
        - baz
      fsValidator:
        enabled: true
        expectedFS: xfs
      setDataDirOwnership:
        enabled: true
    podAntiAffinity:
      custom: {}
      topologyKey: kubernetes.io/hostname
      type: hard
      weight: 100
    podTemplate:
      labels:
        azure.workload.identity/use: "true"
        cloud.redpanda.com/network-loadbalancer-access: "true"
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/agentpool
                  operator: In
                  values:
                  - pool
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: redpanda-node-readiness
                  operator: DoesNotExist
              namespaces:
              - redpanda-node-setup
              topologyKey: kubernetes.io/hostname
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: '{{ include "redpanda.name" . }}-pool-statefulset'
                  app.kubernetes.io/instance: '{{ .Release.Name }}'
                  app.kubernetes.io/name: '{{ include "redpanda.name" . }}'
              topologyKey: kubernetes.io/hostname
        containers:
        - name: sidecar
          resources:
            requests:
              cpu: 16m
              memory: 64Mi
        - args:
          - --memory=1G
          - --reserve-memory=1G
          image: foo:bar
          name: redpanda
        initContainers:
        - name: fs-validator
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 16m
              memory: 256Mi
        - command:
          - /bin/sh
          - -c
          - chown 65534:65534 -R /var/lib/redpanda/data
          name: set-datadir-ownership
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 16m
              memory: 128Mi
          volumeMounts:
          - mountPath: /var/lib/redpanda/data
            name: datadir
        - name: redpanda-configuraor
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 16m
              memory: 256Mi
        - image: foo:bar
          name: redpanda-configurator
        - image: foo:bar
          name: tuning
        nodeSelector:
          foo: bar
        priorityClassName: some-priority-class
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "1"
            memory: 1Gi
        securityContext:
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        terminationGracePeriodSeconds: 90
        tolerations:
        - key: Some/Toleration
          operator: Equal
          value: "true"
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: '{{ include "redpanda.name" . }}-pool-statefulset'
              app.kubernetes.io/instance: '{{ .Release.Name }}'
              app.kubernetes.io/name: '{{ include "redpanda.name" . }}'
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            name: redpanda-truststore.crt
            optional: false
          name: redpanda-truststore
    replicas: 9
    sideCars:
      args: []
      brokerDecommissioner:
        decommissionAfter: 60s
        decommissionRequeueTimeout: 10s
        enabled: false
      configWatcher:
        enabled: true
      controllers:
        createRBAC: true
        enabled: false
        healthProbeAddress: :8085
        image: null
        metricsAddress: :9082
        pprofAddress: :9083
        run:
        - all
      image:
        repository: localhost/redpanda-operator
        tag: dev
      pvcUnbinder:
        enabled: false
        unbindAfter: 60s
    updateStrategy:
      type: RollingUpdate
values:
  auditLogging:
    clientMaxBufferSize: 16777216
    enabled: false
    enabledEventTypes: null
    excludedPrincipals: null
    excludedTopics: null
    listener: internal
    partitions: 12
    queueDrainIntervalMs: 500
    queueMaxBufferSizePerShard: 1048576
    replicationFactor: 0
  auth:
    sasl:
      bootstrapUser:
        mechanism: SCRAM-SHA-256
        name: null
        password: null
        secretKeyRef: null
      enabled: false
      mechanism: SCRAM-SHA-512
      secretRef: redpanda-users
      users: []
  clusterDomain: cluster.local.
  commonLabels: {}
  config:
    cluster: {}
    extraClusterConfiguration: {}
    node:
      crash_loop_limit: 5
    pandaproxy_client:
      consumer_heartbeat_interval_ms: 0
      consumer_rebalance_timeout_ms: 0
      consumer_request_max_bytes: 0
      consumer_request_timeout_ms: 0
      consumer_session_timeout_ms: 0
      produce_batch_delay_ms: 0
      produce_batch_record_count: 0
      produce_batch_size_bytes: 0
      retries: 0
      retry_base_backoff_ms: 0
    rpk: {}
    schema_registry_client:
      consumer_heartbeat_interval_ms: 0
      consumer_rebalance_timeout_ms: 0
      consumer_request_max_bytes: 0
      consumer_request_timeout_ms: 0
      consumer_session_timeout_ms: 0
      produce_batch_delay_ms: 0
      produce_batch_record_count: 0
      produce_batch_size_bytes: 0
      retries: 0
      retry_base_backoff_ms: 0
    tunable:
      compacted_log_segment_size: 67108864
      kafka_connection_rate_limit: 1000
      log_segment_size_max: 268435456
      log_segment_size_min: 16777216
      max_compacted_log_segment_size: 536870912
  console:
    affinity: {}
    automountServiceAccountToken: false
    autoscaling:
      enabled: false
      maxReplicas: 100
      minReplicas: 1
      targetCPUUtilizationPercentage: 80
    configmap:
      create: false
    deployment:
      create: false
    enabled: true
    fullnameOverride: ""
    image:
      pullPolicy: IfNotPresent
      registry: docker.redpanda.com
      repository: redpandadata/console
      tag: ""
    ingress:
      enabled: false
      hosts:
      - host: chart-example.local
        paths:
        - path: /
          pathType: ImplementationSpecific
    initContainers:
      extraInitContainers: ""
    livenessProbe:
      failureThreshold: 3
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    nameOverride: ""
    podSecurityContext:
      fsGroup: 99
      fsGroupChangePolicy: Always
      runAsUser: 99
    priorityClassName: ""
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    replicaCount: 1
    resources: {}
    secret:
      authentication:
        jwtSigningKey: ""
        oidc: {}
      create: false
      kafka: {}
      license: ""
      redpanda:
        adminApi: {}
      schemaRegistry: {}
      serde: {}
    securityContext:
      runAsNonRoot: true
    service:
      port: 8080
      type: ClusterIP
    serviceAccount:
      automountServiceAccountToken: false
      create: true
      name: ""
    strategy: {}
    tests:
      enabled: true
  enterprise:
    license: ""
  external:
    addresses: null
    annotations: null
    domain: null
    enabled: true
    externalDns: null
    prefixTemplate: ""
    service:
      enabled: true
    sourceRanges: null
    type: NodePort
  force: false
  fullnameOverride: ""
  image:
    repository: redpandadata/redpanda
    tag: v25.2.1
  license_key: ""
  listeners:
    admin:
      enabled: false
      external:
        default:
          advertisedPorts:
          - 31644
          enabled: null
          nodePort: null
          port: 9645
          tls:
            cert: external
            enabled: null
            requireClientAuth: null
            trustStore: null
      port: 9644
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
    http:
      enabled: true
      external:
        default:
          advertisedPorts:
          - 30082
          enabled: null
          nodePort: null
          port: 8083
          tls:
            cert: external
            enabled: null
            requireClientAuth: false
            trustStore: null
      port: 8082
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
    kafka:
      enabled: false
      external:
        default:
          advertisedPorts:
          - 31092
          enabled: null
          nodePort: null
          port: 9094
          tls:
            cert: external
            enabled: null
            requireClientAuth: null
            trustStore: null
      port: 9093
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
    rpc:
      port: 33145
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
    schemaRegistry:
      enabled: true
      external:
        default:
          advertisedPorts:
          - 30081
          enabled: null
          nodePort: null
          port: 8084
          tls:
            cert: external
            enabled: null
            requireClientAuth: false
            trustStore: null
      port: 8081
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
  logging:
    logLevel: info
    usageStats:
      clusterId: null
      enabled: true
  monitoring:
    enableHttp2: null
    enabled: false
    labels: {}
    scrapeInterval: 30s
    tlsConfig: null
  nameOverride: ""
  podTemplate:
    spec:
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
        runAsUser: 101
  post_install_job:
    annotations: null
    enabled: true
    labels: null
    podTemplate:
      spec:
        containers:
        - name: post-install
          securityContext: {}
        securityContext: {}
  rackAwareness:
    enabled: false
    nodeAnnotation: topology.kubernetes.io/zone
  rbac:
    annotations: {}
    enabled: true
    rpkDebugBundle: true
  resources:
    cpu:
      cores: "1"
      overprovisioned: null
    memory:
      container:
        max: 2560Mi
        min: null
      enable_memory_locking: null
      redpanda: null
  service: null
  serviceAccount:
    annotations: {}
    create: true
    name: ""
  statefulset:
    additionalRedpandaCmdFlags: []
    additionalSelectorLabels: {}
    budget:
      maxUnavailable: 1
    initContainerImage:
      repository: busybox
      tag: latest
    initContainers:
      configurator: {}
      fsValidator:
        enabled: false
        expectedFS: xfs
      setDataDirOwnership:
        enabled: false
    podAntiAffinity:
      custom: {}
      topologyKey: kubernetes.io/hostname
      type: hard
      weight: 100
    podTemplate:
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: '{{ include "redpanda.name" . }}-statefulset'
                  app.kubernetes.io/instance: '{{ .Release.Name }}'
                  app.kubernetes.io/name: '{{ include "redpanda.name" . }}'
              topologyKey: kubernetes.io/hostname
        containers:
        - name: redpanda
        - name: sidecar
        initContainers:
        - name: redpanda-configurator
        priorityClassName: ""
        securityContext: {}
        terminationGracePeriodSeconds: 90
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: '{{ include "redpanda.name" . }}-statefulset'
              app.kubernetes.io/instance: '{{ .Release.Name }}'
              app.kubernetes.io/name: '{{ include "redpanda.name" . }}'
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
    replicas: 0
    sideCars:
      args:
      - --no-set-superusers
      brokerDecommissioner:
        decommissionAfter: 60s
        decommissionRequeueTimeout: 10s
        enabled: false
      configWatcher:
        enabled: true
      controllers:
        createRBAC: true
        enabled: false
        healthProbeAddress: :8085
        image:
          repository: localhost/redpanda-operator
          tag: dev
        metricsAddress: :9082
        pprofAddress: :9083
        run:
        - all
      image:
        repository: localhost/redpanda-operator
        tag: dev
      pvcUnbinder:
        enabled: false
        unbindAfter: 60s
    updateStrategy:
      type: RollingUpdate
  storage:
    hostPath: ""
    persistentVolume:
      annotations: {}
      enabled: true
      labels: {}
      nameOverwrite: ""
      size: 20Gi
      storageClass: ""
    tiered:
      config:
        cloud_storage_cache_size: 5368709120
        cloud_storage_enable_remote_read: true
        cloud_storage_enable_remote_write: true
        cloud_storage_enabled: false
      credentialsSecretRef:
        accessKey:
          configurationKey: cloud_storage_access_key
          key: ""
          name: ""
        secretKey:
          configurationKey: cloud_storage_secret_key
          key: ""
          name: ""
      hostPath: ""
      mountType: none
      persistentVolume:
        annotations: {}
        enabled: false
        labels: {}
        nameOverwrite: ""
        size: ""
        storageClass: ""
    tieredConfig: null
    tieredStorageHostPath: ""
    tieredStoragePersistentVolume: null
  tests:
    enabled: true
  tls:
    certs:
      default:
        applyInternalDNSNames: null
        caEnabled: true
        clientSecretRef: null
        duration: ""
        enabled: null
        issuerRef: null
        secretRef: null
      external:
        applyInternalDNSNames: null
        caEnabled: true
        clientSecretRef: null
        duration: ""
        enabled: null
        issuerRef: null
        secretRef: null
    enabled: true
  tuning:
    tune_aio_events: true
-- nodepool-basic-test --
pools:
- Generation: "0"
  Name: basic
  Statefulset:
    additionalRedpandaCmdFlags: []
    additionalSelectorLabels: {}
    budget:
      maxUnavailable: 1
    initContainerImage:
      repository: busybox
      tag: latest
    initContainers:
      configurator: {}
      fsValidator:
        enabled: false
        expectedFS: xfs
      setDataDirOwnership:
        enabled: false
    podAntiAffinity:
      custom: {}
      topologyKey: kubernetes.io/hostname
      type: hard
      weight: 100
    podTemplate:
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: '{{ include "redpanda.name" . }}-basic-statefulset'
                  app.kubernetes.io/instance: '{{ .Release.Name }}'
                  app.kubernetes.io/name: '{{ include "redpanda.name" . }}'
              topologyKey: kubernetes.io/hostname
        containers:
        - image: redpandadata/redpanda:v25.2.1
          name: redpanda
        initContainers:
        - image: redpandadata/redpanda:v25.2.1
          name: redpanda-configurator
        - image: redpandadata/redpanda:v25.2.1
          name: tuning
        priorityClassName: ""
        securityContext: {}
        terminationGracePeriodSeconds: 90
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: '{{ include "redpanda.name" . }}-basic-statefulset'
              app.kubernetes.io/instance: '{{ .Release.Name }}'
              app.kubernetes.io/name: '{{ include "redpanda.name" . }}'
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
    replicas: 1
    sideCars:
      args: []
      brokerDecommissioner:
        decommissionAfter: 60s
        decommissionRequeueTimeout: 10s
        enabled: false
      configWatcher:
        enabled: true
      controllers:
        createRBAC: true
        enabled: false
        healthProbeAddress: :8085
        image: null
        metricsAddress: :9082
        pprofAddress: :9083
        run:
        - all
      image:
        repository: localhost/test
        tag: dev
      pvcUnbinder:
        enabled: false
        unbindAfter: 60s
    updateStrategy:
      type: RollingUpdate
values:
  auditLogging:
    clientMaxBufferSize: 16777216
    enabled: false
    enabledEventTypes: null
    excludedPrincipals: null
    excludedTopics: null
    listener: internal
    partitions: 12
    queueDrainIntervalMs: 500
    queueMaxBufferSizePerShard: 1048576
    replicationFactor: 0
  auth:
    sasl:
      bootstrapUser:
        mechanism: SCRAM-SHA-256
        name: null
        password: null
        secretKeyRef: null
      enabled: false
      mechanism: SCRAM-SHA-512
      secretRef: redpanda-users
      users: []
  clusterDomain: cluster.local.
  commonLabels: {}
  config:
    cluster: {}
    extraClusterConfiguration: {}
    node:
      crash_loop_limit: 5
    pandaproxy_client:
      consumer_heartbeat_interval_ms: 0
      consumer_rebalance_timeout_ms: 0
      consumer_request_max_bytes: 0
      consumer_request_timeout_ms: 0
      consumer_session_timeout_ms: 0
      produce_batch_delay_ms: 0
      produce_batch_record_count: 0
      produce_batch_size_bytes: 0
      retries: 0
      retry_base_backoff_ms: 0
    rpk: {}
    schema_registry_client:
      consumer_heartbeat_interval_ms: 0
      consumer_rebalance_timeout_ms: 0
      consumer_request_max_bytes: 0
      consumer_request_timeout_ms: 0
      consumer_session_timeout_ms: 0
      produce_batch_delay_ms: 0
      produce_batch_record_count: 0
      produce_batch_size_bytes: 0
      retries: 0
      retry_base_backoff_ms: 0
    tunable:
      compacted_log_segment_size: 67108864
      kafka_connection_rate_limit: 1000
      log_segment_size_max: 268435456
      log_segment_size_min: 16777216
      max_compacted_log_segment_size: 536870912
  console:
    affinity: {}
    automountServiceAccountToken: false
    autoscaling:
      enabled: false
      maxReplicas: 100
      minReplicas: 1
      targetCPUUtilizationPercentage: 80
    configmap:
      create: false
    deployment:
      create: false
    enabled: true
    fullnameOverride: ""
    image:
      pullPolicy: IfNotPresent
      registry: docker.redpanda.com
      repository: redpandadata/console
      tag: ""
    ingress:
      enabled: false
      hosts:
      - host: chart-example.local
        paths:
        - path: /
          pathType: ImplementationSpecific
    initContainers:
      extraInitContainers: ""
    livenessProbe:
      failureThreshold: 3
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    nameOverride: ""
    podSecurityContext:
      fsGroup: 99
      fsGroupChangePolicy: Always
      runAsUser: 99
    priorityClassName: ""
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    replicaCount: 1
    resources: {}
    secret:
      authentication:
        jwtSigningKey: ""
        oidc: {}
      create: false
      kafka: {}
      license: ""
      redpanda:
        adminApi: {}
      schemaRegistry: {}
      serde: {}
    securityContext:
      runAsNonRoot: true
    service:
      port: 8080
      type: ClusterIP
    serviceAccount:
      automountServiceAccountToken: false
      create: true
      name: ""
    strategy: {}
    tests:
      enabled: true
  enterprise:
    license: ""
  external:
    addresses: null
    annotations: null
    domain: null
    enabled: true
    externalDns: null
    prefixTemplate: ""
    service:
      enabled: true
    sourceRanges: null
    type: NodePort
  force: false
  fullnameOverride: ""
  image:
    repository: redpandadata/redpanda
    tag: v25.2.1
  license_key: ""
  listeners:
    admin:
      enabled: false
      external:
        default:
          advertisedPorts:
          - 31644
          enabled: null
          nodePort: null
          port: 9645
          tls:
            cert: external
            enabled: null
            requireClientAuth: null
            trustStore: null
      port: 9644
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
    http:
      enabled: true
      external:
        default:
          advertisedPorts:
          - 30082
          enabled: null
          nodePort: null
          port: 8083
          tls:
            cert: external
            enabled: null
            requireClientAuth: false
            trustStore: null
      port: 8082
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
    kafka:
      enabled: false
      external:
        default:
          advertisedPorts:
          - 31092
          enabled: null
          nodePort: null
          port: 9094
          tls:
            cert: external
            enabled: null
            requireClientAuth: null
            trustStore: null
      port: 9093
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
    rpc:
      port: 33145
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
    schemaRegistry:
      enabled: true
      external:
        default:
          advertisedPorts:
          - 30081
          enabled: null
          nodePort: null
          port: 8084
          tls:
            cert: external
            enabled: null
            requireClientAuth: false
            trustStore: null
      port: 8081
      tls:
        cert: default
        enabled: null
        requireClientAuth: false
        trustStore: null
  logging:
    logLevel: info
    usageStats:
      clusterId: null
      enabled: true
  monitoring:
    enableHttp2: null
    enabled: false
    labels: {}
    scrapeInterval: 30s
    tlsConfig: null
  nameOverride: ""
  podTemplate:
    spec:
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
        runAsUser: 101
  post_install_job:
    annotations: null
    enabled: true
    labels: null
    podTemplate:
      spec:
        containers:
        - name: post-install
          securityContext: {}
        securityContext: {}
  rackAwareness:
    enabled: false
    nodeAnnotation: topology.kubernetes.io/zone
  rbac:
    annotations: {}
    enabled: true
    rpkDebugBundle: true
  resources:
    cpu:
      cores: "1"
      overprovisioned: null
    memory:
      container:
        max: 2560Mi
        min: null
      enable_memory_locking: null
      redpanda: null
  service: null
  serviceAccount:
    annotations: {}
    create: true
    name: ""
  statefulset:
    additionalRedpandaCmdFlags: []
    additionalSelectorLabels: {}
    budget:
      maxUnavailable: 1
    initContainerImage:
      repository: busybox
      tag: latest
    initContainers:
      configurator: {}
      fsValidator:
        enabled: false
        expectedFS: xfs
      setDataDirOwnership:
        enabled: false
    podAntiAffinity:
      custom: {}
      topologyKey: kubernetes.io/hostname
      type: hard
      weight: 100
    podTemplate:
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: '{{ include "redpanda.name" . }}-statefulset'
                  app.kubernetes.io/instance: '{{ .Release.Name }}'
                  app.kubernetes.io/name: '{{ include "redpanda.name" . }}'
              topologyKey: kubernetes.io/hostname
        containers:
        - name: redpanda
        - name: sidecar
        initContainers:
        - name: redpanda-configurator
        priorityClassName: ""
        securityContext: {}
        terminationGracePeriodSeconds: 90
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: '{{ include "redpanda.name" . }}-statefulset'
              app.kubernetes.io/instance: '{{ .Release.Name }}'
              app.kubernetes.io/name: '{{ include "redpanda.name" . }}'
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
    replicas: 3
    sideCars:
      args:
      - --no-set-superusers
      brokerDecommissioner:
        decommissionAfter: 60s
        decommissionRequeueTimeout: 10s
        enabled: false
      configWatcher:
        enabled: true
      controllers:
        createRBAC: true
        enabled: false
        healthProbeAddress: :8085
        image:
          repository: localhost/redpanda-operator
          tag: dev
        metricsAddress: :9082
        pprofAddress: :9083
        run:
        - all
      image:
        repository: localhost/redpanda-operator
        tag: dev
      pvcUnbinder:
        enabled: false
        unbindAfter: 60s
    updateStrategy:
      type: RollingUpdate
  storage:
    hostPath: ""
    persistentVolume:
      annotations: {}
      enabled: true
      labels: {}
      nameOverwrite: ""
      size: 20Gi
      storageClass: ""
    tiered:
      config:
        cloud_storage_cache_size: 5368709120
        cloud_storage_enable_remote_read: true
        cloud_storage_enable_remote_write: true
        cloud_storage_enabled: false
      credentialsSecretRef:
        accessKey:
          configurationKey: cloud_storage_access_key
          key: ""
          name: ""
        secretKey:
          configurationKey: cloud_storage_secret_key
          key: ""
          name: ""
      hostPath: ""
      mountType: none
      persistentVolume:
        annotations: {}
        enabled: false
        labels: {}
        nameOverwrite: ""
        size: ""
        storageClass: ""
    tieredConfig: null
    tieredStorageHostPath: ""
    tieredStoragePersistentVolume: null
  tests:
    enabled: true
  tls:
    certs:
      default:
        applyInternalDNSNames: null
        caEnabled: true
        clientSecretRef: null
        duration: ""
        enabled: null
        issuerRef: null
        secretRef: null
      external:
        applyInternalDNSNames: null
        caEnabled: true
        clientSecretRef: null
        duration: ""
        enabled: null
        issuerRef: null
        secretRef: null
    enabled: true
  tuning:
    tune_aio_events: true
