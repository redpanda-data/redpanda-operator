// Copyright 2024 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// KafkaSASLGSSAPIApplyConfiguration represents an declarative configuration of the KafkaSASLGSSAPI type for use
// with apply.
type KafkaSASLGSSAPIApplyConfiguration struct {
	AuthType           *string                         `json:"authType,omitempty"`
	KeyTabPath         *string                         `json:"keyTabPath,omitempty"`
	KerberosConfigPath *string                         `json:"kerberosConfigPath,omitempty"`
	ServiceName        *string                         `json:"serviceName,omitempty"`
	Username           *string                         `json:"username,omitempty"`
	Password           *SecretKeyRefApplyConfiguration `json:"passwordSecretRef,omitempty"`
	Realm              *string                         `json:"realm,omitempty"`
	EnableFast         *bool                           `json:"enableFast,omitempty"`
}

// KafkaSASLGSSAPIApplyConfiguration constructs an declarative configuration of the KafkaSASLGSSAPI type for use with
// apply.
func KafkaSASLGSSAPI() *KafkaSASLGSSAPIApplyConfiguration {
	return &KafkaSASLGSSAPIApplyConfiguration{}
}

// WithAuthType sets the AuthType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AuthType field is set to the value of the last call.
func (b *KafkaSASLGSSAPIApplyConfiguration) WithAuthType(value string) *KafkaSASLGSSAPIApplyConfiguration {
	b.AuthType = &value
	return b
}

// WithKeyTabPath sets the KeyTabPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KeyTabPath field is set to the value of the last call.
func (b *KafkaSASLGSSAPIApplyConfiguration) WithKeyTabPath(value string) *KafkaSASLGSSAPIApplyConfiguration {
	b.KeyTabPath = &value
	return b
}

// WithKerberosConfigPath sets the KerberosConfigPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KerberosConfigPath field is set to the value of the last call.
func (b *KafkaSASLGSSAPIApplyConfiguration) WithKerberosConfigPath(value string) *KafkaSASLGSSAPIApplyConfiguration {
	b.KerberosConfigPath = &value
	return b
}

// WithServiceName sets the ServiceName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServiceName field is set to the value of the last call.
func (b *KafkaSASLGSSAPIApplyConfiguration) WithServiceName(value string) *KafkaSASLGSSAPIApplyConfiguration {
	b.ServiceName = &value
	return b
}

// WithUsername sets the Username field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Username field is set to the value of the last call.
func (b *KafkaSASLGSSAPIApplyConfiguration) WithUsername(value string) *KafkaSASLGSSAPIApplyConfiguration {
	b.Username = &value
	return b
}

// WithPassword sets the Password field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Password field is set to the value of the last call.
func (b *KafkaSASLGSSAPIApplyConfiguration) WithPassword(value *SecretKeyRefApplyConfiguration) *KafkaSASLGSSAPIApplyConfiguration {
	b.Password = value
	return b
}

// WithRealm sets the Realm field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Realm field is set to the value of the last call.
func (b *KafkaSASLGSSAPIApplyConfiguration) WithRealm(value string) *KafkaSASLGSSAPIApplyConfiguration {
	b.Realm = &value
	return b
}

// WithEnableFast sets the EnableFast field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableFast field is set to the value of the last call.
func (b *KafkaSASLGSSAPIApplyConfiguration) WithEnableFast(value bool) *KafkaSASLGSSAPIApplyConfiguration {
	b.EnableFast = &value
	return b
}
