// Copyright 2025 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// PoolConfiguratorApplyConfiguration represents a declarative configuration of the PoolConfigurator type for use
// with apply.
type PoolConfiguratorApplyConfiguration struct {
	AdditionalCLIArgs []string `json:"additionalCLIArgs,omitempty"`
}

// PoolConfiguratorApplyConfiguration constructs a declarative configuration of the PoolConfigurator type for use with
// apply.
func PoolConfigurator() *PoolConfiguratorApplyConfiguration {
	return &PoolConfiguratorApplyConfiguration{}
}

// WithAdditionalCLIArgs adds the given value to the AdditionalCLIArgs field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the AdditionalCLIArgs field.
func (b *PoolConfiguratorApplyConfiguration) WithAdditionalCLIArgs(values ...string) *PoolConfiguratorApplyConfiguration {
	for i := range values {
		b.AdditionalCLIArgs = append(b.AdditionalCLIArgs, values[i])
	}
	return b
}
