// Copyright 2025 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// PoolInitContainersApplyConfiguration represents a declarative configuration of the PoolInitContainers type for use
// with apply.
type PoolInitContainersApplyConfiguration struct {
	FSValidator         *PoolFSValidatorApplyConfiguration         `json:"fsValidator,omitempty"`
	SetDataDirOwnership *PoolSetDataDirOwnershipApplyConfiguration `json:"setDataDirOwnership,omitempty"`
	Configurator        *PoolConfiguratorApplyConfiguration        `json:"configurator,omitempty"`
}

// PoolInitContainersApplyConfiguration constructs a declarative configuration of the PoolInitContainers type for use with
// apply.
func PoolInitContainers() *PoolInitContainersApplyConfiguration {
	return &PoolInitContainersApplyConfiguration{}
}

// WithFSValidator sets the FSValidator field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FSValidator field is set to the value of the last call.
func (b *PoolInitContainersApplyConfiguration) WithFSValidator(value *PoolFSValidatorApplyConfiguration) *PoolInitContainersApplyConfiguration {
	b.FSValidator = value
	return b
}

// WithSetDataDirOwnership sets the SetDataDirOwnership field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SetDataDirOwnership field is set to the value of the last call.
func (b *PoolInitContainersApplyConfiguration) WithSetDataDirOwnership(value *PoolSetDataDirOwnershipApplyConfiguration) *PoolInitContainersApplyConfiguration {
	b.SetDataDirOwnership = value
	return b
}

// WithConfigurator sets the Configurator field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Configurator field is set to the value of the last call.
func (b *PoolInitContainersApplyConfiguration) WithConfigurator(value *PoolConfiguratorApplyConfiguration) *PoolInitContainersApplyConfiguration {
	b.Configurator = value
	return b
}
