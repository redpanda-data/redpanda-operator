// Copyright 2025 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// ExternalSecretKeySelectorApplyConfiguration represents a declarative configuration of the ExternalSecretKeySelector type for use
// with apply.
type ExternalSecretKeySelectorApplyConfiguration struct {
	Name     *string `json:"name,omitempty"`
	Optional *bool   `json:"optional,omitempty"`
}

// ExternalSecretKeySelectorApplyConfiguration constructs a declarative configuration of the ExternalSecretKeySelector type for use with
// apply.
func ExternalSecretKeySelector() *ExternalSecretKeySelectorApplyConfiguration {
	return &ExternalSecretKeySelectorApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ExternalSecretKeySelectorApplyConfiguration) WithName(value string) *ExternalSecretKeySelectorApplyConfiguration {
	b.Name = &value
	return b
}

// WithOptional sets the Optional field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Optional field is set to the value of the last call.
func (b *ExternalSecretKeySelectorApplyConfiguration) WithOptional(value bool) *ExternalSecretKeySelectorApplyConfiguration {
	b.Optional = &value
	return b
}
