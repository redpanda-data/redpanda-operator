// Copyright 2025 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// EmbeddedNodePoolStatusApplyConfiguration represents a declarative configuration of the EmbeddedNodePoolStatus type for use
// with apply.
type EmbeddedNodePoolStatusApplyConfiguration struct {
	Name              *string `json:"name,omitempty"`
	Replicas          *int32  `json:"replicas,omitempty"`
	DesiredReplicas   *int32  `json:"desiredReplicas,omitempty"`
	OutOfDateReplicas *int32  `json:"outOfDateReplicas,omitempty"`
	UpToDateReplicas  *int32  `json:"upToDateReplicas,omitempty"`
	CondemnedReplicas *int32  `json:"condemnedReplicas,omitempty"`
	ReadyReplicas     *int32  `json:"readyReplicas,omitempty"`
	RunningReplicas   *int32  `json:"runningReplicas,omitempty"`
}

// EmbeddedNodePoolStatusApplyConfiguration constructs a declarative configuration of the EmbeddedNodePoolStatus type for use with
// apply.
func EmbeddedNodePoolStatus() *EmbeddedNodePoolStatusApplyConfiguration {
	return &EmbeddedNodePoolStatusApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *EmbeddedNodePoolStatusApplyConfiguration) WithName(value string) *EmbeddedNodePoolStatusApplyConfiguration {
	b.Name = &value
	return b
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *EmbeddedNodePoolStatusApplyConfiguration) WithReplicas(value int32) *EmbeddedNodePoolStatusApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithDesiredReplicas sets the DesiredReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DesiredReplicas field is set to the value of the last call.
func (b *EmbeddedNodePoolStatusApplyConfiguration) WithDesiredReplicas(value int32) *EmbeddedNodePoolStatusApplyConfiguration {
	b.DesiredReplicas = &value
	return b
}

// WithOutOfDateReplicas sets the OutOfDateReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OutOfDateReplicas field is set to the value of the last call.
func (b *EmbeddedNodePoolStatusApplyConfiguration) WithOutOfDateReplicas(value int32) *EmbeddedNodePoolStatusApplyConfiguration {
	b.OutOfDateReplicas = &value
	return b
}

// WithUpToDateReplicas sets the UpToDateReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UpToDateReplicas field is set to the value of the last call.
func (b *EmbeddedNodePoolStatusApplyConfiguration) WithUpToDateReplicas(value int32) *EmbeddedNodePoolStatusApplyConfiguration {
	b.UpToDateReplicas = &value
	return b
}

// WithCondemnedReplicas sets the CondemnedReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CondemnedReplicas field is set to the value of the last call.
func (b *EmbeddedNodePoolStatusApplyConfiguration) WithCondemnedReplicas(value int32) *EmbeddedNodePoolStatusApplyConfiguration {
	b.CondemnedReplicas = &value
	return b
}

// WithReadyReplicas sets the ReadyReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReadyReplicas field is set to the value of the last call.
func (b *EmbeddedNodePoolStatusApplyConfiguration) WithReadyReplicas(value int32) *EmbeddedNodePoolStatusApplyConfiguration {
	b.ReadyReplicas = &value
	return b
}

// WithRunningReplicas sets the RunningReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RunningReplicas field is set to the value of the last call.
func (b *EmbeddedNodePoolStatusApplyConfiguration) WithRunningReplicas(value int32) *EmbeddedNodePoolStatusApplyConfiguration {
	b.RunningReplicas = &value
	return b
}
