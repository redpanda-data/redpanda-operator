// Copyright 2025 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

import (
	redpandav1alpha2 "github.com/redpanda-data/redpanda-operator/operator/api/redpanda/v1alpha2"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// MirrorTopicApplyConfiguration represents a declarative configuration of the MirrorTopic type for use
// with apply.
type MirrorTopicApplyConfiguration struct {
	Name              *string                            `json:"name,omitempty"`
	State             *redpandav1alpha2.MirrorTopicState `json:"state,omitempty"`
	Configs           *runtime.RawExtension              `json:"configs,omitempty"`
	ReplicationFactor *int32                             `json:"replicationFactor,omitempty"`
	SourceTopicName   *string                            `json:"sourceTopicName,omitempty"`
}

// MirrorTopicApplyConfiguration constructs a declarative configuration of the MirrorTopic type for use with
// apply.
func MirrorTopic() *MirrorTopicApplyConfiguration {
	return &MirrorTopicApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *MirrorTopicApplyConfiguration) WithName(value string) *MirrorTopicApplyConfiguration {
	b.Name = &value
	return b
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *MirrorTopicApplyConfiguration) WithState(value redpandav1alpha2.MirrorTopicState) *MirrorTopicApplyConfiguration {
	b.State = &value
	return b
}

// WithConfigs sets the Configs field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Configs field is set to the value of the last call.
func (b *MirrorTopicApplyConfiguration) WithConfigs(value runtime.RawExtension) *MirrorTopicApplyConfiguration {
	b.Configs = &value
	return b
}

// WithReplicationFactor sets the ReplicationFactor field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReplicationFactor field is set to the value of the last call.
func (b *MirrorTopicApplyConfiguration) WithReplicationFactor(value int32) *MirrorTopicApplyConfiguration {
	b.ReplicationFactor = &value
	return b
}

// WithSourceTopicName sets the SourceTopicName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SourceTopicName field is set to the value of the last call.
func (b *MirrorTopicApplyConfiguration) WithSourceTopicName(value string) *MirrorTopicApplyConfiguration {
	b.SourceTopicName = &value
	return b
}
