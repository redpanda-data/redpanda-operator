// Copyright 2025 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// ShadowLinkSpecApplyConfiguration represents a declarative configuration of the ShadowLinkSpec type for use
// with apply.
type ShadowLinkSpecApplyConfiguration struct {
	ShadowCluster             *ClusterSourceApplyConfiguration                         `json:"shadowCluster,omitempty"`
	SourceCluster             *ClusterSourceApplyConfiguration                         `json:"sourceCluster,omitempty"`
	TopicMetadataSyncOptions  *ShadowLinkTopicMetadataSyncOptionsApplyConfiguration    `json:"topicMetadataSyncOptions,omitempty"`
	ConsumerOffsetSyncOptions *ShadowLinkConsumerOffsetSyncOptionsApplyConfiguration   `json:"consumerOffsetSyncOptions,omitempty"`
	SecuritySyncOptions       *ShadowLinkSecuritySettingsSyncOptionsApplyConfiguration `json:"securitySyncOptions,omitempty"`
}

// ShadowLinkSpecApplyConfiguration constructs a declarative configuration of the ShadowLinkSpec type for use with
// apply.
func ShadowLinkSpec() *ShadowLinkSpecApplyConfiguration {
	return &ShadowLinkSpecApplyConfiguration{}
}

// WithShadowCluster sets the ShadowCluster field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ShadowCluster field is set to the value of the last call.
func (b *ShadowLinkSpecApplyConfiguration) WithShadowCluster(value *ClusterSourceApplyConfiguration) *ShadowLinkSpecApplyConfiguration {
	b.ShadowCluster = value
	return b
}

// WithSourceCluster sets the SourceCluster field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SourceCluster field is set to the value of the last call.
func (b *ShadowLinkSpecApplyConfiguration) WithSourceCluster(value *ClusterSourceApplyConfiguration) *ShadowLinkSpecApplyConfiguration {
	b.SourceCluster = value
	return b
}

// WithTopicMetadataSyncOptions sets the TopicMetadataSyncOptions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TopicMetadataSyncOptions field is set to the value of the last call.
func (b *ShadowLinkSpecApplyConfiguration) WithTopicMetadataSyncOptions(value *ShadowLinkTopicMetadataSyncOptionsApplyConfiguration) *ShadowLinkSpecApplyConfiguration {
	b.TopicMetadataSyncOptions = value
	return b
}

// WithConsumerOffsetSyncOptions sets the ConsumerOffsetSyncOptions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ConsumerOffsetSyncOptions field is set to the value of the last call.
func (b *ShadowLinkSpecApplyConfiguration) WithConsumerOffsetSyncOptions(value *ShadowLinkConsumerOffsetSyncOptionsApplyConfiguration) *ShadowLinkSpecApplyConfiguration {
	b.ConsumerOffsetSyncOptions = value
	return b
}

// WithSecuritySyncOptions sets the SecuritySyncOptions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecuritySyncOptions field is set to the value of the last call.
func (b *ShadowLinkSpecApplyConfiguration) WithSecuritySyncOptions(value *ShadowLinkSecuritySettingsSyncOptionsApplyConfiguration) *ShadowLinkSpecApplyConfiguration {
	b.SecuritySyncOptions = value
	return b
}
