// Copyright 2025 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

import (
	redpandav1alpha2 "github.com/redpanda-data/redpanda-operator/operator/api/redpanda/v1alpha2"
)

// ACLResourceFilterApplyConfiguration represents a declarative configuration of the ACLResourceFilter type for use
// with apply.
type ACLResourceFilterApplyConfiguration struct {
	Name         *string                        `json:"name,omitempty"`
	PatternType  *redpandav1alpha2.PatternType  `json:"patternType,omitempty"`
	ResourceType *redpandav1alpha2.ResourceType `json:"resourceType,omitempty"`
}

// ACLResourceFilterApplyConfiguration constructs a declarative configuration of the ACLResourceFilter type for use with
// apply.
func ACLResourceFilter() *ACLResourceFilterApplyConfiguration {
	return &ACLResourceFilterApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ACLResourceFilterApplyConfiguration) WithName(value string) *ACLResourceFilterApplyConfiguration {
	b.Name = &value
	return b
}

// WithPatternType sets the PatternType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PatternType field is set to the value of the last call.
func (b *ACLResourceFilterApplyConfiguration) WithPatternType(value redpandav1alpha2.PatternType) *ACLResourceFilterApplyConfiguration {
	b.PatternType = &value
	return b
}

// WithResourceType sets the ResourceType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ResourceType field is set to the value of the last call.
func (b *ACLResourceFilterApplyConfiguration) WithResourceType(value redpandav1alpha2.ResourceType) *ACLResourceFilterApplyConfiguration {
	b.ResourceType = &value
	return b
}
