// Copyright 2025 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha3

import (
	v1alpha3 "github.com/redpanda-data/redpanda-operator/operator/api/redpanda/v1alpha3"
	v1 "k8s.io/api/core/v1"
)

// ValueSourceApplyConfiguration represents an declarative configuration of the ValueSource type for use
// with apply.
type ValueSourceApplyConfiguration struct {
	Value           *string                  `json:"value,omitempty"`
	ConfigMapKeyRef *v1.ConfigMapKeySelector `json:"configMapKeyRef,omitempty"`
	SecretKeyRef    *v1.SecretKeySelector    `json:"secretKeyRef,omitempty"`
	Expr            *v1alpha3.Expr           `json:"expr,omitempty"`
}

// ValueSourceApplyConfiguration constructs an declarative configuration of the ValueSource type for use with
// apply.
func ValueSource() *ValueSourceApplyConfiguration {
	return &ValueSourceApplyConfiguration{}
}

// WithValue sets the Value field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Value field is set to the value of the last call.
func (b *ValueSourceApplyConfiguration) WithValue(value string) *ValueSourceApplyConfiguration {
	b.Value = &value
	return b
}

// WithConfigMapKeyRef sets the ConfigMapKeyRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ConfigMapKeyRef field is set to the value of the last call.
func (b *ValueSourceApplyConfiguration) WithConfigMapKeyRef(value v1.ConfigMapKeySelector) *ValueSourceApplyConfiguration {
	b.ConfigMapKeyRef = &value
	return b
}

// WithSecretKeyRef sets the SecretKeyRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecretKeyRef field is set to the value of the last call.
func (b *ValueSourceApplyConfiguration) WithSecretKeyRef(value v1.SecretKeySelector) *ValueSourceApplyConfiguration {
	b.SecretKeyRef = &value
	return b
}

// WithExpr sets the Expr field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Expr field is set to the value of the last call.
func (b *ValueSourceApplyConfiguration) WithExpr(value v1alpha3.Expr) *ValueSourceApplyConfiguration {
	b.Expr = &value
	return b
}
