// Copyright 2025 Redpanda Data, Inc.
//
// Use of this software is governed by the Business Source License
// included in the file licenses/BSL.md
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha3

// NodePoolSpecApplyConfiguration represents an declarative configuration of the NodePoolSpec type for use
// with apply.
type NodePoolSpecApplyConfiguration struct {
	EmbeddedNodePoolSpecApplyConfiguration `json:",inline"`
	ClusterRef                             *ClusterRefApplyConfiguration `json:"clusterRef,omitempty"`
}

// NodePoolSpecApplyConfiguration constructs an declarative configuration of the NodePoolSpec type for use with
// apply.
func NodePoolSpec() *NodePoolSpecApplyConfiguration {
	return &NodePoolSpecApplyConfiguration{}
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *NodePoolSpecApplyConfiguration) WithReplicas(value int32) *NodePoolSpecApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithBrokerTemplate sets the BrokerTemplate field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BrokerTemplate field is set to the value of the last call.
func (b *NodePoolSpecApplyConfiguration) WithBrokerTemplate(value *BrokerTemplateApplyConfiguration) *NodePoolSpecApplyConfiguration {
	b.BrokerTemplate = value
	return b
}

// WithClusterRef sets the ClusterRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterRef field is set to the value of the last call.
func (b *NodePoolSpecApplyConfiguration) WithClusterRef(value *ClusterRefApplyConfiguration) *NodePoolSpecApplyConfiguration {
	b.ClusterRef = value
	return b
}
