# This file describes the unified cluster states and statuses generated for v1 and v2
# it's used by gen status to generate consistently typed structures for our errors as
# well as some helpers that basically turn reconciliation/status setting, which *ought*
# to be innately tied together into a state machine.
# 
# Most of the file below should stay well-documented and be the source of truth for
# how we use statuses and step through reconciliation procedures in our controllers.
# 
# General usage for the state machine style of rendering are roughly:
# 
#   var syncStatus func([]metav1.Conditions) error
#   myFirstTransitionState := statuses.InitializeMyKindState(myKind.Generation, syncStatus, myOptionalInitialConditionFailures)
#   
#   if _, err := someFunctionThatCanError(); err != nil {
#       return myFirstTransitionState.Sync(err) // or statuses.Retry(err) or statuses.RetryIn(err, time.Second), or statuses.Terminal(err)
#   }
# 
#   // if we determined that some status checks have failed call the reason helpers like myFirstTransitionState.NotHealthy("myKind is not healthy")
#   // now transition to the next state (myFirstTransitionState will no longer be used)
#   mySecondTransitionState := myFirstTransitionState.TransitionToMySecondTransitionState()
# 
#   // ... other potentially erroring stuff here and then finally
#   
#   return mySecondTransition.Finish().Sync()
# 
# General usage for the regular status style code:
# 
#    status := statuses.NewMyKind()
#    status.MyCondition.MyReason = errors.New("some reason")
#    status.MySecondCondition.MySecondReason = errors.New("some reason")
#    // status.MyThirdCondition has no errors, so don't set it
#    conditions := status.Conditions(myKind.Generation)

- kind: Cluster
  appliesTo:
    - redpanda/v1alpha2/Redpanda
  errors:
    - name: Error
      transient: true
      description: >
        This reason is used when a cluster has only been partially reconciled and we have early returned
        due to a retryable error occurring prior to applying the desired cluster state. It should only be
        set on the conditions currently in scope for the current cluster state, any subsequently derived
        conditions should use "StillReconciling".
    - name: TerminalError
      description: >
        This reason is used when a cluster has only been partially reconciled and we have early returned
        due to a known terminal error occurring prior to applying the desired cluster state. Any conditions
        not already derived should also receive the "TerminalError" reason. The cluster should also no longer
        be reconciled until it or an underlying resource is changed.
  description:
    Defines the observed status conditions of a cluster.
  conditions:
    - name: Ready
      printerColumns:
        - name: Ready
        - name: Status
          message: true
      description: >
        This condition indicates whether a cluster is ready to serve any
        traffic. This can happen, for example if a cluster is partially degraded
        but still can process requests.

        This condition defaults to "Unknown" with a reason of "NotReconciled"
        and must be set by a controller when it subsequently reconciles a
        cluster.
      reasons:
        - name: Ready
          message: Cluster ready to service requests
          description: >
            This reason is used with the "Ready" condition when the condition is True.
        - name: NotReady
          description: >
            This reason is used with the "Ready" condition when a cluster is not ready.
    - name: Healthy
      description: >
        This condition indicates whether a cluster is fully healthy.

        This condition defaults to "Unknown" with a reason of "NotReconciled"
        and must be set by a controller when it subsequently reconciles a
        cluster.
      reasons:
        - name: Healthy
          message: Cluster is healthy
          description: >
            This reason is used with the "Healthy" condition when the condition is True.
        - name: NotHealthy
          description: >
            This reason is used with the "Healthy" condition when a cluster is not healthy.
    - name: LicenseValid
      printerColumns:
        - name: License
          message: true
      description: >
        This condition indicates whether a cluster has a valid license.

        This condition defaults to "Unknown" with a reason of "NotReconciled"
        and must be set by a controller when it subsequently reconciles a
        cluster.
      reasons:
        - name: Valid
          message: Cluster has a valid license
          description: >
            This reason is used with the "LicenseValid" condition when the condition is True.
        - name: Expired
          description: >
            This reason is used with the "LicenseValid" condition when a cluster has an expired license.
        - name: NotPresent
          description: >
            This reason is used with the "LicenseValid" condition when a cluster has no license.
    # Note that this and the following condition do not have any "errors" defined. What this
    # essentially means is that there is no valid time when we should continue reconciling
    # when this condition is False. In other words, this condition will always either be True
    # or we've aborted reconciliation early with either a requeue or a terminal error. All of
    # its error reasons are injected from the state machine definitions at the top of the file.
    - name: ResourcesSynced
      description: >
        This condition indicates whether cluster configuration parameters
        have currently been applied to a cluster for the given generation.

        This condition defaults to "False" with a reason of "NotReconciled"
        and must be set by a controller when it subsequently reconciles a
        cluster.
      reasons:
        - name: Synced
          message: Cluster configuration successfully applied
          description: >
            This reason is used with the "ClusterConfigurationApplied" condition when the condition is True.
    - name: ConfigurationApplied
      description: >
        This condition indicates whether cluster configuration parameters
        have currently been applied to a cluster for the given generation.

        This condition defaults to "False" with a reason of "NotReconciled"
        and must be set by a controller when it subsequently reconciles a
        cluster.
      reasons:
        - name: Applied
          message: Cluster configuration successfully applied
          description: >
            This reason is used with the "ClusterConfigurationApplied" condition when the condition is True.
    - name: Quiesced
      final: true
      description: >
        This condition is used as to indicate that the cluster is no longer reconciling
        due to it being in a finalized state for the current generation.

        This condition defaults to "False" with a reason of "NotReconciled"
        and must be set by a controller when it subsequently reconciles a
        cluster.
      reasons:
        - name: Quiesced
          message: Cluster reconciliation finished
          description: >
            This reason is used with the "Quiesced" condition when the condition is True.
        - name: StillReconciling
          message: Cluster still reconciling
          description: >
            This reason is used with the "Quiesced" condition when a cluster has only been
            partially reconciled and we have not fully completed reconciliation. This
            happens when, for example, we're doing a cluster scaling operation.
    - name: Stable
      rollup: [ Quiesced, Ready, LicenseValid, ResourcesSynced, ConfigurationApplied ]
      description: >
        This condition is used as a roll-up status for any sort of automation such as
        terraform.

        This condition defaults to "False" with a reason of "NotReconciled"
        and must be set by a controller when it subsequently reconciles a
        cluster.
      reasons:
        - name: Stable
          message: Cluster Stable
          description: >
            This reason is used with the "Stable" condition when the condition is True.
        - name: Unstable
          message: Cluster Unstable
          description: >
            This reason is used with the "Stable" condition when a cluster has not yet
            stabilized for automation purposes.