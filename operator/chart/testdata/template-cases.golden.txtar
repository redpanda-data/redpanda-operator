-- testdata/backward-compatible.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-election-role
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-rpk-bundle
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: operator
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: operator
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=info
        - --configurator-base-image=my.repo.com/configurator
        - --configurator-tag=XYZ
        - --configurator-image-pull-policy=IfNotPresent
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: operator
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: operator
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-000.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    2XzRXgKjP: qV75G
    k0MXnvN5ry3d: qJm80
    k3SW6gk9w: zIr1y
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: S
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: koBY
subjects:
- kind: ServiceAccount
  name: S
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: koBY-election-role
subjects:
- kind: ServiceAccount
  name: S
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: koBY
subjects:
- kind: ServiceAccount
  name: S
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: koBY-rpk-bundle
subjects:
- kind: ServiceAccount
  name: S
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: aNfgS0
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY
  namespace: default
spec:
  replicas: 95505216
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: aNfgS0
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        "": wSty
        f4xd1: Fu
        rdQUQsDyV: 0iW8
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: aNfgS0
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=a35
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 873
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 527
          periodSeconds: 607
          successThreshold: 417
          terminationGracePeriodSeconds: 475
          timeoutSeconds: 518
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 314
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 141
          periodSeconds: 465
          successThreshold: 767
          terminationGracePeriodSeconds: 297
          timeoutSeconds: 596
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsPolicy: ʣĔ湲
      enableServiceLinks: true
      ephemeralContainers: null
      hostUsers: true
      hostname: Yspp
      imagePullSecrets: []
      initContainers: []
      nodeName: fZ
      nodeSelector: {}
      priority: 1398662212
      priorityClassName: WaxRXd
      resourceClaims:
      - name: jU
        source:
          resourceClaimName: aKa
          resourceClaimTemplateName: w
      restartPolicy: 瘛qǯ$謎p铷#瀻璗Aɀ尶士
      runtimeClassName: hCt9J
      schedulerName: fKZ9k2
      securityContext:
        runAsUser: 65532
      serviceAccountName: w23J
      subdomain: 4Z1p
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aNfgS0
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: koBY-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aNfgS0
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: S
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-001.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: WSGbu
subjects:
- kind: ServiceAccount
  name: WSGbu
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: WSGbu-election-role
subjects:
- kind: ServiceAccount
  name: WSGbu
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: WSGbu
subjects:
- kind: ServiceAccount
  name: WSGbu
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: WSGbu-rpk-bundle
subjects:
- kind: ServiceAccount
  name: WSGbu
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: EbX3hB7N
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: EbX3hB7N
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: WSGbu
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: EbX3hB7N
  strategy:
    type: Hɵ汏ʖǶ,儀o-$UE砵ʦ嬗
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: EbX3hB7N
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=TNizkRf0
        - 3AeeXxo
        - EoLf5
        - "9"
        command:
        - /manager
        env: []
        image: p9Di:H6X3S
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 537
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 32
          periodSeconds: 531
          successThreshold: 999
          terminationGracePeriodSeconds: 452
          timeoutSeconds: 766
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 624
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 735
          periodSeconds: 782
          successThreshold: 328
          terminationGracePeriodSeconds: 279
          timeoutSeconds: 195
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: WSGbu
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: WSGbu
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-002.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations:
    BYFlp: 1ue
    PW45cS5PlOC: K5ky3WbW
    Rb: A
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    BYFlp: 1ue
    PW45cS5PlOC: K5ky3WbW
    Rb: A
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    BYFlp: 1ue
    PW45cS5PlOC: K5ky3WbW
    Rb: A
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    BYFlp: 1ue
    PW45cS5PlOC: K5ky3WbW
    Rb: A
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: Dx441G
subjects:
- kind: ServiceAccount
  name: Dx441G
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    BYFlp: 1ue
    PW45cS5PlOC: K5ky3WbW
    Rb: A
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    BYFlp: 1ue
    PW45cS5PlOC: K5ky3WbW
    Rb: A
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    BYFlp: 1ue
    PW45cS5PlOC: K5ky3WbW
    Rb: A
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    BYFlp: 1ue
    PW45cS5PlOC: K5ky3WbW
    Rb: A
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Dx441G-election-role
subjects:
- kind: ServiceAccount
  name: Dx441G
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    BYFlp: 1ue
    PW45cS5PlOC: K5ky3WbW
    Rb: A
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Dx441G
subjects:
- kind: ServiceAccount
  name: Dx441G
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    BYFlp: 1ue
    PW45cS5PlOC: K5ky3WbW
    Rb: A
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Dx441G-rpk-bundle
subjects:
- kind: ServiceAccount
  name: Dx441G
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    BYFlp: 1ue
    PW45cS5PlOC: K5ky3WbW
    Rb: A
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: HICN
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    BYFlp: 1ue
    PW45cS5PlOC: K5ky3WbW
    Rb: A
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: HICN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Dx441G
  namespace: default
spec:
  replicas: 826057285
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: HICN
  strategy:
    rollingUpdate:
      maxSurge: 219927532
      maxUnavailable: 304746894
    type: "N"
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: HICN
    spec:
      affinity:
        nodeAffinity: {}
        podAffinity: {}
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=Ae
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 218
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 768
          periodSeconds: 416
          successThreshold: 445
          terminationGracePeriodSeconds: 710
          timeoutSeconds: 973
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 183
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 346
          periodSeconds: 821
          successThreshold: 910
          terminationGracePeriodSeconds: 522
          timeoutSeconds: 285
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets:
      - name: fAr
      - name: naZgh9c3e2j
      - {}
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: Dx441G
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: Dx441G
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-003.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rEba
subjects:
- kind: ServiceAccount
  name: rEba
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rEba-election-role
subjects:
- kind: ServiceAccount
  name: rEba
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rEba
subjects:
- kind: ServiceAccount
  name: rEba
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rEba-rpk-bundle
subjects:
- kind: ServiceAccount
  name: rEba
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: kzHCtV
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kzHCtV
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rEba
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: kzHCtV
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: kzHCtV
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              topologyKey: EISx1Cm
            weight: -635686610
          - podAffinityTerm:
              matchLabelKeys:
              - rgqfrK
              - ELazIMD
              topologyKey: vYPE
            weight: -1403728953
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=CcZY
        - 4ApSMU1
        - r
        - BXVuKkMQ
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 336
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 728
          periodSeconds: 843
          successThreshold: 454
          terminationGracePeriodSeconds: 712
          timeoutSeconds: 557
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 820
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 827
          periodSeconds: 213
          successThreshold: 999
          terminationGracePeriodSeconds: 721
          timeoutSeconds: 221
        resources:
          limits:
            cpu: "666"
            memory: "812"
          requests:
            cpu: "587"
            memory: "830"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector:
        wua: k2W
      securityContext:
        runAsUser: 65532
      serviceAccountName: rEba
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: 弍ȏʭșp馁®糋ɤ鞗桸ǚ棎MÃɛ鞍sK
        key: v
        operator: ɮ'7ʑ桒ɉʖǍ翌Đ媏鿩1褉
        value: WAOe
      - effect: Ė)İĒÙ\ģǧɹ貏gʢVǘ僘.5
        key: OsAm
        operator: ȶ^崬ƨƔ5享õÚ
        value: BBBZ
      - effect: 袝逥Ǹ5劚叞謨ĝ鸆鲧忂úa萜絇ƗwHƼ
        key: 0K
        operator: 枑-
        value: wF
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: rEba
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-004.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    Rt5: OeMr
    bO3NPc: qn0ImYNRP
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: SpE0
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: uNM
    health:
      healthProbeBindAddress: :8081
    kind: "3"
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kdh6Z-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kdh6Z-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kdh6Z
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kdh6Z
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kdh6Z
subjects:
- kind: ServiceAccount
  name: SpE0
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kdh6Z-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kdh6Z
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kdh6Z-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kdh6Z-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kdh6Z-election-role
subjects:
- kind: ServiceAccount
  name: SpE0
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kdh6Z
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kdh6Z
subjects:
- kind: ServiceAccount
  name: SpE0
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kdh6Z-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kdh6Z-rpk-bundle
subjects:
- kind: ServiceAccount
  name: SpE0
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kdh6Z-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: BRlD
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    F0wS: vBToTa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BRlD
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kdh6Z
  namespace: default
spec:
  replicas: 1024474665
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: BRlD
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: BRlD
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: o7Cc2E
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=a4SuUdq
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 335
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 578
          periodSeconds: 859
          successThreshold: 225
          terminationGracePeriodSeconds: 766
          timeoutSeconds: 705
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 86
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 771
          periodSeconds: 43
          successThreshold: 41
          terminationGracePeriodSeconds: 226
          timeoutSeconds: 84
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector:
        R: J9stK
        b3Y76k: 8HvVz
        pZjN: ZCZvZO
      securityContext:
        runAsUser: 65532
      serviceAccountName: SpE0
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: SpE0
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-005.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: g2
    health:
      healthProbeBindAddress: z856L
    kind: JDwGUjH
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: Oy
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: WM7nRI7B
subjects:
- kind: ServiceAccount
  name: WM7nRI7B
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: WM7nRI7B-election-role
subjects:
- kind: ServiceAccount
  name: WM7nRI7B
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: WM7nRI7B
subjects:
- kind: ServiceAccount
  name: WM7nRI7B
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: WM7nRI7B-rpk-bundle
subjects:
- kind: ServiceAccount
  name: WM7nRI7B
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: zejbO
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "1": Waszk6s
    AhQJg: sYlEc
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zejbO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wU3MsxN: 4Bn0vQj
  name: WM7nRI7B
  namespace: default
spec:
  replicas: -292655759
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: zejbO
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        K6UTGA2Q: Hy0xv
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: zejbO
    spec:
      affinity:
        nodeAffinity: {}
        podAffinity: {}
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=eM
        - sAQJC
        - "72"
        command:
        - /manager
        env: []
        image: Rr9cCH8:IyW
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 527
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 795
          periodSeconds: 490
          successThreshold: 227
          terminationGracePeriodSeconds: 296
          timeoutSeconds: 796
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 958
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 43
          periodSeconds: 600
          successThreshold: 644
          terminationGracePeriodSeconds: 52
          timeoutSeconds: 624
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsPolicy: 蚱跆ni仩(y·!Sžǩ
      ephemeralContainers: null
      hostAliases:
      - ip: x
      - ip: "0"
      hostPID: true
      hostname: t
      imagePullSecrets: []
      initContainers: []
      nodeName: d9B6GC1
      nodeSelector: {}
      preemptionPolicy: 脈翮蓞Y]FăòDZ^ɐȖÕʫB港
      priority: -1920850068
      priorityClassName: Sr
      resourceClaims:
      - name: ogjb
        source:
          resourceClaimName: "N"
          resourceClaimTemplateName: TJS
      restartPolicy: 婐ƱťýÕ$玙d詙枠Ó_瓀拿'
      runtimeClassName: 35HE
      schedulerName: wDQrlYtUq
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
        runAsUser: 65532
      serviceAccountName: GAzZL
      subdomain: stmIvh
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: WM7nRI7B
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-006.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: Em
subjects:
- kind: ServiceAccount
  name: Em
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Em-election-role
subjects:
- kind: ServiceAccount
  name: Em
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Em
subjects:
- kind: ServiceAccount
  name: Em
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Em-rpk-bundle
subjects:
- kind: ServiceAccount
  name: Em
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: di
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em
  namespace: default
spec:
  replicas: -212949663
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: di
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: di
        mxRCF: n5j
        pkKvta4BL: 9Z
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=OdrK
        command:
        - /manager
        env: []
        image: eZ6Hz:9JWhXp
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 132
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 589
          periodSeconds: 468
          successThreshold: 351
          terminationGracePeriodSeconds: 849
          timeoutSeconds: 594
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 900
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 626
          periodSeconds: 896
          successThreshold: 505
          terminationGracePeriodSeconds: 161
          timeoutSeconds: 22
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: Em
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    CQkNCSKpK8nmJ: B
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: di
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Em-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      CQkNCSKpK8nmJ: B
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: di
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: Em
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-007.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    RzmaQG: 6HA
    oww9mt3ERn: Dv6Y
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ij1lCfI4a
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: QOxZ1
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: G5d
    health:
      healthProbeBindAddress: :8081
    kind: hCswv
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 345
kind: ConfigMap
metadata:
  annotations:
    MDHvCe7Sl: h9WlA1EC
    ce3o: igVs
    uEbQa: t
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ij1lCfI4a
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 6yA-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    MDHvCe7Sl: h9WlA1EC
    ce3o: igVs
    uEbQa: t
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ij1lCfI4a
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 6yA-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: ij1lCfI4a
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    MDHvCe7Sl: h9WlA1EC
    ce3o: igVs
    uEbQa: t
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ij1lCfI4a
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 6yA
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: ij1lCfI4a
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: ij1lCfI4a
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=Y
        command:
        - /manager
        env: []
        image: ISoDbxsE:E5edBYpa
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 206
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 462
          periodSeconds: 304
          successThreshold: 375
          terminationGracePeriodSeconds: 334
          timeoutSeconds: 383
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 122
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 139
          periodSeconds: 565
          successThreshold: 995
          terminationGracePeriodSeconds: 619
          timeoutSeconds: 210
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: QOxZ1
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: QOxZ1
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-008.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: q5hs
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations:
    5mUYOp: Eqc
    AsH: OAiucz
    eEDhSFGX: WSL6MXpbA
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: DBMkVbLNvvZn-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    5mUYOp: Eqc
    AsH: OAiucz
    eEDhSFGX: WSL6MXpbA
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: DBMkVbLNvvZn-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    5mUYOp: Eqc
    AsH: OAiucz
    eEDhSFGX: WSL6MXpbA
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: DBMkVbLNvvZn
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    5mUYOp: Eqc
    AsH: OAiucz
    eEDhSFGX: WSL6MXpbA
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: DBMkVbLNvvZn
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: DBMkVbLNvvZn
subjects:
- kind: ServiceAccount
  name: q5hs
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    5mUYOp: Eqc
    AsH: OAiucz
    eEDhSFGX: WSL6MXpbA
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: DBMkVbLNvvZn-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    5mUYOp: Eqc
    AsH: OAiucz
    eEDhSFGX: WSL6MXpbA
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: DBMkVbLNvvZn
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    5mUYOp: Eqc
    AsH: OAiucz
    eEDhSFGX: WSL6MXpbA
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: DBMkVbLNvvZn-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    5mUYOp: Eqc
    AsH: OAiucz
    eEDhSFGX: WSL6MXpbA
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: DBMkVbLNvvZn-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: DBMkVbLNvvZn-election-role
subjects:
- kind: ServiceAccount
  name: q5hs
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    5mUYOp: Eqc
    AsH: OAiucz
    eEDhSFGX: WSL6MXpbA
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: DBMkVbLNvvZn
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: DBMkVbLNvvZn
subjects:
- kind: ServiceAccount
  name: q5hs
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    5mUYOp: Eqc
    AsH: OAiucz
    eEDhSFGX: WSL6MXpbA
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: DBMkVbLNvvZn-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: DBMkVbLNvvZn-rpk-bundle
subjects:
- kind: ServiceAccount
  name: q5hs
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    5mUYOp: Eqc
    AsH: OAiucz
    eEDhSFGX: WSL6MXpbA
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: DBMkVbLNvvZn-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: GNbmN
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    5mUYOp: Eqc
    AsH: OAiucz
    eEDhSFGX: WSL6MXpbA
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: GNbmN
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    u: yT9Aqc
  name: DBMkVbLNvvZn
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: GNbmN
  strategy:
    rollingUpdate:
      maxSurge: 1682151515
      maxUnavailable: 354098749
    type: 7Ƿ+韤哄苺跖陎池MÂË駨
  template:
    metadata:
      annotations:
        IPd: N0V8HGAm
      creationTimestamp: null
      labels:
        "": ka
        CKU4O: "6"
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: GNbmN
        lZYJ: H1y
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - {}
            - matchExpressions:
              - key: syCwYBGKWom
                operator: 討<拐ɬ罅vʨɆ撹ĵŷ鄽竼
                values:
                - yAuK
                - 9YBj
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=gT
        command:
        - /manager
        env: []
        image: kw6W:6LBRlD
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 250
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 802
          periodSeconds: 498
          successThreshold: 251
          terminationGracePeriodSeconds: 875
          timeoutSeconds: 76
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 101
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 964
          periodSeconds: 769
          successThreshold: 115
          terminationGracePeriodSeconds: 497
          timeoutSeconds: 861
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector:
        "": m
        Oes: AiMQMRej
      securityContext:
        runAsUser: 65532
      serviceAccountName: q5hs
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: q5hs
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-009.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 4fZUzy
    health:
      healthProbeBindAddress: :8081
    kind: dZCF6fa
    leaderElection:
      leaderElect: true
      resourceName: TrCkwSs
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kBI8lEs
subjects:
- kind: ServiceAccount
  name: kBI8lEs
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kBI8lEs-election-role
subjects:
- kind: ServiceAccount
  name: kBI8lEs
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kBI8lEs
subjects:
- kind: ServiceAccount
  name: kBI8lEs
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kBI8lEs-rpk-bundle
subjects:
- kind: ServiceAccount
  name: kBI8lEs
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 6n9214EY
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": Wyz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6n9214EY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gLlqKr: m
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kBI8lEs
  namespace: default
spec:
  replicas: -857065571
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 6n9214EY
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 6n9214EY
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=Qgv
        command:
        - /manager
        env: []
        image: nkEl:Fc9SuJ
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 423
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 203
          periodSeconds: 404
          successThreshold: 59
          terminationGracePeriodSeconds: 408
          timeoutSeconds: 233
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 409
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 718
          periodSeconds: 337
          successThreshold: 817
          terminationGracePeriodSeconds: 938
          timeoutSeconds: 794
        resources:
          limits:
            cpu: "44"
            memory: "628"
          requests:
            cpu: "463"
            memory: "83"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector:
        Uza8X: ZSPeK
        tXcN: UnYnyroDLAY9
        xNJh: j
      securityContext:
        runAsUser: 65532
      serviceAccountName: kBI8lEs
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: kBI8lEs
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-010.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations:
    7Kz: 6vhFA
    hw87: p7dM7cs
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    7Kz: 6vhFA
    hw87: p7dM7cs
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    7Kz: 6vhFA
    hw87: p7dM7cs
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    7Kz: 6vhFA
    hw87: p7dM7cs
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rcE
subjects:
- kind: ServiceAccount
  name: rcE
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    7Kz: 6vhFA
    hw87: p7dM7cs
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    7Kz: 6vhFA
    hw87: p7dM7cs
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    7Kz: 6vhFA
    hw87: p7dM7cs
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    7Kz: 6vhFA
    hw87: p7dM7cs
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rcE-election-role
subjects:
- kind: ServiceAccount
  name: rcE
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    7Kz: 6vhFA
    hw87: p7dM7cs
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rcE
subjects:
- kind: ServiceAccount
  name: rcE
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    7Kz: 6vhFA
    hw87: p7dM7cs
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rcE-rpk-bundle
subjects:
- kind: ServiceAccount
  name: rcE
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    7Kz: 6vhFA
    hw87: p7dM7cs
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Ubj
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    7Kz: 6vhFA
    hw87: p7dM7cs
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Ubj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: rcE
  namespace: default
spec:
  replicas: 997211798
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: Ubj
  strategy:
    type: 辢[Ȳ\顱DGÜ?ǚ$
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        U: 8NXJT
        W4J: GI7b
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: Ubj
    spec:
      activeDeadlineSeconds: -8857109636097708000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchFields:
              - key: 4MxKt
                operator: ""
              - key: ""
                operator: uȮ灜Í聿5*默
                values:
                - 32qRUP
              - key: sa17ef
                operator: Ü竅sDǩn腕3ŏ稰+9嗅覌ţ遲ǰ)P
                values:
                - wHH
                - Lt
            - matchExpressions:
              - key: ZjhbO
                operator: Nƽö攎AɌƝđi+鱸蔥
                values:
                - HlphhK4hN8
                - p2d6M1zBBJ
        podAntiAffinity: {}
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=dqEg
        - ""
        - W7
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 107
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 293
          periodSeconds: 863
          successThreshold: 23
          terminationGracePeriodSeconds: 270
          timeoutSeconds: 54
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 837
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 174
          periodSeconds: 494
          successThreshold: 591
          terminationGracePeriodSeconds: 487
          timeoutSeconds: 344
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsPolicy: 橍Ǎ!ɻ麳蠊寢ĥ)×Xʟ羄鳤
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - ip: "N"
      hostIPC: true
      hostPID: true
      hostUsers: true
      hostname: SRC
      imagePullSecrets: []
      initContainers: []
      nodeName: PM1bSuQ
      nodeSelector: {}
      priorityClassName: g
      readinessGates:
      - conditionType: ""
      - conditionType: ū篌r饾銳D曉lïØ特ǔ
      restartPolicy: 笗怌ɷ[諣ƐǏ
      runtimeClassName: nl5F
      schedulerName: oh
      schedulingGates:
      - name: 8lQ9mZH2K
      - name: Jd
      - name: ScuJ
      securityContext:
        runAsUser: 65532
      serviceAccountName: G3noLIUeP60
      shareProcessNamespace: true
      subdomain: kepLXpOh
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: KNj
      - name: oh9dwhjnMI
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: rcE
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-011.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 7guti07
subjects:
- kind: ServiceAccount
  name: 7guti07
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 7guti07-election-role
subjects:
- kind: ServiceAccount
  name: 7guti07
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 7guti07
subjects:
- kind: ServiceAccount
  name: 7guti07
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 7guti07-rpk-bundle
subjects:
- kind: ServiceAccount
  name: 7guti07
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: pP
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    VTHH: SaDKhXP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pP
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mOxaE: dEuL
    w49JChsEQqA0: "3"
  name: 7guti07
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: pP
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: pP
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=aWy1AZjYl
        - 6SD9JDbQ7Q
        - YSovMAw
        command:
        - /manager
        env: []
        image: 5grR1QB:W0p45uvP8
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 592
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 989
          periodSeconds: 111
          successThreshold: 916
          terminationGracePeriodSeconds: 319
          timeoutSeconds: 496
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 318
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 817
          periodSeconds: 884
          successThreshold: 96
          terminationGracePeriodSeconds: 3
          timeoutSeconds: 473
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: 7guti07
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 7guti07
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-012.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: Vhwco
    health:
      healthProbeBindAddress: smYkB7aF
    kind: 4bGK0P3QN1
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 30
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: J5MiI
subjects:
- kind: ServiceAccount
  name: J5MiI
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: J5MiI-election-role
subjects:
- kind: ServiceAccount
  name: J5MiI
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: J5MiI
subjects:
- kind: ServiceAccount
  name: J5MiI
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: J5MiI-rpk-bundle
subjects:
- kind: ServiceAccount
  name: J5MiI
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: E4UR
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: E4UR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J5MiI
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: E4UR
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: E4UR
    spec:
      activeDeadlineSeconds: -4882479068919526000
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=HhY5pV
        command:
        - /manager
        env: []
        image: DpT1qi9X:iRz
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 77
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 492
          periodSeconds: 582
          successThreshold: 235
          terminationGracePeriodSeconds: 929
          timeoutSeconds: 336
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 52
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 234
          periodSeconds: 999
          successThreshold: 878
          terminationGracePeriodSeconds: 537
          timeoutSeconds: 233
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsPolicy: Ƣ熨f
      ephemeralContainers: null
      hostAliases:
      - ip: mrcQMVMkPB
      - hostnames:
        - Ow4
        - fmP
        - yoHZ0Y60FY5h
        ip: E5UeultMq
      - ip: pKc1
      hostIPC: true
      imagePullSecrets: []
      initContainers: []
      nodeName: B7
      nodeSelector:
        v4IUGwpWO: ZN4
      priority: 1849183906
      priorityClassName: IOycvf
      resourceClaims:
      - name: ng2JB8B6VbrG
        source:
          resourceClaimName: RlxSIRxuR
          resourceClaimTemplateName: ""
      restartPolicy: 颐ń
      runtimeClassName: ACnArGI
      schedulerName: Ho3prF
      schedulingGates:
      - name: i
      - name: x4N
      securityContext:
        fsGroup: -1982488228585156000
        fsGroupChangePolicy: Always
        runAsUser: -457651949138351360
        sysctls:
        - name: pc
          value: mm2Pz7
        - name: 3SLaE
          value: DGWqr61
      serviceAccountName: qGnOVE5
      subdomain: txJqtdgH6Vj
      terminationGracePeriodSeconds: 10
      tolerations: []
      topologySpreadConstraints:
      - labelSelector: {}
        matchLabelKeys:
        - a6Nak3y9
        maxSkew: 1102617202
        minDomains: 1732042660
        nodeAffinityPolicy: EȔ揑Ŋ朔ɘ6A暺ɀ蔟Åj*擘
        nodeTaintsPolicy: 2$^āā)ʡÂXnɠʐ孯ɒǊƢȤ
        topologyKey: vfC8qjxH
        whenUnsatisfiable: Ȩ惍丼>瘦ɜX_
      - labelSelector: {}
        maxSkew: 957936875
        minDomains: -1414427420
        nodeTaintsPolicy: 钔黨
        topologyKey: r91i
        whenUnsatisfiable: 閶Ǣ?Ņ韸烡B
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: E1uqQaR
      - name: op3V5nJ
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: J5MiI
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-013.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: kQD1D
    health:
      healthProbeBindAddress: :8081
    kind: FIuFCE
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: ZTWMI
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: NofaS
subjects:
- kind: ServiceAccount
  name: NofaS
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: NofaS-election-role
subjects:
- kind: ServiceAccount
  name: NofaS
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: NofaS
subjects:
- kind: ServiceAccount
  name: NofaS
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: NofaS-rpk-bundle
subjects:
- kind: ServiceAccount
  name: NofaS
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: xALbe0A
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    71sOOTU: en8OPZRyg7
    L2FlwR: TODz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xALbe0A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: NofaS
  namespace: default
spec:
  replicas: -495726913
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: xALbe0A
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        GRGhQ: fkqnnjt1NtWR
        QAQlCL: 3O1IzZ
        u3WhJ: H6dv
      creationTimestamp: null
      labels:
        1SlC: EXAyYDLHKe
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: xALbe0A
        pHipubhkd: My
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=DCM8
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 971
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 160
          periodSeconds: 287
          successThreshold: 714
          terminationGracePeriodSeconds: 748
          timeoutSeconds: 678
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 146
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 789
          periodSeconds: 258
          successThreshold: 866
          terminationGracePeriodSeconds: 123
          timeoutSeconds: 490
        resources:
          limits:
            cpu: "34"
            memory: "847"
          requests:
            cpu: "961"
            memory: "537"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: NofaS
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: NofaS
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-014.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    7AtBTRGr: U8ZxJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qKT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: g5
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: C1vG9c
    health:
      healthProbeBindAddress: :8081
    kind: FMlJKF
    leaderElection:
      leaderElect: false
      resourceName: UKf
    metrics:
      bindAddress: Ynr
    webhook:
      port: 218
kind: ConfigMap
metadata:
  annotations:
    DsuWV: hcfr
    J: UTbwX
    c067UKdeI: tE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qKT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: o2lMoG-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    DsuWV: hcfr
    J: UTbwX
    c067UKdeI: tE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qKT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: o2lMoG-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: qKT
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    DsuWV: hcfr
    J: UTbwX
    c067UKdeI: tE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qKT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: o2lMoG
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: qKT
  strategy:
    rollingUpdate:
      maxSurge: 674042436
      maxUnavailable: 669562044
    type: ǣę牜ʇ16ȚH!m
  template:
    metadata:
      annotations:
        KvRKE1d: XRIJ
        W: C3
        fndr: Uyt3Xrutg
      creationTimestamp: null
      labels:
        "": c
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: qKT
    spec:
      activeDeadlineSeconds: -2853855776321121300
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              namespaces:
              - HKB8l3
              topologyKey: JXORzPM
            weight: 1533141205
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector: {}
            namespaceSelector: {}
            namespaces:
            - exCr
            topologyKey: zaViz6
          - mismatchLabelKeys:
            - sYY
            - c
            namespaceSelector: {}
            topologyKey: 3i9VHugV
          - matchLabelKeys:
            - DKX45
            topologyKey: RQtSd
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=6TGvv
        - x7K3o
        command:
        - /manager
        env: []
        image: AhZ:J18tP9n
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 304
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 784
          periodSeconds: 1
          successThreshold: 585
          terminationGracePeriodSeconds: 163
          timeoutSeconds: 806
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 445
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 648
          periodSeconds: 480
          successThreshold: 975
          terminationGracePeriodSeconds: 240
          timeoutSeconds: 134
        resources:
          limits:
            cpu: "246"
            memory: "341"
          requests:
            cpu: "419"
            memory: "949"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsPolicy: Êĕƹ糁Ř舛ě勒
      ephemeralContainers: null
      hostNetwork: true
      hostname: buM
      imagePullSecrets:
      - name: 5l
      - name: W
      initContainers: []
      nodeName: rOig
      nodeSelector:
        gT9Z: CsE8yWd83mQMFqv
      preemptionPolicy: 3LS谔~Y蟅ȸƃʪȭJu
      priorityClassName: 0NKME1gmQ
      resourceClaims:
      - name: fdLb
        source:
          resourceClaimName: 83OrZ
          resourceClaimTemplateName: sN3
      - name: S5Hj
        source:
          resourceClaimName: 4W6
          resourceClaimTemplateName: ZJui7q2tlIXE
      - name: Q0mzrA
        source:
          resourceClaimName: L4zTNRvD
          resourceClaimTemplateName: Wm65wI
      restartPolicy: '@'
      schedulerName: Nddm
      schedulingGates:
      - name: oljbBFuSK28
      securityContext:
        runAsUser: 65532
      serviceAccountName: SZ
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: Ĥă覀萾Ƌāh-X
        key: aaA8
        operator: 壈VIĔ
        value: D3f
      - effect: ȓ觿Lʏ`[ń騴HākQ=霅N卞嘕û掜
        key: yZ
        operator: ķ嫝j麰nŊ1荠欸Ɔo幹浦³袦
        tolerationSeconds: 8387893108164709000
        value: rGuo
      - effect: 骺LtÇe劘o銇Þ!暥啂ɡ端ȑ
        key: X2UU
        operator: 捿boŁ
        tolerationSeconds: 3611748545609715700
        value: "Y"
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: g5
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-015.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations:
    "": h5TCA9NX
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: TCq
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: K9R-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    "": h5TCA9NX
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: TCq
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: K9R-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    "": h5TCA9NX
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: TCq
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: K9R
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    "": h5TCA9NX
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: TCq
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: K9R
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: K9R
subjects:
- kind: ServiceAccount
  name: Y7Y8
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    "": h5TCA9NX
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: TCq
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: K9R-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    "": h5TCA9NX
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: TCq
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: K9R
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    "": h5TCA9NX
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: TCq
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: K9R-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: K9R-election-role
subjects:
- kind: ServiceAccount
  name: Y7Y8
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    "": h5TCA9NX
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: TCq
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: K9R
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: K9R
subjects:
- kind: ServiceAccount
  name: Y7Y8
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    "": h5TCA9NX
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: TCq
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: K9R-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: TCq
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    "": h5TCA9NX
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: TCq
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: K9R
  namespace: default
spec:
  replicas: -594257073
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: TCq
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        vgF0: KEEg1Li7
      creationTimestamp: null
      labels:
        7Hh0Z: Whlc
        7zRabC62: CP6LI2ne
        Pob1: i8Jj
        ULZKunhJj: ES
        aTbK: "2"
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: TCq
        rGL7NYgsN: BT
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference: {}
            weight: 576099119
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: null
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=vOvAQKBh
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 618
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 473
          periodSeconds: 821
          successThreshold: 474
          terminationGracePeriodSeconds: 307
          timeoutSeconds: 193
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 414
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 982
          periodSeconds: 424
          successThreshold: 242
          terminationGracePeriodSeconds: 473
          timeoutSeconds: 556
        resources:
          limits:
            cpu: "483"
            memory: "365"
          requests:
            cpu: "857"
            memory: "13"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsPolicy: 禉ȎÝ汱
      ephemeralContainers: null
      hostAliases:
      - ip: kVf
      - ip: sW
      - ip: rM
      hostPID: true
      hostUsers: true
      hostname: E
      imagePullSecrets:
      - name: lKwA67wQmuQa
      - name: uHBD
      initContainers: []
      nodeName: vYKJQj6
      nodeSelector: {}
      preemptionPolicy: Ǆ觊1牌Ş閏3壈T怠õȍƈǖ
      priorityClassName: 0f0
      restartPolicy: ŸÀƷ2讟Ɠ
      runtimeClassName: ZEew
      schedulerName: R8H
      securityContext:
        runAsUser: 65532
      serviceAccountName: 09ijr0mdS1NgJ
      setHostnameAsFQDN: true
      subdomain: UrA
      terminationGracePeriodSeconds: -8722592932569511000
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            G331g0: T19
            Jt: 8KOg
        matchLabelKeys:
        - X9
        - 5bB
        maxSkew: 1128038377
        minDomains: -98836178
        topologyKey: j8NNYFTR
        whenUnsatisfiable: ǼR嚯HyÇ陂m&屗ɇĤ螭ɧǕ胾縳D
      - labelSelector: {}
        maxSkew: -1392131714
        nodeAffinityPolicy: 舜Șđ瑩Ğ鴃\揌ƒo7Łŷô
        nodeTaintsPolicy: Ąʟ/鍽A瘠Iʥ淧BĜ,Ü杵姽4u
        topologyKey: T6H
        whenUnsatisfiable: 禳鯋龖鱯筁İ赠ƄǪ|杮ɗ吻űU纕聓z序
      volumes: []
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: Y7Y8
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-016.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 5aFk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    pSTEUjYKreNw: j4onXF
  name: f0FlDsNL
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: pMnSnB87
    health:
      healthProbeBindAddress: kpX
    kind: 28gpbXzOZ
    leaderElection:
      leaderElect: true
      resourceName: wYA8UN
    metrics:
      bindAddress: "n"
    webhook:
      port: 163
kind: ConfigMap
metadata:
  annotations:
    pl05VC: F
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 5aFk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    pSTEUjYKreNw: j4onXF
  name: f0FlDsNL-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    pl05VC: F
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 5aFk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    pSTEUjYKreNw: j4onXF
  name: f0FlDsNL-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 5aFk
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    pl05VC: F
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 5aFk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    pSTEUjYKreNw: j4onXF
  name: f0FlDsNL
  namespace: default
spec:
  replicas: 1899554555
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 5aFk
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 5aFk
    spec:
      activeDeadlineSeconds: -5556799280309865000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchFields:
              - key: 9anc
                operator: ±蛖ɚȩ糪ĲG=ǅ羭{
            weight: -621007885
          - preference: {}
            weight: 2044903865
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: luQIk
                operator: z鎑霷#a槛仠#ɩ昗铩儮沩Ȓj
              matchFields:
              - key: 3gu
                operator: Ý:齰磄瀒
              - key: Ny3s
                operator: 虞7埃坨ĮÃŚ鋤鿭ǟĞ蘶
              - key: gnLOKK
                operator: e鄷
            - {}
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  "": 7uhVpN4cQ
                  UntIH5I: tb97Lt8Tc
                  Y0HG: liwfUwa
              namespaceSelector:
                matchExpressions:
                - key: SPGie
                  operator: 8ɟkJȤ
                - key: O8Kkv
                  operator: ʦJŷÃʂȕ*寷乀
                - key: rx
                  operator: ""
              topologyKey: JH7Y
            weight: -1966373661
          - podAffinityTerm:
              matchLabelKeys:
              - LJGdA2C
              - VvD0D8
              namespaces:
              - wI7PWxOCE
              - fJKpEUH
              - YXjD
              topologyKey: 7cFh
            weight: -129313368
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              namespaceSelector:
                matchExpressions:
                - key: f
                  operator: C玳kuƞkP恻q隆孼Ķo塹橨匢耟
                  values:
                  - jH
                - key: NAFBScy
                  operator: »6ĕmȏȿ#)磓r蝃蘕畖×h齁ś
                - key: 1D
                  operator: Ħő
                matchLabels:
                  r1j0: d5vuu
              topologyKey: dZ
            weight: 1727718816
          - podAffinityTerm:
              matchLabelKeys:
              - wUgBzH
              - ""
              - uL1eHe
              mismatchLabelKeys:
              - J
              namespaceSelector: {}
              topologyKey: bmprd4
            weight: 345672069
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=mU
        - YXvYnHoraN
        - 6PWVVeCET
        - D
        command:
        - /manager
        env: []
        image: 4kWMzql:PGITfvk
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 789
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 277
          periodSeconds: 445
          successThreshold: 485
          terminationGracePeriodSeconds: 280
          timeoutSeconds: 492
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 782
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 998
          periodSeconds: 637
          successThreshold: 227
          terminationGracePeriodSeconds: 505
          timeoutSeconds: 559
        resources:
          limits:
            cpu: "889"
            memory: "374"
          requests:
            cpu: "497"
            memory: "446"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsPolicy: 峻Ő輇
      ephemeralContainers: null
      hostNetwork: true
      hostPID: true
      hostUsers: true
      hostname: tzD
      imagePullSecrets:
      - name: 7B
      - name: iT52FG
      - name: 2p
      initContainers: []
      nodeName: yGth6FQAA
      nodeSelector:
        9Pg5y: LF8hqD
        aRrwBkt: Jvt8Adv
        eai: ldwIa
      preemptionPolicy: _]頉ýôŴ鶠囀穌ʒ/¨
      priority: 108339805
      priorityClassName: wSH2H5h7d
      readinessGates:
      - conditionType: k襍燷jx犥l欽Ÿ&ĨʃA4q
      - conditionType: 埠獥ųZ
      - conditionType: 3V螅º|:=7
      restartPolicy: ʤ`ųŕ](垎I
      runtimeClassName: gVULasg3X
      schedulerName: hxe
      schedulingGates:
      - name: c6W
      securityContext:
        fsGroupChangePolicy: Always
        runAsGroup: 2107190638946176800
        runAsNonRoot: true
        runAsUser: 65532
        supplementalGroups:
        - 7361448140255747000
      serviceAccountName: miTk
      subdomain: H
      terminationGracePeriodSeconds: -9160842915008825000
      tolerations:
      - key: ihN
        operator: Ǆ(镼żʤȮĕC
        value: pLULE
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: f0FlDsNL
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-017.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: pHzNPjb
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: oQZVx9
    health:
      healthProbeBindAddress: :8081
    kind: sv4HQKE
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: uS6G
    webhook:
      port: 324
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O-additional-controllers
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - nodes
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: DX7O
subjects:
- kind: ServiceAccount
  name: pHzNPjb
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O-additional-controllers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: DX7O-additional-controllers
subjects:
- kind: ServiceAccount
  name: pHzNPjb
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O-additional-controllers
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: DX7O-election-role
subjects:
- kind: ServiceAccount
  name: pHzNPjb
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: DX7O
subjects:
- kind: ServiceAccount
  name: pHzNPjb
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O-additional-controllers
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: DX7O-additional-controllers
subjects:
- kind: ServiceAccount
  name: pHzNPjb
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: DX7O-rpk-bundle
subjects:
- kind: ServiceAccount
  name: pHzNPjb
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: NlE3orKsq9
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O
  namespace: default
spec:
  replicas: 261912120
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: NlE3orKsq9
  strategy:
    type: ʛ淶
  template:
    metadata:
      annotations:
        VpV8Qi: s00s
      creationTimestamp: null
      labels:
        PngjtPyl: ykFXfD
        SABt6OZHhu: d
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: NlE3orKsq9
        krDSTkt0Cp: fmEynMv3y
    spec:
      activeDeadlineSeconds: -5900296573348537000
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=BpnfO
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 691
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 45
          periodSeconds: 987
          successThreshold: 442
          terminationGracePeriodSeconds: 832
          timeoutSeconds: 499
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 672
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 355
          periodSeconds: 145
          successThreshold: 987
          terminationGracePeriodSeconds: 87
          timeoutSeconds: 446
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        nameservers:
        - z4
        - 0add
        - qpiw9
        options:
        - name: g
          value: Zj
        - name: TLS2q4
          value: IWZ
        searches:
        - C
        - ZWnAi
      dnsPolicy: xX鏎öH
      ephemeralContainers: null
      hostIPC: true
      hostNetwork: true
      hostUsers: true
      hostname: 6s5f
      imagePullSecrets:
      - name: fLk6bKK6
      - name: UFjlI
      initContainers: []
      nodeName: QFWExG
      nodeSelector:
        Ds0bfBawR: M
        T: v7
      preemptionPolicy: Ǹ
      priority: 38583698
      priorityClassName: M5hx9L
      restartPolicy: ʙ瓮臎#ɤy鿩ǔʘ怹騙諙诏ʥ^侾
      runtimeClassName: xoq1Z
      schedulerName: 5ZjpF2
      securityContext:
        fsGroup: 4202070741260157000
        fsGroupChangePolicy: Always
        runAsGroup: 9013120776933110000
        runAsNonRoot: true
        runAsUser: 8904388612794458000
        sysctls:
        - name: u2tM1pwj
          value: r3fX5
        - name: R3ebj0
          value: J6V
        - name: eyqaE
          value: 13RX
      serviceAccountName: 6Q
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: dKcT7J
      terminationGracePeriodSeconds: 958157690550273200
      tolerations:
      - effect: 鯲ǥzNY=ĩ7綣ǂǩƜ陫Ǹ枢橭
        key: JcNTJI
        operator: 璎謉蕵jH`裺庣瀝柎Ɇ凐ȕ
        tolerationSeconds: -6474703231875668000
        value: x3srAmb
      - effect: m燔o;¦
        key: 1urJ2
        operator: w茱ŲŲ崻Ə瑕ĩƗʪÒW^
        value: mpiVil6
      - effect: Ə誽繏枹娟
        key: QAlBr
        operator: a垐擝榟mbŚƫ
        tolerationSeconds: -6539370764697410000
        value: oKm5I
      topologySpreadConstraints:
      - labelSelector: {}
        maxSkew: -2056495085
        minDomains: 578714113
        nodeAffinityPolicy: +ɚȽ焑ȸǺǚ左ɶC麷~Ǜɻ4魶垄Ö
        nodeTaintsPolicy: ' 銽õ揉糹灨7ɣsGȌʅ灨Ȓȣ該Ɯ娤醆'
        topologyKey: vO06mYrm
        whenUnsatisfiable: 滕枔ŉ+三H0g¤誚爡竩拺ʌ嵼Ƶ
      - maxSkew: -1573120037
        nodeAffinityPolicy: Š
        nodeTaintsPolicy: 炥ÁFhóëB2re贈(
        topologyKey: dV0wh8
        whenUnsatisfiable: kƆC]舻欴坅灊摬ɐ嘤ȩ拐錹
      - labelSelector:
          matchExpressions:
          - key: rPA7uc47l
            operator: ""
            values:
            - LXzkh
            - erSrq
          - key: 4rKY
            operator: zr瑧}ȃ7h鰟QɒʝŀȀĢ咠Ɓ袌
          - key: Io5
            operator: Ť{Ő1怴ȲĦT濤=1咴bǆ跘|
            values:
            - m
            - B9dGMNfq
            - O8wzB
          matchLabels:
            6l5: 65a8U
            RWurD: iv9
            cpA: ""
        matchLabelKeys:
        - LnO
        maxSkew: -1850914784
        minDomains: 629985372
        nodeTaintsPolicy: dƦć苆n鱿鞵a#úĆ
        topologyKey: WYxuG1Q
        whenUnsatisfiable: ŻŗƳ<迱ȪĆF梩抮俕鬷
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NlE3orKsq9
    app.kubernetes.io/version: v2.3.8-24.3.6
    bKX: d
    helm.sh/chart: operator-v2.3.8-24.3.6
    m2Z8Z: wRw
  name: DX7O-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: NlE3orKsq9
      app.kubernetes.io/version: v2.3.8-24.3.6
      bKX: d
      helm.sh/chart: operator-v2.3.8-24.3.6
      m2Z8Z: wRw
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: pHzNPjb
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-018.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: ""
    health:
      healthProbeBindAddress: :8081
    kind: fiYym
    leaderElection:
      leaderElect: true
      resourceName: xpFTAT6I
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 269
kind: ConfigMap
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: x8K24mCZYsnh
subjects:
- kind: ServiceAccount
  name: x8K24mCZYsnh
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: x8K24mCZYsnh-election-role
subjects:
- kind: ServiceAccount
  name: x8K24mCZYsnh
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: x8K24mCZYsnh
subjects:
- kind: ServiceAccount
  name: x8K24mCZYsnh
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: x8K24mCZYsnh-rpk-bundle
subjects:
- kind: ServiceAccount
  name: x8K24mCZYsnh
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: "5"
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh
  namespace: default
spec:
  replicas: -1117470466
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: "5"
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        UU: Ih1JV9T5t65
        VBBsKn: k
        v: ELoN6W
      creationTimestamp: null
      labels:
        Jg: wIR6AIt
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: "5"
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=pMbmKX
        - 6gNh
        command:
        - /manager
        env: []
        image: gSveMOQ8Iaw:UVj2te38
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 375
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 86
          periodSeconds: 833
          successThreshold: 450
          terminationGracePeriodSeconds: 146
          timeoutSeconds: 369
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 335
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 53
          periodSeconds: 419
          successThreshold: 113
          terminationGracePeriodSeconds: 543
          timeoutSeconds: 999
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets:
      - name: P0TDZL8he
      - name: x3WK4
      initContainers: []
      nodeSelector:
        k1PDm6M8S: Av
      securityContext:
        runAsUser: 65532
      serviceAccountName: x8K24mCZYsnh
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: F遈魠挢銔ʅu
        key: pMn354ce
        operator: ŉ鮇ȝǖ玫賰Ĭ%aǞ屩讑=禙賊谥
        value: jBqy9Xc
      - effect: 陃dŷF|ɎO琂鹁ƞ哺
        operator: ǁ哐练YǠZ»踳4妼ʂ楃鉓qƽ£蟸´
        tolerationSeconds: -7093685367868430000
        value: lCYrg
      - effect: g券貜隑
        key: UAx
        operator: Ŋ顴Ƣ)Ƙ饛?ɶ
        tolerationSeconds: -4434340529404616700
        value: 12CvQa
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    bhU: AcTdNUdgDaT
    iH: X4s
    ieFAk: TxA0xeci
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "5"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: x8K24mCZYsnh-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: "5"
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: x8K24mCZYsnh
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-019.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: UHlKDi
subjects:
- kind: ServiceAccount
  name: UHlKDi
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: UHlKDi-election-role
subjects:
- kind: ServiceAccount
  name: UHlKDi
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: UHlKDi
subjects:
- kind: ServiceAccount
  name: UHlKDi
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: UHlKDi-rpk-bundle
subjects:
- kind: ServiceAccount
  name: UHlKDi
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Fk
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi
  namespace: default
spec:
  replicas: 577319060
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: Fk
  strategy:
    rollingUpdate:
      maxSurge: 1303580468
      maxUnavailable: 757075873
    type: ʐɊƦ棍EƄ
  template:
    metadata:
      annotations:
        hIbtWatj5V: ""
        kwFBY9: e8EBkR
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: Fk
    spec:
      affinity:
        nodeAffinity: {}
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=5ruW
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 448
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 92
          periodSeconds: 828
          successThreshold: 855
          terminationGracePeriodSeconds: 195
          timeoutSeconds: 723
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 911
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 992
          periodSeconds: 967
          successThreshold: 613
          terminationGracePeriodSeconds: 799
          timeoutSeconds: 891
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: UHlKDi
      terminationGracePeriodSeconds: 10
      tolerations:
      - key: qR0W0
        operator: i熔ɟ#
        tolerationSeconds: 4752464137807170000
        value: X
      - effect: Eʟĳ褔鑚
        key: WKdYyXfN
        operator: 噃"盬Ǉ_Ƹ嚸-ɳ;ǋd娀葵ʝǙ
        value: ohIxEL
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    8dRB: 5cv
    EfHk: fBL
    Nm4maThP4X: v
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Fk
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: UHlKDi-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: Fk
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: UHlKDi
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-020.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: PkD
    health:
      healthProbeBindAddress: Es
    kind: bXPNJb
    leaderElection:
      leaderElect: false
      resourceName: 5qBPLbo9JIP69
    metrics:
      bindAddress: brP6t94s
    webhook:
      port: 3
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    NoeniB5: Fc1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: IC6CHScZj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ruSHmUUvOj1: h3BuiPAHIC
  name: wINY4HR-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    NoeniB5: Fc1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: IC6CHScZj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ruSHmUUvOj1: h3BuiPAHIC
  name: wINY4HR-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    NoeniB5: Fc1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: IC6CHScZj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ruSHmUUvOj1: h3BuiPAHIC
  name: wINY4HR
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    NoeniB5: Fc1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: IC6CHScZj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ruSHmUUvOj1: h3BuiPAHIC
  name: wINY4HR
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: wINY4HR
subjects:
- kind: ServiceAccount
  name: ft
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    NoeniB5: Fc1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: IC6CHScZj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ruSHmUUvOj1: h3BuiPAHIC
  name: wINY4HR-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    NoeniB5: Fc1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: IC6CHScZj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ruSHmUUvOj1: h3BuiPAHIC
  name: wINY4HR
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    NoeniB5: Fc1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: IC6CHScZj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ruSHmUUvOj1: h3BuiPAHIC
  name: wINY4HR-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    NoeniB5: Fc1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: IC6CHScZj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ruSHmUUvOj1: h3BuiPAHIC
  name: wINY4HR-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: wINY4HR-election-role
subjects:
- kind: ServiceAccount
  name: ft
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    NoeniB5: Fc1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: IC6CHScZj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ruSHmUUvOj1: h3BuiPAHIC
  name: wINY4HR
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: wINY4HR
subjects:
- kind: ServiceAccount
  name: ft
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    NoeniB5: Fc1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: IC6CHScZj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ruSHmUUvOj1: h3BuiPAHIC
  name: wINY4HR-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: wINY4HR-rpk-bundle
subjects:
- kind: ServiceAccount
  name: ft
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    NoeniB5: Fc1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: IC6CHScZj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ruSHmUUvOj1: h3BuiPAHIC
  name: wINY4HR-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: IC6CHScZj
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    NoeniB5: Fc1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: IC6CHScZj
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ruSHmUUvOj1: h3BuiPAHIC
  name: wINY4HR
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: IC6CHScZj
  strategy:
    rollingUpdate:
      maxSurge: 197851187
      maxUnavailable: 76639021
    type: ȺŪ鄈厷)_質H迉ʈ砂\昜闁ɠǳ
  template:
    metadata:
      annotations:
        gfUi8: 419ry
        j: ryqOMF0Jv5
        lO9TC3H: GA
      creationTimestamp: null
      labels:
        "4": 52Tm2RbID
        A2n: P41k9HiCVIqF
        HY: i53EA
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: IC6CHScZj
        r: 9n
    spec:
      activeDeadlineSeconds: -7334991626066240000
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: wa1I6C
                  operator: v寱县H
                  values:
                  - nkcT
                  - kZVmdT
                  - 1yCqAQx
                matchLabels:
                  XgvalJB: 4NJfSfnyS
              namespaceSelector:
                matchLabels:
                  5Pf: t5wc1jv
              namespaces:
              - PNy
              topologyKey: a
            weight: 1793239155
          - podAffinityTerm:
              matchLabelKeys:
              - YR5R
              mismatchLabelKeys:
              - Dd8
              - UENQb
              - NFy0hS
              namespaces:
              - Frj
              - ZUe
              topologyKey: Q86m7P
            weight: 291823071
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: Xiauf72
                  operator: 趾Ä灪'ʆsʍëdɬǶȾ!ŭƏɛ
                matchLabels:
                  T: PrGnsT
              matchLabelKeys:
              - jBnHuN
              - Hf
              - 2T
              namespaceSelector:
                matchLabels:
                  8Bkgc8ZL: Ezu0
                  ovjGpP: WPG
              namespaces:
              - ZSX
              topologyKey: uJ
            weight: 316054413
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: mTbu
                operator: ȪőT僕Śǿi壓2šQʆıƔ阖ʔțk{
              matchLabels:
                Adzu7Pw1: OFMIvt
                Eo9J: 2A
                fLIuX: nt9902V
            mismatchLabelKeys:
            - p2NQ
            namespaceSelector: {}
            topologyKey: AC2fIAX4
        podAntiAffinity: {}
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=wt4uT
        - vp9WG
        command:
        - /manager
        env: []
        image: 6ERMjI8:MJp
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 199
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 704
          periodSeconds: 903
          successThreshold: 291
          terminationGracePeriodSeconds: 215
          timeoutSeconds: 790
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 828
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 849
          periodSeconds: 744
          successThreshold: 144
          terminationGracePeriodSeconds: 220
          timeoutSeconds: 900
        resources:
          limits:
            cpu: "576"
            memory: "861"
          requests:
            cpu: "54"
            memory: "628"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        nameservers:
        - QXyBi4x
        - q
        options:
        - name: 93C
          value: lWWdKFn5
        - name: M4U7d
          value: ""
        searches:
        - RMyq
        - ZWAzxvu
      dnsPolicy: '@c阁箅怮2UƖ頫ĥ旨©c闸褭v'
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - i4ECE0X
        ip: OI
      - hostnames:
        - z
        ip: gqTQe1j
      hostNetwork: true
      hostUsers: true
      hostname: DDIcxqJ
      imagePullSecrets:
      - name: LBeC5t
      - name: TFCWBezm
      initContainers: []
      nodeName: OJJ
      nodeSelector: {}
      preemptionPolicy: 聉ȸȹńƺY审Ɠ蕱ɉ鴼冟iŜrĠ@籸
      priority: -350249270
      priorityClassName: hO8
      resourceClaims:
      - name: 2Zc4C
        source:
          resourceClaimName: vE2Mru
          resourceClaimTemplateName: NhBX6un
      restartPolicy: HN險琱瘀釗ƎeƣQ揩緙(疮
      runtimeClassName: rsBD5
      schedulerName: ZB6xw
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 9084698496973303000
        runAsNonRoot: true
        runAsUser: 3344169292564113400
      serviceAccountName: 1tIUwTl
      setHostnameAsFQDN: true
      subdomain: G1Ih
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: ȀǍhd蛐i
        key: XaF
        operator: ȒǑs突閼ɔ熈伛!Ì@p嶸ǝǡ
        tolerationSeconds: -6963795863015170000
        value: 5su
      - effect: 晆ȶ©諳
        key: WgIQZS
        operator: /忠\R琇ɜ溮卷??ȏå©F*嗦pʆ
        tolerationSeconds: -1505275548904914200
        value: 3aZS3
      - effect: ʕ僁Ɠ矒!ʤ箥Iæ姣ș_ǧɼb醏J
        key: xAK9d
        operator: ƵPǼƈxªÆşdƱ恜@Pǵ鐄Ŗ:縷
        value: a
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: 6EyjQTRo
            operator: 隍%鞙ÉŇ*朹ɝw埡獊ǙǴ}
            values:
            - 0fVDws
          - key: 7PqtLnWW
            operator: ÃNÒ蝤Ȕų'ȵ
            values:
            - E8
            - bNgEZm9
          - key: Opmpk
            operator: Ķ顃屹4Y種Uz螷婽虊}ÒrİǕ=
            values:
            - u5VvsWl
        maxSkew: -1637155940
        nodeAffinityPolicy: Gȋ'
        nodeTaintsPolicy: 艩yZ.@灟D,Ğ小]ʎʇxʯ晫Þ葍碟
        topologyKey: 7ac
        whenUnsatisfiable: ƸĪ鎺劉Xú§
      - labelSelector:
          matchExpressions:
          - key: NUm
            operator: '"貕期ǗʂƤq径'
            values:
            - N6
            - U5G
            - 9R7dT
          - key: jr0OdvEf
            operator: 嫫ǻƻ4ɻQx=鐈üɇƺƯ楢們ƔÄ~]
            values:
            - x7XDNC7
            - hCy3
            - ATdO9M
          matchLabels:
            IRkbr: LxlTB
            ny3ztLITPkZQA: t2WSWQfQolp
        maxSkew: 830165066
        minDomains: -1516905288
        nodeTaintsPolicy: 粔8ŕ蟸9糄葉5祭葕ý蝗牵:·
        topologyKey: uPOu8jgVXuK
        whenUnsatisfiable: ñA鿔[vǬɊTûg
      volumes:
      - name: ""
      - name: CM
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: ft
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-021.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: 12bwUKO
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 0Ctyxs
    health:
      healthProbeBindAddress: KP
    kind: xi
    leaderElection:
      leaderElect: false
      resourceName: p
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 83
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: 5-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: 5-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: "5"
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: "5"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "5"
subjects:
- kind: ServiceAccount
  name: 12bwUKO
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: 5-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: "5"
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: 5-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: 5-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 5-election-role
subjects:
- kind: ServiceAccount
  name: 12bwUKO
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: "5"
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "5"
subjects:
- kind: ServiceAccount
  name: 12bwUKO
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: 5-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 5-rpk-bundle
subjects:
- kind: ServiceAccount
  name: 12bwUKO
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: 5-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: ZtDuI
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZtDuI
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kxvj1aV: un4v2
  name: "5"
  namespace: default
spec:
  replicas: 1305932217
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: ZtDuI
  strategy:
    type: 談¾
  template:
    metadata:
      annotations:
        CAH: ""
        WEO: 3a
        WleIUaz: VxUI
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: ZtDuI
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=PgU9SwD
        - aQJ
        - ""
        - DJZ4
        command:
        - /manager
        env: []
        image: 5T8t:fK
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 621
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 500
          periodSeconds: 114
          successThreshold: 590
          terminationGracePeriodSeconds: 91
          timeoutSeconds: 571
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 353
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 192
          periodSeconds: 302
          successThreshold: 359
          terminationGracePeriodSeconds: 709
          timeoutSeconds: 322
        resources:
          limits:
            cpu: "441"
            memory: "428"
          requests:
            cpu: "586"
            memory: "576"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector:
        B4: hc
        QftYNI: I
        Yw: J5YRBO4R
      securityContext:
        runAsUser: 65532
      serviceAccountName: 12bwUKO
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: -7ʫ孼
        key: g3Bs
        operator: 枳鋰tɚO_ÁÖ
        tolerationSeconds: -4925537737759855000
        value: 25p
      - effect: ƣ旾ÈsĦ幏4ǁ帄ǀ荥<y嬎ǵ请
        key: XY551Q9SP
        operator: 2齘籅駀9^咁[Ƨêü熥X
        tolerationSeconds: 343908103965601600
        value: W0hlH
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 12bwUKO
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-022.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: i4euw
    health:
      healthProbeBindAddress: 3A
    kind: ""
    leaderElection:
      leaderElect: false
      resourceName: weanl
    metrics:
      bindAddress: vHz2mnbzoZuM
    webhook:
      port: 290
kind: ConfigMap
metadata:
  annotations:
    1DvJW: rHStv2tPg
    nol: gP
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    1DvJW: rHStv2tPg
    nol: gP
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    1DvJW: rHStv2tPg
    nol: gP
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    1DvJW: rHStv2tPg
    nol: gP
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sFwgtf
subjects:
- kind: ServiceAccount
  name: sFwgtf
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    1DvJW: rHStv2tPg
    nol: gP
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    1DvJW: rHStv2tPg
    nol: gP
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    1DvJW: rHStv2tPg
    nol: gP
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    1DvJW: rHStv2tPg
    nol: gP
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sFwgtf-election-role
subjects:
- kind: ServiceAccount
  name: sFwgtf
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    1DvJW: rHStv2tPg
    nol: gP
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sFwgtf
subjects:
- kind: ServiceAccount
  name: sFwgtf
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    1DvJW: rHStv2tPg
    nol: gP
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sFwgtf-rpk-bundle
subjects:
- kind: ServiceAccount
  name: sFwgtf
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    1DvJW: rHStv2tPg
    nol: gP
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: NY
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    1DvJW: rHStv2tPg
    nol: gP
  creationTimestamp: null
  labels:
    8BO5: Bd5OIo
    JnjTVDz: 5xDh
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: NY
    app.kubernetes.io/version: v2.3.8-24.3.6
    gWL: pM
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sFwgtf
  namespace: default
spec:
  replicas: -1514937561
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: NY
  strategy:
    rollingUpdate:
      maxSurge: 389312641
      maxUnavailable: 409084915
    type: ʙȢ鷀飯膎衸Ǵ壖=爗y'w务
  template:
    metadata:
      annotations:
        2e9d56y: qUfslW
        ajTPbl: tf
        bHnse: gNJIIOt
        lM3v: DYQyuIqz7
      creationTimestamp: null
      labels:
        601ZInp40mtiq: ziPZU
        KUKT78: X8SUED3x2
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: NY
    spec:
      activeDeadlineSeconds: -5423575385278517000
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ziRli8b
                  operator: ǧk儓òj+9椖W为鳜ľ陹ȴx暀槹
                - key: V9iN
                  operator: 洐摚芼
                  values:
                  - 1yD1ry
                  - 8o
                  - a
                - key: c3O
                  operator: 郚E俇ɢ侖,
              matchLabelKeys:
              - YqwbU1E
              - g7J5Hs
              - cYjUsOR
              mismatchLabelKeys:
              - DMHj
              - m
              namespaceSelector: {}
              namespaces:
              - SgsJ
              - 0GiB12cmP
              - I
              topologyKey: ydGxno1Za
            weight: -748844046
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: KdxvIChj0
                  operator: 葟為簁鞯ŠÎ糪S
                  values:
                  - ""
                  - 3S4oNW
              matchLabelKeys:
              - HpWtxq4Gdod
              - NCOpECH
              mismatchLabelKeys:
              - 2cWU5O
              namespaceSelector:
                matchExpressions:
                - key: W5q8RY
                  operator: (Ĥ欛尳鮱ęʃNșɤ叐7Wɾ菖脙鈉w子
                  values:
                  - xFfyvw
                  - Hh3Ik3XSYf
                - key: BVAM
                  operator: ǐɔ鄬6u.J珇b璤ɿ鏱煣圶őŁ肇
                matchLabels:
                  z4AUj: WV
              topologyKey: XFOY0Kg
            weight: -1982440673
          requiredDuringSchedulingIgnoredDuringExecution:
          - namespaces:
            - Etsxs
            topologyKey: yHL5U
          - labelSelector:
              matchExpressions:
              - key: CYW4K8
                operator: 逪蕸隣銙敶ěʝ摄躐v嵒Wkbg
                values:
                - 4Kt8
                - ""
                - KuGCKx6Ho
            matchLabelKeys:
            - en8MBJjdMg
            namespaces:
            - dYHS
            topologyKey: uf07N3
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - namespaceSelector: {}
            topologyKey: m0a1
          - labelSelector:
              matchExpressions:
              - key: yVTx3
                operator: ""
                values:
                - iHVdE
                - ssAXzX2CyS
              matchLabels:
                ZOlJ: 6oSkgo
            matchLabelKeys:
            - ldmb
            - SNgq7v
            mismatchLabelKeys:
            - y0er5Ce
            - 3yv87oX
            namespaceSelector:
              matchExpressions:
              - key: Qmd
                operator: ""
                values:
                - gs
              matchLabels:
                6jVHFhv: hV
            topologyKey: tY36GxV
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=zoF
        command:
        - /manager
        env: []
        image: Jlzs9s:GXw
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 527
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 298
          periodSeconds: 829
          successThreshold: 319
          terminationGracePeriodSeconds: 746
          timeoutSeconds: 794
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 671
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 2
          periodSeconds: 138
          successThreshold: 638
          terminationGracePeriodSeconds: 318
          timeoutSeconds: 75
        resources:
          limits:
            cpu: "927"
            memory: "713"
          requests:
            cpu: "371"
            memory: "403"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        searches:
        - P5YqgV3Moz
        - i0c8k
      dnsPolicy: 瑖ʊyÝ袊ȣæȅ7ǽʏR裘*
      ephemeralContainers: null
      hostIPC: true
      hostNetwork: true
      hostUsers: true
      hostname: eq
      imagePullSecrets:
      - name: xoMymJC4ge
      - name: Od2
      initContainers: []
      nodeName: qX7c4a
      nodeSelector:
        Ocj5E: 6ylDXB
        YH9T: 9Z0oHVGzS
      preemptionPolicy: ĸ `s好ɨǌNŨĀ褻
      priority: 1090551194
      priorityClassName: Mlp2GURO
      readinessGates:
      - conditionType: Ⱥ睓T8祛Å_)lŚ[ÿ畭貣Ɣ
      - conditionType: 5=ʖp筱騂憦fý聮榎婧<釤ƆE
      resourceClaims:
      - name: 2S4Fga4Kv8D
        source:
          resourceClaimName: J8
          resourceClaimTemplateName: zriAm
      restartPolicy: 鳨d鲶ìç扪Ɇ塛窧篻H咐鍚
      runtimeClassName: lPAJb
      schedulerName: T4QP9
      schedulingGates:
      - name: BC8nyR
      - name: Vi
      - name: yWk8QG
      securityContext:
        runAsUser: 65532
      serviceAccountName: Ry4
      setHostnameAsFQDN: true
      subdomain: TZ
      terminationGracePeriodSeconds: 1759178306593580300
      tolerations:
      - effect: G觟ȇĜ胑ʏ釴.ěbC24陂ŕ胎\3G
        key: N3
        operator: 携渆四u6
        tolerationSeconds: -4091313833545021000
        value: zVfq
      - effect: ü秕伴ǅ"!肱vcǟ
        key: XAN
        operator: 嘍ƲoƵrǤ?ʥɎʫ叀!v
        tolerationSeconds: 2840878796362177000
        value: RL3
      topologySpreadConstraints:
      - maxSkew: 523912803
        minDomains: -2005250770
        nodeAffinityPolicy: L萡蜒魑ɕ慝
        nodeTaintsPolicy: 懗Ƿʝ_wOg蘳攱
        topologyKey: 8JyDn
        whenUnsatisfiable: 吺ę芖眛
      - labelSelector:
          matchLabels:
            mMpdR: z8
            qLTcl: J87Uo
            tSVCn5dSSCmI: qpdwL8V8vt1rm
        matchLabelKeys:
        - Acg
        maxSkew: -1871164511
        nodeTaintsPolicy: 萭ƱŻĬ$ǚ
        topologyKey: jycDHv
        whenUnsatisfiable: Ɵï
      - labelSelector:
          matchExpressions:
          - key: VNA
            operator: 圿ǠJ
            values:
            - b
            - TBmhe
            - qRCJVs
          - key: TkfNLtSi5
            operator: ""
            values:
            - J67fKBw
            - 1i
            - 6dA
          - key: wihq
            operator: '>qȞ癟[烇C'
          matchLabels:
            eB1Hr04: u2qzbHh
            oAsMpK: ""
        maxSkew: -168479832
        minDomains: 1465487594
        nodeAffinityPolicy: 騻9ǪȢ昺辛[ɵ
        nodeTaintsPolicy: 栘
        topologyKey: rl7xLdf
        whenUnsatisfiable: J
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: 9wZm7
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: sFwgtf
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-023.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi-additional-controllers
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - nodes
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bi
subjects:
- kind: ServiceAccount
  name: TWwJQX
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi-additional-controllers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bi-additional-controllers
subjects:
- kind: ServiceAccount
  name: TWwJQX
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi-additional-controllers
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: bi-election-role
subjects:
- kind: ServiceAccount
  name: TWwJQX
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: bi
subjects:
- kind: ServiceAccount
  name: TWwJQX
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi-additional-controllers
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: bi-additional-controllers
subjects:
- kind: ServiceAccount
  name: TWwJQX
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: bi-rpk-bundle
subjects:
- kind: ServiceAccount
  name: TWwJQX
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 4waX
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4waX
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    iW8sRg: to
  name: bi
  namespace: default
spec:
  replicas: 218897221
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 4waX
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        BjzEZ: x6aQ
        NDv6M: fd9igL
        S397o: L
        vGR: TH
      creationTimestamp: null
      labels:
        QJe1s: KgE
        Rk9pXuf: 5uJqz
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 4waX
        qBd: Wh
    spec:
      activeDeadlineSeconds: 908677350345763800
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchFields:
              - key: GjZ
                operator: 寺Ȫǯæ&
                values:
                - hc8a9
                - 11gcK
                - lhw
              - key: a1
                operator: 隕
              - key: QdG5l
                operator: \冈g酷b
            weight: 1765835600
          - preference:
              matchExpressions:
              - key: i4
                operator: 質ɺč0鯒Ô禌妃0kŽw
                values:
                - uFQREyZGh7Ed
                - t7I
                - w
              - key: 7q1I5h
                operator: ȥ:鎩Ǹ猢
              - key: d62aMb
                operator: 湒vŁ鴧cMȒ]ƌ錝Su唇ʐ柯
            weight: 689430853
          - preference:
              matchFields:
              - key: LAkFH3Gl
                operator: ɚk觱Ź籏<ɭZƍT'H賏
              - key: vs
                operator: ĸTgÎH囦1逺粎ʜ启Ɣ潲Ć[
                values:
                - gM
                - Sv6aS5
                - lt7qLaUy
            weight: 106838082
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  HFhhG: qPu3ad
                  IOcr: thV
                  RL: OS
              matchLabelKeys:
              - U1L
              - 0ZFiN2U
              - xA5L
              mismatchLabelKeys:
              - ToAt
              namespaceSelector:
                matchExpressions:
                - key: HM6bDqfH4
                  operator: 瑗芓ɳ
                - key: A5lt8
                  operator: 輧h
                  values:
                  - SFL3f
                - key: 2cY
                  operator: W
              namespaces:
              - abe2C6
              topologyKey: yKjZ
            weight: -1660862111
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: gsAZ
                operator: 汞ƀ$şQøðŠǥ«錐
              - key: qWyJdhF
                operator: Ì黨欲浪ĨơPøh噠ʬ
              - key: Dl
                operator: yǴĨ賢oɻŝg軘矼Mv躯YȦ
              matchLabels:
                BMMI: 3b6
                HEyr: uEFyszJa2
                y7JrEi4E: jErIYMMan
            matchLabelKeys:
            - GRRZc
            - "2"
            mismatchLabelKeys:
            - CWkj
            namespaces:
            - A2pvW9
            - Gdsi
            - Br
            topologyKey: FSamf
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  HojBg: rJH
              matchLabelKeys:
              - coC78
              - j6YraJB0Rn
              - k6toRo
              namespaceSelector:
                matchExpressions:
                - key: GkjOOh6FjQn
                  operator: ȵƊµHq
                  values:
                  - Op96eYt
                matchLabels:
                  TmlZ0: 9CY
                  eFKzI: c0WKI23yiov
                  sxQCJS: tfjS0j
              topologyKey: HOgYsI
            weight: -262031845
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: Yzzx
                  operator: ǩ療笵ɌLǐ
                  values:
                  - BGB50
                  - EPa9P
                - key: 0J4U
                  operator: /taʍư曃ƶ陠Xǧ
                  values:
                  - hIgbS
                  - c
                matchLabels:
                  thXxFH: 7Z0U
              matchLabelKeys:
              - lWYclL
              - XjKQhHPLF
              - i8tvK
              namespaceSelector:
                matchExpressions:
                - key: WvmxZS
                  operator: Ȱ圤ŸPȱ囵+瘩ʘ
                  values:
                  - "9"
                  - Pqvn
                  - r7Q5D
                - key: vfrS5GxCesj
                  operator: 埬鐂»饄師鴑
                - key: IAt3N
                  operator: 畝.
                matchLabels:
                  JZV7rSl8: nIY
                  yt9s7c: K4S
              namespaces:
              - jqcdm2
              topologyKey: VYx3xk
            weight: 1996657884
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                amb: szxMA
            mismatchLabelKeys:
            - 3p075H
            namespaceSelector:
              matchExpressions:
              - key: ypAVizsc
                operator: 揾楫Ȣȫx`ż辎Ź堟>唱WuN
              - key: YZiAzVi
                operator: '!_怟v屃ł簰瓑''ʘ'
                values:
                - fP
              - key: rNZOekNLt6
                operator: 酮kɀ蟤ɥ鏈x汻粗懗øz獣ȮǨ抧黿
              matchLabels:
                ajqBe2Ks1D: Jd
            namespaces:
            - 9EKcZR
            - OcnfKwRCNN
            - HiZ4lgW
            topologyKey: C
          - labelSelector:
              matchExpressions:
              - key: 2yVYAxbg
                operator: 緅橥uƥ渏笕+莦XǵĮ
              - key: inuw
                operator: EAý郍R{愋Ø
                values:
                - itVHDZ
                - GdnPO
                - Ili8
              matchLabels:
                CR: TXDo
            mismatchLabelKeys:
            - "0"
            namespaceSelector:
              matchLabels:
                1t: JWD3impDVgq
            topologyKey: SU7S
          - labelSelector:
              matchExpressions:
              - key: 9jDPBs
                operator: ""
              matchLabels:
                RS: sB4F1RbUo
                T4tVq: WCU8epfkI
            matchLabelKeys:
            - EnBdS6m
            - OjXrhdI
            - 0D7my
            mismatchLabelKeys:
            - dd
            - R45XH
            - 3JeSwL
            namespaceSelector: {}
            namespaces:
            - fwKmGiPOGCF
            - p0G
            topologyKey: aZZYUC
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=S3
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 49
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 575
          periodSeconds: 975
          successThreshold: 343
          terminationGracePeriodSeconds: 796
          timeoutSeconds: 982
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 564
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 36
          periodSeconds: 801
          successThreshold: 620
          terminationGracePeriodSeconds: 145
          timeoutSeconds: 81
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        nameservers:
        - uFFDQ
      dnsPolicy: '&轃ģçǞy$'
      enableServiceLinks: true
      ephemeralContainers: null
      hostPID: true
      hostUsers: false
      hostname: YE55nA
      imagePullSecrets:
      - name: 9ZLj
      - name: P
      - name: 7wVg
      initContainers: []
      nodeName: Pib
      nodeSelector:
        "": 5PeSaAc
        E9YHS: XpIr01PhRH
        IErx1IR: mxoBL7PtO
        SP1VV: peokQsiLl
        TmvT: QoMPUl
      priorityClassName: V
      readinessGates:
      - conditionType: ąɃ瓣廌g~zĵ5H5嘿涫撳斸)
      - conditionType: ""
      - conditionType: 铋礠買笹ɛȲŽĤ
      runtimeClassName: D8ZV5mL
      schedulerName: uQBeCHZ
      schedulingGates:
      - name: bZ1Ky
      - name: DyAF
      - name: MJ8b
      securityContext:
        fsGroup: 8286315522698384000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -3461140397115298300
        runAsNonRoot: false
        runAsUser: -2938466842819764000
        supplementalGroups:
        - 3485326851700496000
      serviceAccountName: KC9sCa8o
      setHostnameAsFQDN: false
      subdomain: FhT
      terminationGracePeriodSeconds: 5028856913311693000
      tolerations:
      - effect: 颥Ƹ鹕瘌喼Ãɛɦ腢dmĎW­棑滄<DR
        key: UXX
        operator: 2ų噁ƃǽ眰僴gʮÓW
        tolerationSeconds: -6812031885234357000
        value: 6DiBEPxT
      - effect: 奄颫M恩LZ汘ţƫƨɁL
        key: u
        operator: Ʀ猥喞ȼȦ槮VěnX
        value: y1LkLkU
      volumes:
      - name: dZEjjoa
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: TWwJQX
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-024.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    qXu: "N"
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: a
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: OAbTp
    health:
      healthProbeBindAddress: m0O9w
    kind: Vq
    leaderElection:
      leaderElect: true
      resourceName: PGAv5
    metrics:
      bindAddress: aGn
    webhook:
      port: 41
kind: ConfigMap
metadata:
  annotations:
    "": d0zsybqG
    JuYYWSQr: R3Yk7
    TtPk6C: ivO8
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-YCs-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    "": d0zsybqG
    JuYYWSQr: R3Yk7
    TtPk6C: ivO8
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-YCs-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    "": d0zsybqG
    JuYYWSQr: R3Yk7
    TtPk6C: ivO8
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-YCs
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    "": d0zsybqG
    JuYYWSQr: R3Yk7
    TtPk6C: ivO8
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-YCs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator-YCs
subjects:
- kind: ServiceAccount
  name: a
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    "": d0zsybqG
    JuYYWSQr: R3Yk7
    TtPk6C: ivO8
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-YCs-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    "": d0zsybqG
    JuYYWSQr: R3Yk7
    TtPk6C: ivO8
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-YCs
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    "": d0zsybqG
    JuYYWSQr: R3Yk7
    TtPk6C: ivO8
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-YCs-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    "": d0zsybqG
    JuYYWSQr: R3Yk7
    TtPk6C: ivO8
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-YCs-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-YCs-election-role
subjects:
- kind: ServiceAccount
  name: a
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    "": d0zsybqG
    JuYYWSQr: R3Yk7
    TtPk6C: ivO8
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-YCs
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-YCs
subjects:
- kind: ServiceAccount
  name: a
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    "": d0zsybqG
    JuYYWSQr: R3Yk7
    TtPk6C: ivO8
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-YCs-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-YCs-rpk-bundle
subjects:
- kind: ServiceAccount
  name: a
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    "": d0zsybqG
    JuYYWSQr: R3Yk7
    TtPk6C: ivO8
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-YCs-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: YCs
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    "": d0zsybqG
    JuYYWSQr: R3Yk7
    TtPk6C: ivO8
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: YCs
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-YCs
  namespace: default
spec:
  replicas: -529083812
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: YCs
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        Cy: M4SiaG
        H9znVvppijX: jUhlbnoh
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: YCs
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: V
                operator: ə己Ƈ鬜蟬
                values:
                - k
              - key: Ne90njFQZ
                operator: 度Ƀɕƚ
                values:
                - 8f
              - key: ""
                operator: ȉ幑
                values:
                - vZmmoNY
                - oGEPc
              matchFields:
              - key: Wx
                operator: Ǝ}?Ų夕yǋ
            weight: 1916204249
          - preference:
              matchExpressions:
              - key: 2sFPe
                operator: 螇ɨȋR隷訄喾yɌ
                values:
                - OX
              matchFields:
              - key: 62f
                operator: ǘB|Uȁ賴ypŐL
              - key: L5aohi8tqo
                operator: ʦȩʑ4翡-.z籃要橵Z>
              - key: PuT6xGSH8b
                operator: UcEʗúá8髃鰐蛘姗Ä寗
                values:
                - E7iG
                - x8
                - "4"
            weight: 1306690246
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  qhf: h3
              namespaces:
              - gY2qxQ0nkCGD
              topologyKey: GohF
            weight: -860230123
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: lP
                  operator: '`+ɧƑ靲ɣ桹'
                  values:
                  - BbiLAW3LwZ
                  - Y6k0hfr
                  - 0j7
                - key: 19c
                  operator: 姵%单皜v晛ʙ笿%邈yǿ麩ʃ碂ħ穘
                  values:
                  - cK
                - key: cb1Wr9P
                  operator: +瑙腡xǩ鍷ĈĩȧEv詡9O怉Łƿ,³
                  values:
                  - RHuO7E
                matchLabels:
                  L7C: sI
                  YPV8Fo7: mICS5N
              matchLabelKeys:
              - Uix
              mismatchLabelKeys:
              - uJtKX6
              - DU
              namespaceSelector: {}
              topologyKey: ""
            weight: 533908390
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: SBUrD
                  operator: F蚨}压ď²Ö囜
                  values:
                  - T8xc
                  - BI
                - key: FWlF
                  operator: "y"
                - key: QFmBAu03
                  operator: 酯eȻÖ<僱蔮Gc鏺Q瘻Gg恑Ģ+
              matchLabelKeys:
              - lfhl7j
              - lnuO
              - eeLLS
              mismatchLabelKeys:
              - C0Z1RY
              - BPZdW
              namespaceSelector:
                matchExpressions:
                - key: nX2UcFsh
                  operator: ƇZ^渚.稀譨洠"N[缾岈%
              namespaces:
              - G3aYBV2NxKo
              - a5y9bZz
              - 0T
              topologyKey: 8wJ
            weight: -1177645999
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: BekQbPZqKJZ
                operator: m貣R
                values:
                - O82bF
              - key: u3B
                operator: ȿ譑眢
              - key: fZqoQWWFKIP
                operator: ʐ/另ȀȾŘ
            mismatchLabelKeys:
            - DV
            - Y44
            - jon
            namespaceSelector:
              matchExpressions:
              - key: "7"
                operator: F衋倚捣韥ƶ9Ģ刄eȗ;ʯ棢È
                values:
                - qTrUXSCs
                - eP
              - key: YoPuLVm
                operator: 訒Ȉ枬M撚Ġ濾駈Sg
                values:
                - Pg
                - 5GeI
                - "94"
              matchLabels:
                aYbUJz: xpn
            topologyKey: W2w
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=mcE2xz8
        - 2MguVfZ
        - 2d4Gz
        command:
        - /manager
        env: []
        image: 4s6FZUA:z7F5fT
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 89
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 174
          periodSeconds: 261
          successThreshold: 386
          terminationGracePeriodSeconds: 846
          timeoutSeconds: 908
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 111
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 406
          periodSeconds: 922
          successThreshold: 33
          terminationGracePeriodSeconds: 567
          timeoutSeconds: 933
        resources:
          limits:
            cpu: "996"
            memory: "505"
          requests:
            cpu: "89"
            memory: "695"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets:
      - name: 2di49JY
      initContainers: []
      nodeSelector:
        0kGsLN9: oMUX
        L3: FtMGt
      securityContext:
        runAsUser: 65532
      serviceAccountName: a
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: a
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-025.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    0tYCAF2p: LH0vf
    9izrY41ZN: MvuV647jr
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Gn
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: sA
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 5xlVr0Pv
    health:
      healthProbeBindAddress: DO
    kind: JlQ
    leaderElection:
      leaderElect: true
      resourceName: Ertd
    metrics:
      bindAddress: nj7oX2Fh
    webhook:
      port: 221
kind: ConfigMap
metadata:
  annotations:
    x: ORQB
  creationTimestamp: null
  labels:
    0tYCAF2p: LH0vf
    9izrY41ZN: MvuV647jr
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Gn
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: VI1RU-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    x: ORQB
  creationTimestamp: null
  labels:
    0tYCAF2p: LH0vf
    9izrY41ZN: MvuV647jr
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Gn
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: VI1RU-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Gn
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    x: ORQB
  creationTimestamp: null
  labels:
    0tYCAF2p: LH0vf
    9izrY41ZN: MvuV647jr
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Gn
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: VI1RU
  namespace: default
spec:
  replicas: 902866093
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: Gn
  strategy:
    rollingUpdate:
      maxSurge: 1980422136
      maxUnavailable: 2011281189
    type: RollingUpdate
  template:
    metadata:
      annotations:
        OSzZn: zFjtDhp
        YpD: kvWe712msLmvq
      creationTimestamp: null
      labels:
        TvAx: 7DfhwNU
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: Gn
        f: mmR9Dv
        rq: rp633Yu
    spec:
      activeDeadlineSeconds: -6397634401589060000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: L9R
                operator: '}7Iv'
                values:
                - SwG
                - FH
              matchFields:
              - key: i13cz6WcCr
                operator: ú么庘4怺|乑
                values:
                - cOO4w9Ue
              - key: twStucD4
                operator: +ŖŽ</ʍăī鸏$瘠űɾɐ琣訚
                values:
                - ""
              - key: C4aRL
                operator: 蒷騐ǈ颻xș崲Ʀ(%螚ɿğɥ
                values:
                - 9z8oJ3j
            weight: 1379025431
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: QYgH9b
                operator: 佅\{0Ȯ)鑯gɮ剂ȩ癪mTɊÛ叓邍6
                values:
                - dd
              - key: HWUtZcyJSn3Jb
                operator: úc
                values:
                - W
                - HNZHJnU
                - 2pF
              matchFields:
              - key: "3"
                operator: 櫙Ŕ碯$ȅʐ#薳5
                values:
                - LoVLwVF9
              - key: WVPCm
                operator: '#訯2Ƈ'
                values:
                - 5Ez2Adp
                - U
              - key: M
                operator: 戧磏¼瑊脳Ə铡季a
                values:
                - PIrn
                - znKelJ
                - SyemZC4Je
            - matchExpressions:
              - key: M3ikGAiO
                operator: ɠ璣ťł¨儨;廹ʖɤ=2乷ǣ
              matchFields:
              - key: MyJ
                operator: ê|Ù*貇ėl3
                values:
                - IxSyMRJo775E
                - Lfv
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                B: GhyumAI
                at0: M
            matchLabelKeys:
            - aA3TsO3XQ
            namespaceSelector:
              matchLabels:
                JfidEVo: n0scjtjv0LUH
            namespaces:
            - IJRg
            topologyKey: W7eixdM
          - labelSelector:
              matchExpressions:
              - key: bq6t5ZfnfXQ7
                operator: ǙĉN檵ŌŀRpɸ
                values:
                - t3o5tU
                - D
                - 5r
            matchLabelKeys:
            - 3CHs
            - 2uT
            mismatchLabelKeys:
            - W0ejtH
            namespaceSelector:
              matchLabels:
                9PIlkiR: KZdkMS5ewt
                U0pQAIXhH: NWgJbmjfFct
                Va3wRQ: sllMl
            topologyKey: tNCppwo1
          - labelSelector:
              matchExpressions:
              - key: uR
                operator: Ƃ犱彲韡Ï虵给
              - key: Brv
                operator: ƤÞ嗭ɮȬǚɂ荸V宇ʄc
                values:
                - MX
                - ffiM
              matchLabels:
                2G: ""
                fmcpJZF15N8: 5dhE7IS
                oiq4T0Fry: vp
            mismatchLabelKeys:
            - 2TndHWidq
            - 64ko
            - Yet
            namespaceSelector:
              matchExpressions:
              - key: Sqi1
                operator: 'dɛmȕ趿鍩:'
                values:
                - IT
              - key: d
                operator: YyI>ʥNjĦC嘉á
              - key: X0Loc
                operator: ĠQ綀¾
                values:
                - a6yo
                - qn
            topologyKey: V5cCPc
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: nGjZ
                  operator: Ȯa醱代Ɵ:RȆȵf烚ķȸ荛'
                  values:
                  - C
                  - mFmL9z
                matchLabels:
                  WOz: IDw
                  hQ: k5Rv4x7F
              matchLabelKeys:
              - GM
              mismatchLabelKeys:
              - qvfKJzn
              topologyKey: hP2IsXzK
            weight: -1880607146
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: vEZutz
                  operator: 玓黓«ɔQ鿮憖箴7
                - key: D1
                  operator: 怨Z)HW藸団.
                  values:
                  - w
                matchLabels:
                  hh: b8vr
                  lYeVXo: qIsVTM8fu
              matchLabelKeys:
              - rln
              - Zoh
              namespaceSelector:
                matchExpressions:
                - key: I
                  operator: 珡Gf5対/癄用ŜŽɹ^ƜǇɃmƮʕ
                  values:
                  - syyRfQ22o7
                  - 6wQTe
                - key: 2G48vYS
                  operator: 年v^槶W"@y钧Ǆ^{#:İ
                matchLabels:
                  i6Ul: 3Ir
                  lRe0FSnq: 7O9Q
                  vstjaQ0: 6EDkw92
              namespaces:
              - pnmOQV
              - o
              - KtW
              topologyKey: kc4Wp9
            weight: -1564809665
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: 0ON5LE
                  operator: 逝
                  values:
                  - cn1Cet
                  - udAh8
                - key: VO
                  operator: eğUfʧ皜ť惑iŻ26äY
                  values:
                  - 35a
                  - nPlm
                  - ""
                matchLabels:
                  GF0: YDFd7
                  qHnm7: X3gbc
              matchLabelKeys:
              - M
              - st3
              mismatchLabelKeys:
              - XHmLH
              namespaceSelector:
                matchLabels:
                  qDB: ""
              topologyKey: H6Q0a8bj
            weight: -1254546839
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: pPex5QaH
                operator: 裩½膥®!o$Ő嵕ViƟG悮 Ȓo
                values:
                - XFCGl0481iWXC8t
                - 4HBw
              - key: UEhwis
                operator: D騋頜.開3洨ýĬ絾ɨCI6cB姂鞍Ő
                values:
                - MnB
                - 87h
                - oY7
              matchLabels:
                l15YWQBhZ: Q1E3EE
            matchLabelKeys:
            - YYakMFEY
            - erAg6zOP
            namespaceSelector: {}
            namespaces:
            - tPjy4sd3
            - Iwd
            - t3
            topologyKey: 0mWw1GV
          - labelSelector:
              matchExpressions:
              - key: b75riGdmr
                operator: ɭf4Ƣųdǝ,趱b_ɸ
                values:
                - 9Fk
                - qZ8pCY1W9y
              - key: I34emF
                operator: ş浦c}|v
                values:
                - Tzre
              matchLabels:
                gOc3cz: ab
            namespaceSelector: {}
            topologyKey: ATRK8Cw
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=NaLO9z
        command:
        - /manager
        env: []
        image: g96:Lotm9epAH
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 347
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 320
          periodSeconds: 893
          successThreshold: 928
          terminationGracePeriodSeconds: 913
          timeoutSeconds: 25
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 682
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 502
          periodSeconds: 886
          successThreshold: 699
          terminationGracePeriodSeconds: 876
          timeoutSeconds: 573
        resources:
          limits:
            cpu: "3"
            memory: "220"
          requests:
            cpu: "509"
            memory: "234"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        options:
        - name: Wf0HvUtqF
          value: B
        - name: YSJ
          value: KVG
        - name: mENG1svR2
          value: pLbeGQ27xv
        searches:
        - W
      dnsPolicy: 鼌Ģ鴂
      enableServiceLinks: true
      ephemeralContainers: null
      hostNetwork: true
      hostname: gBduz
      imagePullSecrets: []
      initContainers: []
      nodeName: Ni
      nodeSelector:
        qD47: 630ZQytVa
        uc: 6HPiNwKAFVM
      preemptionPolicy: e宣鰾r揠İǑ
      priority: -1305548838
      priorityClassName: ivc9Qx4W
      readinessGates:
      - conditionType: 蝠蔢ĦɃ
      resourceClaims:
      - name: XCVZh
        source:
          resourceClaimName: U2eE7
          resourceClaimTemplateName: rM
      runtimeClassName: 1JJ
      schedulerName: 4e4VR
      schedulingGates:
      - name: "n"
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 6989821764973521000
        runAsNonRoot: false
        runAsUser: -4511128637598070300
        supplementalGroups:
        - 5575289228098934000
        - -3802520852329744400
        - -3418870242951103000
        sysctls:
        - name: yVQUmX
          value: HMnESA5X
        - name: sppxK
          value: ZGrJ
      serviceAccountName: nNQXr
      setHostnameAsFQDN: false
      subdomain: wt8j7AI
      terminationGracePeriodSeconds: 6961863183836321000
      tolerations:
      - effect: A\Ƣ
        key: iziP
        operator: ħXK{8Ƿ韟
        tolerationSeconds: -4478242017118697500
        value: 6jeY5TPOEJY
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: ""
      - name: 061joXv
      - name: nASsEAPm
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: sA
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-026.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    5L: j2D1CM1hpmck3l
    VtUx5gn: vI6EOhi2BO
    fHiSr: wgWqdOQ
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: blB
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: L2DP4n7
    health:
      healthProbeBindAddress: mZ
    kind: KxDoa4t
    leaderElection:
      leaderElect: false
      resourceName: pQvy0sQo
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 194
kind: ConfigMap
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: "2"
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: "2"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "2"
subjects:
- kind: ServiceAccount
  name: blB
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: "2"
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 2-election-role
subjects:
- kind: ServiceAccount
  name: blB
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: "2"
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "2"
subjects:
- kind: ServiceAccount
  name: blB
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 2-rpk-bundle
subjects:
- kind: ServiceAccount
  name: blB
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: VhCMS
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: "2"
  namespace: default
spec:
  replicas: -2036915675
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: VhCMS
  strategy:
    rollingUpdate:
      maxSurge: 1351085039
      maxUnavailable: 301698135
    type: l¢ʍ<VǍ礽ʯ&ǌr治剛"檉彁ǌ
  template:
    metadata:
      annotations:
        rJ7j7Tt5x: M
      creationTimestamp: null
      labels:
        "": KJq
        92Kevw3no: V
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: VhCMS
    spec:
      activeDeadlineSeconds: 4671406355475052000
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              matchLabelKeys:
              - vvsCd80Nt
              - bZj36
              - R1
              mismatchLabelKeys:
              - FS
              - Q9pUX7
              namespaceSelector:
                matchLabels:
                  Vr: BHOhC
              topologyKey: ""
            weight: -1942974071
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                LeUU: OBZ1HxS
                ioUWP75: q
            mismatchLabelKeys:
            - IOV9y
            - pNc2yWa
            namespaceSelector:
              matchExpressions:
              - key: 0YE1Mzh
                operator: ""
                values:
                - Pk
              matchLabels:
                "23": 4O
                P0ElmAY1: z0R
                dcPd4oi: U05s7VdMT
            topologyKey: "7"
          - labelSelector:
              matchExpressions:
              - key: jwYeHm0SsOZy
                operator: 欳ȃ謤竽ʐřœTRʠ瀤S
                values:
                - x2P
                - P
              matchLabels:
                0IBw: 7XN9KMZ9s
                4vAu5V: FFLrX
                v8cXHB: 0ujqLAw
            matchLabelKeys:
            - 4Z4Y9n
            mismatchLabelKeys:
            - IyZvKP
            - i7
            namespaceSelector:
              matchExpressions:
              - key: "8"
                operator: Ǳ¤\Ǩ玮俁JU桼DğB
                values:
                - h
                - 7w
            topologyKey: oNRT
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              matchLabelKeys:
              - V1oPv
              - JEPiF4b
              - y9pW42
              mismatchLabelKeys:
              - ""
              namespaceSelector:
                matchExpressions:
                - key: tl0jXW4Y
                  operator: RjV{惈柭^瑍瞠ōʢDº4悐
                  values:
                  - "414"
                  - aKz
                  - Xbub8qEBe
                matchLabels:
                  "": v2Mcy
                  DFk: sP9rUvbpZ
              topologyKey: tnVGHEQggyJMkn
            weight: 198181757
          - podAffinityTerm:
              labelSelector: {}
              matchLabelKeys:
              - rDB
              - tVw9R9
              - Y4
              namespaceSelector:
                matchExpressions:
                - key: wd
                  operator: Ó氳鱄ɽeɴê矸ƻOƌʤȦM&恒邴Ù濏
              namespaces:
              - zWii
              - IZmt
              - iUPg
              topologyKey: OP9Ta
            weight: 1135258075
          - podAffinityTerm:
              labelSelector: {}
              namespaceSelector:
                matchExpressions:
                - key: p2iTqS
                  operator: 椠醊
                - key: NKev7
                  operator: ġ熴M龛ʫ!Ǳ
                  values:
                  - ""
                - key: qJZXh7g
                  operator: 2Ťʭ瓠
                  values:
                  - "97"
                  - AfKaLDbV
                matchLabels:
                  uAWaSD1P: xl
              namespaces:
              - ueHg
              topologyKey: YoXQsG
            weight: 188181929
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=xLHAob
        - htV
        - ItRsBL
        command:
        - /manager
        env: []
        image: Bl6b0ql7:5yg4G
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 397
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 401
          periodSeconds: 839
          successThreshold: 848
          terminationGracePeriodSeconds: 695
          timeoutSeconds: 312
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 788
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 248
          periodSeconds: 943
          successThreshold: 701
          terminationGracePeriodSeconds: 306
          timeoutSeconds: 994
        resources:
          limits:
            cpu: "34"
            memory: "105"
          requests:
            cpu: "495"
            memory: "673"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        nameservers:
        - tZ
        - Qj25J2
        - l8zFIGydrF
        searches:
        - Zk4FZrs5ae
        - nx3LHS9Yfv
        - 8bZHfI8A
      dnsPolicy: ƀ摏衡歹ÎlR^螑ǕyÉ礆Ù泋#獀碯
      ephemeralContainers: null
      hostUsers: false
      hostname: EN
      imagePullSecrets:
      - name: 0WD
      - name: z9gh
      initContainers: []
      nodeName: Q
      nodeSelector:
        4SwhFw: 4vxp
        FvdlcBCdJ: qeSOn
        VY1ap: sFcffS
      preemptionPolicy: "3"
      priorityClassName: J
      resourceClaims:
      - name: c3O
        source:
          resourceClaimName: 3ZmByuxHA
          resourceClaimTemplateName: doiLevXUd2
      - name: iDA1l
        source:
          resourceClaimName: Q
          resourceClaimTemplateName: Q
      restartPolicy: q躾歧Ŋ
      schedulerName: rZ0QR
      schedulingGates:
      - name: M
      securityContext:
        runAsUser: 65532
      serviceAccountName: Yvx
      setHostnameAsFQDN: true
      subdomain: Izd
      terminationGracePeriodSeconds: -4381290323856294400
      tolerations:
      - effect: Å羚出勥Xƿ¾*$/l+袀燪ǳ鉕鑽ƞz
        key: JTMtRqYU
        operator: 怰k2蟔单óèŶcYʫ2k¤2sw抐
        tolerationSeconds: 7380701617125323000
        value: AKE80b
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: ev4S0
            operator: Õ 5亨襃wʥ8Ʒê_娻D
          - key: cHNLLd
            operator: 痊L
          matchLabels:
            "": MlTZfc
        matchLabelKeys:
        - 4xIC
        - 2Y03yJ
        - GAmFWtJ
        maxSkew: 1672962846
        minDomains: 625296479
        nodeTaintsPolicy: 箰/GLƣ萲`証 辽š.¹2z
        topologyKey: Nq
        whenUnsatisfiable: 淍Č幕&ǣ1¥諎噄鬃
      - labelSelector:
          matchLabels:
            "2": tKh9iZ
        maxSkew: -911081029
        minDomains: 1129615196
        nodeAffinityPolicy: zʏG頌ƇȽU
        nodeTaintsPolicy: '&泠Ǜs捞枈Ɯƽ划ɮɶ'
        topologyKey: UAH
        whenUnsatisfiable: ǘXS錞fWȬU
      - labelSelector:
          matchLabels:
            9CS: PfE
            OIlnJt: BHFa2yq
        maxSkew: 501720287
        minDomains: -73275764
        nodeAffinityPolicy: yƠŶȟfd§]f戓ȫlǋÿʧd獑灥Č
        nodeTaintsPolicy: 羫@g臽Ƚ/p满doB
        topologyKey: FS
        whenUnsatisfiable: H皀靬i?
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: 6Wvlg
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    Xpmsmk: xwQ7HYnx
    nht: xpYQ9rPl
  creationTimestamp: null
  labels:
    9Yl4uYdhi: AwRf
    SX: I
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: VhCMS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      9Yl4uYdhi: AwRf
      SX: I
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: VhCMS
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: blB
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-027.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "9": WiLvS4
    Fzjuqz0im: "023"
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Qi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tIa
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: AIFNuEeYwUpo
    health:
      healthProbeBindAddress: yIkNFOYuilpft
    kind: ""
    leaderElection:
      leaderElect: false
      resourceName: Yu4
    metrics:
      bindAddress: 06F
    webhook:
      port: 169
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "9": WiLvS4
    Fzjuqz0im: "023"
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Qi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: z7BRO-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "9": WiLvS4
    Fzjuqz0im: "023"
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Qi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: z7BRO-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "9": WiLvS4
    Fzjuqz0im: "023"
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Qi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: z7BRO
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "9": WiLvS4
    Fzjuqz0im: "023"
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Qi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: z7BRO
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: z7BRO
subjects:
- kind: ServiceAccount
  name: tIa
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "9": WiLvS4
    Fzjuqz0im: "023"
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Qi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: z7BRO-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "9": WiLvS4
    Fzjuqz0im: "023"
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Qi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: z7BRO
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "9": WiLvS4
    Fzjuqz0im: "023"
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Qi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: z7BRO-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: z7BRO-election-role
subjects:
- kind: ServiceAccount
  name: tIa
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "9": WiLvS4
    Fzjuqz0im: "023"
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Qi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: z7BRO
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: z7BRO
subjects:
- kind: ServiceAccount
  name: tIa
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "9": WiLvS4
    Fzjuqz0im: "023"
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Qi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: z7BRO-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Qi
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "9": WiLvS4
    Fzjuqz0im: "023"
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Qi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: z7BRO
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: Qi
  strategy:
    rollingUpdate:
      maxSurge: 481964751
      maxUnavailable: 1179039022
    type: ǻ刄0=:Ȱʤ
  template:
    metadata:
      annotations:
        rTcr: H1
      creationTimestamp: null
      labels:
        49lnunW: Ez8h8
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: Qi
        n3fP: cATLStp
    spec:
      activeDeadlineSeconds: 9141293304224905000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: 1w9Pu9h
                operator: '}n镠#y鳻Ǳ捉8`ǲ紭ƀƹǚɰƛ'
                values:
                - A68jGo
                - ndt5KuwcA4
              - key: 005d
                operator: ĩM圝悞
                values:
                - HL3p4MlF5Wj
                - RF
                - JmRLwcFKH
              - key: weJEyTo2
                operator: ʗpʓɲ厫Ɯ麭
              matchFields:
              - key: IzlE
                operator: 鶶湧Īʀ骕Ǯ鶡钿
                values:
                - VjSH3RLXKq
                - "2"
                - YULU
              - key: Dy
                operator: 瓨Å戄xžu嫷\
                values:
                - TFku
                - "y"
              - key: 4f3rN1oF
                operator: SǨŠU靫ǵ匨]m÷)
            - matchExpressions:
              - key: YZXhH
                operator: AȁǧʚžB歕埬ǰ蹳œ=烝{X
                values:
                - JfqnH
                - EpN2zxL8MraT
              matchFields:
              - key: MsRXhTZ8
                operator: 曔ǥOZ辔ʥ
              - key: gW
                operator: 瓉5Ä砗厒鎴~Ö宽D絔
                values:
                - mLibIB
              - key: Nh77
                operator: 瘇籑a
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  "": WCbE
                  HzXudj: Pkx
                  ue: T9TLMa
              matchLabelKeys:
              - ""
              - OrkgHYS3ehB
              - Ld
              namespaceSelector:
                matchLabels:
                  ExTRK: ALdp
                  m89TZNQV: oYOR6Hp1cB
                  n3gDQZfSu0: pd4e9sS3
              namespaces:
              - 6n0UT
              topologyKey: 4fhjT
            weight: -1935326751
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: NmvdsT3P3e
                  operator: 捏#鐵刼鵮|
              mismatchLabelKeys:
              - Ld
              - A
              namespaceSelector:
                matchExpressions:
                - key: q7zPnjNRp9k5f
                  operator: 溻譏ŨƿQe^抩īȦ澀Wë羅Ć椬ɑ
                - key: ph
                  operator: 锨説甶9JU
                  values:
                  - 4q0
                  - fnF9eR
                  - aSDPitB
              namespaces:
              - oGs4WSzuootf
              - fqqIqOUOH
              - TREDkZkTV
              topologyKey: YjsgL8
            weight: -1968522351
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ""
                  operator: <緘帛
                  values:
                  - p7HeoHCtw
                  - fUzdrH5Ze4kX
                  - qDz
                matchLabels:
                  CLxMkCP: o5tQjTW
                  pgO: 81qIWbp6
              matchLabelKeys:
              - zWw3sYRFk
              - W
              - u0h
              mismatchLabelKeys:
              - P
              - Zq6BOoiH
              namespaceSelector:
                matchExpressions:
                - key: bX
                  operator: j邰密_Ǽʟȩ?蘖ţ夁é
                  values:
                  - t
                  - En2u8Z
                matchLabels:
                  5jGB: tCOCtg
                  O0fEGO: 0mV
              topologyKey: A6Kfo8gAO5qWChNa
            weight: -1628329532
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: n6pzdXI
                operator: 徳¾綩ũxlĻś騗;ȭcǠ9
              - key: jwpNJLt
                operator: 6jɜƒş紣§
                values:
                - Gov
                - eoeQZplB
              matchLabels:
                fdf: 5o
                fpX8wc: VIPZFc
            mismatchLabelKeys:
            - pJ9ufPp1Qjk
            - 84lu
            topologyKey: vjniu3sds1
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                FpBI09JHk: Ed
                SLVf: YJnQGF7f7wSfe
            matchLabelKeys:
            - W7Cq
            - WmQWIk
            - gGhu1dam
            mismatchLabelKeys:
            - QOMQIvT
            namespaceSelector:
              matchExpressions:
              - key: R3
                operator: ʁƇŰ鬹
              - key: 4owLH4k80rCh
                operator: ©8焂s宎B98ʛ袗庴Ŋɝ醼1聋
                values:
                - Zp
              matchLabels:
                3JAc2eQ: FE
            topologyKey: TI4fe
          - labelSelector:
              matchExpressions:
              - key: D
                operator: 潔ƨ4ʦŠtôǙɿ?QŮ
              - key: Mb
                operator: 蚆ð
                values:
                - IlZX
                - k
              - key: yB3e
                operator: ÀňɃ
              matchLabels:
                3UWq: Iz4CmO6
                GElpVSN6F: yODU
            mismatchLabelKeys:
            - uil
            namespaceSelector: {}
            namespaces:
            - ETipxDFi
            - zjFrIj
            topologyKey: zeW3mM5e
          - labelSelector:
              matchExpressions:
              - key: eLk7A
                operator: j稪jq瑶Öɗ羅e鞠
                values:
                - WBFxxRo7t
                - 1XI8hUvFoIqEwdAj
                - rAiQV
              - key: t0q1U
                operator: 旔^滷ȀR摌ǢH鯀媞ʭǊ硜骓ʚTt撨侺
                values:
                - 5OzHFHu
              - key: gttu
                operator: 髕ɽ韓窂洵觿D5ɬ¬韑s阐墸谒1鵙并胃
              matchLabels:
                3e: hB
                OJptqFyTFK: zASJ
            matchLabelKeys:
            - 6H4hRbF
            - UTmjnl6dS
            - LiCxfZwcx3
            mismatchLabelKeys:
            - C
            - jav
            - Qp7FDSIW
            namespaceSelector:
              matchExpressions:
              - key: KtJIWO
                operator: 怤|ÁĵɈiiɧ瑱
                values:
                - ASisP
                - zgaGXy
                - tFJ
              matchLabels:
                5WHpK46Ub: HwN
            namespaces:
            - 27NkuRS
            - PpDFPG
            - h4zZM
            topologyKey: "8"
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=GusePZR7AB
        - TvXwul
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 231
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 282
          periodSeconds: 420
          successThreshold: 515
          terminationGracePeriodSeconds: 611
          timeoutSeconds: 468
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 159
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 562
          periodSeconds: 630
          successThreshold: 58
          terminationGracePeriodSeconds: 623
          timeoutSeconds: 40
        resources:
          limits:
            cpu: "785"
            memory: "765"
          requests:
            cpu: "148"
            memory: "865"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        nameservers:
        - oW5sc9
        - xye
        - 1chDNRH
        searches:
        - Ho
        - LTzvNVoiR
        - gqxkLQ
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - 4nnDbyw
        - sy0DBxKlj
        - 2D6SBf
        ip: rPbGL
      - hostnames:
        - j
        - 74IhtvoY
        - C97u8VAc
        ip: EQcR7AF
      - ip: eleqYI00DZt58B
      hostNetwork: true
      hostPID: true
      hostUsers: true
      hostname: kR438WW
      imagePullSecrets:
      - name: dM62K
      - name: dSfFKis
      initContainers: []
      nodeName: LyLdmK
      nodeSelector: {}
      preemptionPolicy: 煋Ʋ8嗟饜ʅ惉閖驐烣ƂŃOĊ惉
      priority: -1762784349
      priorityClassName: Pn
      resourceClaims:
      - name: vIaA
        source:
          resourceClaimName: gYwI3oUjVaIn5V
          resourceClaimTemplateName: kw5w
      - name: iZPhHmwVCKoVIo
        source:
          resourceClaimName: OcO
          resourceClaimTemplateName: dJ7
      runtimeClassName: 7zYC
      schedulerName: tf1m94c
      securityContext:
        fsGroup: 6847218690717587000
        fsGroupChangePolicy: Always
        runAsGroup: -2170921719681251000
        runAsNonRoot: false
        runAsUser: -4568834505270848000
        supplementalGroups:
        - 1862100593405480700
      serviceAccountName: 2u
      subdomain: NNet7N
      terminationGracePeriodSeconds: 4244924329000383500
      tolerations:
      - effect: r
        key: SxUOi
        operator: '!广T來.Ĉɚ奋赿絙.纅0dɡY'
        tolerationSeconds: -6578332701095868000
      - effect: ɧB
        key: 1S
        operator: '}ƦÜ炛ƣ閳>avń橆V'
        tolerationSeconds: -5670792804219815000
        value: J4HDxi9rSArcn
      - effect: A蕝uʛȇºůŚǈɽ崮
        key: w0
        operator: /lz枟ȕƮïÏū翁Ɵ罂ŔĖ
        value: yfqJp7
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            b6O: "82"
            uq9N: j0
        matchLabelKeys:
        - qszz
        maxSkew: 383079126
        minDomains: 574068731
        nodeAffinityPolicy: ""
        nodeTaintsPolicy: Ěĝȑ簐Œ柔GÂ鷜蹡jtèȌÂȜǪ
        topologyKey: kgyI
        whenUnsatisfiable: b洦ƫț4Ȅ蠡[圴撻
      - labelSelector:
          matchExpressions:
          - key: ""
            operator: BĔʧǉD'pŅ楕Ⱦǆ-gʏ鱸j,
          - key: OnpW
            operator: 纟殐壴R鷥RI礞璽ĵ葖C薄@8>
            values:
            - ""
            - vx6t4Gn
        matchLabelKeys:
        - Foa
        maxSkew: -1486537465
        minDomains: 1840673437
        nodeAffinityPolicy: ŵļ昿ʟrǖ護泔ȯÏƳČŠų
        nodeTaintsPolicy: 軛
        topologyKey: s6
        whenUnsatisfiable: ""
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: 166J
      - name: 4V
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "9": WiLvS4
    Fzjuqz0im: "023"
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Qi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: z7BRO-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      "9": WiLvS4
      Fzjuqz0im: "023"
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: Qi
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: tIa
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-028.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 0pdE
    health:
      healthProbeBindAddress: SSUvR
    kind: kb
    leaderElection:
      leaderElect: true
      resourceName: fiacWH
    metrics:
      bindAddress: 0Wri6W
    webhook:
      port: 425
kind: ConfigMap
metadata:
  annotations:
    6z1JUm: ""
    UZQUK5: NmVcFpyl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 7Nn
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: na-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    6z1JUm: ""
    UZQUK5: NmVcFpyl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 7Nn
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: na-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 7Nn
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    6z1JUm: ""
    UZQUK5: NmVcFpyl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 7Nn
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: na
  namespace: default
spec:
  replicas: 409512392
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 7Nn
  strategy:
    rollingUpdate:
      maxSurge: 1869473445
      maxUnavailable: 767850509
    type: ƥqȆ
  template:
    metadata:
      annotations:
        "": ZBBGf
        4Es1xV8CqO: J59c9YK0b
        OLzhH: nO
        "y": F
      creationTimestamp: null
      labels:
        "479": R
        KzjjU: bNeafB
        PUO: 3HVPY
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 7Nn
    spec:
      activeDeadlineSeconds: -7669638163721044000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: VC9NPg
                operator: 堔OQ佟:檭欨雞L瑛O8C
                values:
                - fJEeZW0qJ
                - hVmIEug9SSa
                - ""
              matchFields:
              - key: XNJB53k1F
                operator: '#ŷc榆鯁[UªőAx9ɎÉȀ'
              - key: D0wl4k
                operator: Ɂǃ ʆ4];ÉŪʐç
                values:
                - w2tSRUq6M
                - 2Mxlfv
                - 1XpvQL
              - key: sNq7IUCFt
                operator: 忄AAɚ鮫琕3ɛį&楤zĄ*%Ȧ
            weight: 569688052
          - preference: {}
            weight: -298021391
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              matchLabelKeys:
              - VcRS
              namespaces:
              - ys
              topologyKey: aKQ
            weight: -1815889977
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: VUij
                  operator: 鵼6ȯ铃SOS屫ż#Ņdʇfɡ8^鼻Ȉ
                - key: oZu
                  operator: 婘&9ɏʦǅ蔾uʆ蹆M)幸Ƿ
                  values:
                  - cWwpJl2n
                  - ek9
                  - HckueaEyl2
                - key: GyQ4ei
                  operator: 玔爘W
                matchLabels:
                  4g47: wjIG
              matchLabelKeys:
              - f9c
              mismatchLabelKeys:
              - aS3
              - cL
              - Ovi
              namespaceSelector: {}
              namespaces:
              - 05kH
              topologyKey: zeZsg2nvt
            weight: 1590497712
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=EQ
        - ufbUW
        command:
        - /manager
        env: []
        image: qO8Q6:S
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 402
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 74
          periodSeconds: 749
          successThreshold: 877
          terminationGracePeriodSeconds: 208
          timeoutSeconds: 607
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 265
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 604
          periodSeconds: 342
          successThreshold: 325
          terminationGracePeriodSeconds: 355
          timeoutSeconds: 35
        resources:
          limits:
            cpu: "681"
            memory: "288"
          requests:
            cpu: "839"
            memory: "826"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        nameservers:
        - 9uF4n
        options:
        - name: oKphH
          value: Tw2
      dnsPolicy: ʢůȠȐʈè忣Ų堗决
      ephemeralContainers: null
      hostAliases:
      - ip: nipRwzHl
      hostIPC: true
      hostPID: true
      hostUsers: false
      hostname: 38Jzj
      imagePullSecrets:
      - name: Jq6
      initContainers: []
      nodeName: P
      nodeSelector:
        FJzqc8SS: AfX1rB
        XbVrcFi: "1"
        "Y": f4i
        aY6: p6zmUKv
        sm: oGp
      preemptionPolicy: 佯¶ð_Ŋ帓ȇȇñȎj
      priority: 189241819
      priorityClassName: s6
      resourceClaims:
      - name: 2JeXX
        source:
          resourceClaimName: BfadY
          resourceClaimTemplateName: CGOeu
      - name: 4yOW9
        source:
          resourceClaimName: EPn4E65
          resourceClaimTemplateName: 3tZiyKD
      - name: cY
        source:
          resourceClaimName: R
          resourceClaimTemplateName: iryT
      restartPolicy: 徚籨
      runtimeClassName: Gj15
      schedulerName: GiJ
      schedulingGates:
      - name: A
      securityContext:
        fsGroup: 2442655365152128000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 3592741137103323600
        runAsNonRoot: true
        runAsUser: 650673957928566800
        sysctls:
        - name: 4WiDRa0
          value: vB
        - name: WqomZPg
          value: pJzBXy5
        - name: Q4ecXvxUI
          value: 9Km4a2U
      serviceAccountName: zCava2sBrOJ
      setHostnameAsFQDN: false
      subdomain: xBuRy6JY
      terminationGracePeriodSeconds: 7922635006545135000
      tolerations:
      - effect: QƓ猠i櫰fŶ>Tǃ碫*
        key: o4w
        operator: ɇ`iɜ::鱥鄔DÃ妞薺ȭ靄
        tolerationSeconds: -7729504422924054000
        value: ztFE4TAoJW
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: GKG
            operator: 'ǎ3Ð+Ūä噏ų '
            values:
            - m48Rys
          - key: rMY
            operator: Ao藱0]领Ȗ½u瞪谶裐辁忓"劶lY
            values:
            - kjpyMDUO
            - UUa
        matchLabelKeys:
        - W8hec
        - 9XvWreUbu
        maxSkew: -1591264848
        minDomains: -557215783
        nodeAffinityPolicy: ɰ±ń谪ĳ液
        nodeTaintsPolicy: ½mƚ
        topologyKey: zz9l
        whenUnsatisfiable: 駻FƂ薩Ǐ
      - labelSelector: {}
        maxSkew: 1667721550
        minDomains: -651705871
        nodeAffinityPolicy: 2Ʃųʯ郇ȼ崭x"~嘵|j虷¦!ȟ
        nodeTaintsPolicy: 焗泧X 廟J5ʬ
        topologyKey: 8k
        whenUnsatisfiable: 8ǁ駀ǆe渣A媨豹l氮Ȣʖ埋F¨ì
      - labelSelector:
          matchExpressions:
          - key: gGILY
            operator: R磒冢萑(唀簏呄@篦Ȟ杭YǠě]
          - key: 9TJt6
            operator: ""
            values:
            - ""
            - Qp0cBX4
          matchLabels:
            JQLd: XYOYfNAA
            jt4iO: Z64hnSu
        matchLabelKeys:
        - HAi9Gv
        - sWYmzK
        - r6j1rSNKX
        maxSkew: -897543284
        minDomains: -1529871564
        nodeAffinityPolicy: '`ěS(U幵ĤıĢȟ紳輆ş'
        nodeTaintsPolicy: Łļǻ軀折TŜ崵駿Sã8ō'ɷ嵡
        topologyKey: R
        whenUnsatisfiable: Es織ŸgÉw5-颒辰gÝ
      volumes: []
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    6z1JUm: ""
    UZQUK5: NmVcFpyl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 7Nn
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: na-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: 7Nn
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: LS9
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-029.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: Z5c
    health:
      healthProbeBindAddress: :8081
    kind: 8HW7
    leaderElection:
      leaderElect: false
      resourceName: 9uQb7
    metrics:
      bindAddress: Ni
    webhook:
      port: 60
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    H15A: FR
    ImNZ2R: 4b11Ajcj71
    MkV5WTrr: tzjZwG
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aYT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: D-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    H15A: FR
    ImNZ2R: 4b11Ajcj71
    MkV5WTrr: tzjZwG
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aYT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: D-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    H15A: FR
    ImNZ2R: 4b11Ajcj71
    MkV5WTrr: tzjZwG
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aYT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: D
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    H15A: FR
    ImNZ2R: 4b11Ajcj71
    MkV5WTrr: tzjZwG
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aYT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: D
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: D
subjects:
- kind: ServiceAccount
  name: 40Wt
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    H15A: FR
    ImNZ2R: 4b11Ajcj71
    MkV5WTrr: tzjZwG
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aYT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: D-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    H15A: FR
    ImNZ2R: 4b11Ajcj71
    MkV5WTrr: tzjZwG
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aYT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: D
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    H15A: FR
    ImNZ2R: 4b11Ajcj71
    MkV5WTrr: tzjZwG
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aYT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: D-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    H15A: FR
    ImNZ2R: 4b11Ajcj71
    MkV5WTrr: tzjZwG
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aYT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: D-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: D-election-role
subjects:
- kind: ServiceAccount
  name: 40Wt
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    H15A: FR
    ImNZ2R: 4b11Ajcj71
    MkV5WTrr: tzjZwG
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aYT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: D
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: D
subjects:
- kind: ServiceAccount
  name: 40Wt
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    H15A: FR
    ImNZ2R: 4b11Ajcj71
    MkV5WTrr: tzjZwG
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aYT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: D-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: D-rpk-bundle
subjects:
- kind: ServiceAccount
  name: 40Wt
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    H15A: FR
    ImNZ2R: 4b11Ajcj71
    MkV5WTrr: tzjZwG
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aYT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: D-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: aYT
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    H15A: FR
    ImNZ2R: 4b11Ajcj71
    MkV5WTrr: tzjZwG
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aYT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: D
  namespace: default
spec:
  replicas: 1462201037
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: aYT
  strategy:
    rollingUpdate:
      maxSurge: 1170346904
      maxUnavailable: 732386123
    type: 讵揼2嗪刵h®ªɓ'ƹlNĔU嵩Mɖȭ
  template:
    metadata:
      annotations:
        7ZgRUIU: Y7
      creationTimestamp: null
      labels:
        "8": 5A9Kc
        LBf33434: ic2ddD0
        N7Pnz: jxyQwEY
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: aYT
        bzc: w5h
        rsjj: "y"
    spec:
      activeDeadlineSeconds: 7101025196609439000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchFields:
              - key: QQzmv6
                operator: 9褐uɘ¹齅ʧ潖洝饭W
                values:
                - bvU
                - gD
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: xJE86Io
                operator: Ń徨
                values:
                - 7u1
                - hXrj8
            matchLabelKeys:
            - 2RE5c
            - ThzhOrWn
            mismatchLabelKeys:
            - ""
            - huqSK
            - CjCPaO3z
            namespaceSelector:
              matchExpressions:
              - key: CT
                operator: ț症LŲ餑鍶Ȼ
                values:
                - l0L
                - 2XRA
              - key: riCReJ
                operator: ʣûōUǑƕ鯘
                values:
                - Cwb
            topologyKey: lK
          - labelSelector:
              matchLabels:
                9LrxS2q5w7Z9: "n"
                AVL: L
            namespaceSelector:
              matchExpressions:
              - key: 3U1
                operator: ǪTÚ9ĝǴ閩鄚ʮõ|\hǧȨL哮
                values:
                - I4fKB73i
                - 7dZMC0V5
            topologyKey: W8VSBpD
        podAntiAffinity: {}
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=hPrI1P
        command:
        - /manager
        env: []
        image: 8mlV:Gd0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 240
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 292
          periodSeconds: 547
          successThreshold: 172
          terminationGracePeriodSeconds: 739
          timeoutSeconds: 881
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 402
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 856
          periodSeconds: 588
          successThreshold: 217
          terminationGracePeriodSeconds: 183
          timeoutSeconds: 835
        resources:
          limits:
            cpu: "333"
            memory: "590"
          requests:
            cpu: "514"
            memory: "396"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        nameservers:
        - bnxKu
        - at
        options:
        - name: l
          value: M1PV5a
        - name: Q5umpKe
          value: QbYIA
        - name: Zw0
          value: tBlo
        searches:
        - Va
        - c34gV
      dnsPolicy: tf@赬Ü梆冹3í帅X(我t焕8坴Ë
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - fYHCm25
        ip: NVM77TDo
      - hostnames:
        - PHBAJG8VfD7
        ip: 7F
      hostIPC: true
      hostUsers: true
      hostname: bAue
      imagePullSecrets:
      - name: 8A
      - name: KKraJHhC
      initContainers: []
      nodeName: Eg0bNdxO
      nodeSelector:
        8FdG0D: 296kXxHVMGuu
        LATe3oO: ggTFm
        Ntd: SNg
      preemptionPolicy: 沏d溯<g9畽ɷ3
      priority: -640978149
      priorityClassName: AQAljGk
      resourceClaims:
      - name: V9D
        source:
          resourceClaimName: E8Ytu
          resourceClaimTemplateName: j26
      - name: MSD8BUvV
        source:
          resourceClaimName: I
          resourceClaimTemplateName: hBQN9
      restartPolicy: ɀ*ĬÐ鋱L惻C :Ɩ[儵rB
      runtimeClassName: vCf
      schedulerName: lOxCZwp
      schedulingGates:
      - name: qjyp
      securityContext:
        fsGroup: 3054172518952609000
        fsGroupChangePolicy: Always
        runAsGroup: -3073957747268077600
        runAsNonRoot: false
        runAsUser: 5087617995274565000
        sysctls:
        - name: K4Rx
          value: 1XL31fJIq
        - name: lQu0Ko
          value: sZ
      serviceAccountName: 9sNp
      setHostnameAsFQDN: true
      subdomain: ZgpBM4t13v1rUNS
      terminationGracePeriodSeconds: -2932810903856147000
      tolerations:
      - effect: Í嘄Ȗz,踏膮JsɈȥȇn唗ſee8厒
        key: Z
        operator: ņbȃ>ȜŅ蛤!1*G丘沿ę侞5
        tolerationSeconds: -4095124838525527600
        value: 1y8zg1Kk2
      - effect: ŭǱ麒bȮ
        key: B451
        tolerationSeconds: 4110500607743422500
        value: Jvs
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: exl
            operator: ɐƴɧťɐ詴鬙ɾ
            values:
            - OMCg7tN
            - SfgD2
          - key: rSxDRB
            operator: ʬJ
            values:
            - SvUVX
            - kW
          - key: xu2dIO
            operator: w9Ɉ怯4ǎm耥%ʖcCɉ鏦5nŐ
            values:
            - gNRWMe
        matchLabelKeys:
        - mNH
        maxSkew: 1458194680
        minDomains: 2020965939
        nodeAffinityPolicy: Aǥ飃7睹ǲbR
        topologyKey: i0LeOVh
        whenUnsatisfiable: 鶽o%
      - labelSelector:
          matchExpressions:
          - key: pXo7K
            operator: 4=Wrɑ炶Ƹ4厼áǒ绛ƕ祶亹ȉ,T齫
          - key: U
            operator: ¨"
          matchLabels:
            0FlprWV0: s
            EcL68gi: sem
            YB: qtc
        maxSkew: -1059610273
        minDomains: 835990228
        nodeAffinityPolicy: hȮ妢Ö滀,ɕrƜG拜ɬ33:`囯
        nodeTaintsPolicy: ǎ苏ȿ鼌ɢNŞ鑼O'þ蹊硌)ļǇ篕
        topologyKey: hnK
        whenUnsatisfiable: G蹃
      volumes:
      - name: 2vvwzU
      - name: KiD
      - name: ZxdGol15G
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 40Wt
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-030.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    9GSVF: FmEK
    gy8pF: IttW
    jNt: b7Ckh
  creationTimestamp: null
  labels:
    QYmKJqsxF: a
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xl0SYd
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: spW
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 4s
    health:
      healthProbeBindAddress: wh
    kind: fx7rbwOhkC0
    leaderElection:
      leaderElect: false
      resourceName: XYCb
    metrics:
      bindAddress: 2z98LiiBo
    webhook:
      port: 409
kind: ConfigMap
metadata:
  annotations:
    t45I5Edqvo: dTHP
  creationTimestamp: null
  labels:
    QYmKJqsxF: a
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xl0SYd
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: vvvAuBP-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    t45I5Edqvo: dTHP
  creationTimestamp: null
  labels:
    QYmKJqsxF: a
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xl0SYd
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: vvvAuBP-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: xl0SYd
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    t45I5Edqvo: dTHP
  creationTimestamp: null
  labels:
    QYmKJqsxF: a
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: xl0SYd
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: vvvAuBP
  namespace: default
spec:
  replicas: -1729986112
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: xl0SYd
  strategy:
    rollingUpdate:
      maxSurge: 1852360537
      maxUnavailable: 1199663025
    type: ʍɌ秵'ȣŝKǩɧf抆aȶ"u_钳
  template:
    metadata:
      annotations:
        DP: vR7i
        EvDWLWA: sYk
        J: TYkG
        NN: Y28
        i: uQx
        iv2FiB: dhm
      creationTimestamp: null
      labels:
        U52C: 9m99CWM5D
        XNiVP1FEuD: 8Ow
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: xl0SYd
        nFfIbwkj: n4
    spec:
      activeDeadlineSeconds: 1491750180455531000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: n7ZI
                operator: :庉éx蠟窺龡佫´簒ƠGi腈K婢Ʀ
                values:
                - ydEC
                - Fn6sN2U
              - key: iV3S
                operator: ím3
                values:
                - fCBWy
                - fW
                - lrYyde
            weight: -841504416
          - preference:
              matchExpressions:
              - key: 4nNfJjYxm
                operator: 茚ňʥ×ư鳳ğ誣 ȧ橺ȋă麎VȷP
                values:
                - pF
                - "0"
                - n3R
              - key: MBvHes
                operator: 5x-y烠ɰ瑓ȯ;Ɩ>骽'ʙƿª
                values:
                - F
                - E
              - key: 3qCC
                operator: H
              matchFields:
              - key: 4a
                operator: ^%7!陆]áǽƑ
                values:
                - 5tOyDHcP
              - key: Mn
                operator: ēpÑ唛6YȰ)Cj
                values:
                - F8OfuV
            weight: -2100989072
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: PNMu
                operator: G:滨+v啁z
                values:
                - qeZH05L
              - key: HKdNEvE
                operator: 珏_ʭ&°jɼ?ɀ漎[朜Zʧʚ<
                values:
                - cl4xA
                - lT4lytG2
              - key: dK3V
                operator: ""
                values:
                - nXfYcJxF
                - BExri6Ne
              matchFields:
              - key: l9S1Tbk
                operator: '属<誟ʭ耞V7 '
              - key: OwqIY40d
                operator: ťú_ȋ¥藠¬凓¼b黰塠(Ĉ臑
                values:
                - O9
              - key: Maqk
                operator: ʢeT'/`%憐襻
            - matchExpressions:
              - key: Yq
                operator: ""
                values:
                - suq9Y
                - Sq
              - key: 6ImE
                operator: Q侩儲Ċ嶐嘍fgƓſĩd烽竿
                values:
                - GL06Z
                - J
              - key: CdbCq
                operator: ì
                values:
                - ""
                - v20
              matchFields:
              - key: VV1vDf
                operator: 藥匷馑,
                values:
                - FLs3
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: A
                  operator: 饠q胗撇瑘枢Ň 踚虑閯
                  values:
                  - 5e5p3
                  - "1"
                matchLabels:
                  GbHjt4YR: 3SA
                  KaXhZ1A: ""
                  OdrIVDZy: rvf1Jyi
              matchLabelKeys:
              - n03k
              - Bd4MsdiW1
              mismatchLabelKeys:
              - lq
              namespaceSelector:
                matchExpressions:
                - key: fd1Pm
                  operator: ȢɩF馩簨
                - key: jVz5YdK
                  operator: 4Ni¨锩ʄ5«勊
                  values:
                  - Ay1xS
                  - 7P3
                  - egGPMnv
                - key: sXR
                  operator: u
                  values:
                  - uEhJvYZtHu5
                matchLabels:
                  Xjf: rOf7S8z
              namespaces:
              - RV
              - UrPdb
              topologyKey: ""
            weight: -1089282795
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: IOzi8
                  operator: '''!ɼiȇ騅gĿtQ)~醖T津ʆ螬'
                  values:
                  - yBHRl
                  - XSognnI7
                  - P6R7EK
                - key: 8eLSUq91
                  operator: ʪh驥
                  values:
                  - ""
                  - ybn3YpD
                  - gf8AUU3
                - key: g8aQKp
                  operator: ""
                  values:
                  - QFU
                matchLabels:
                  R: V
              matchLabelKeys:
              - fMpoWnF
              - JSoDrcs
              mismatchLabelKeys:
              - aYSr
              - 4oS7w
              - 5qVDerko
              namespaceSelector: {}
              namespaces:
              - tZTyAU89
              - 38K
              - ""
              topologyKey: 5FXoc
            weight: 553016367
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector: {}
            matchLabelKeys:
            - lON
            - Kzo
            mismatchLabelKeys:
            - yJpT7
            namespaceSelector:
              matchExpressions:
              - key: 3ZO
                operator: ɑĚ3瓉5wż硹咳囼詖俁eǭKĐFJr
                values:
                - 45zGr1
                - QfLGiQ
              - key: f9KevjXm
                operator: $挠u%戨氌ǜĐyŵow騖橎Tʃ
              - key: dWY
                operator: 跥'ä>ȯƱC佛£墏
                values:
                - 1DV6
                - HRKLX
                - 4snWPV
            namespaces:
            - C
            topologyKey: cAsX
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: ""
                operator: ' /''n\¯ĒH-]ơŃǸæ'
                values:
                - kAx8
                - 0G
              matchLabels:
                N3pXu1W: ID
                WiZBgN: fxG
                t6k6N: ""
            mismatchLabelKeys:
            - 6hS
            namespaceSelector:
              matchExpressions:
              - key: gW
                operator: 渥êdɾo6ȭʈʂ眙圪
                values:
                - DTw8
                - ""
                - ""
              - key: FM
                operator: 鯓煫Zxȗ埱醏,v
                values:
                - 8A
                - 3tkv
                - a9l
              matchLabels:
                8TTDPF: NV
                XIa: 0tUkY
                vREvWC: P9l
            namespaces:
            - HKF
            - v
            - 5i3eitpz
            topologyKey: OQbp
          - labelSelector:
              matchExpressions:
              - key: KkkcD11er
                operator: 顑Ƹ
                values:
                - h
            matchLabelKeys:
            - DJOqJd
            mismatchLabelKeys:
            - 9w5aI
            - t9giU
            namespaceSelector:
              matchExpressions:
              - key: gHV
                operator: 辪JSSȻüc努ɵ
              matchLabels:
                UkabJI5: tzaoXYFT
            namespaces:
            - q
            - rIawKFyZC
            topologyKey: DOHe0m
          - labelSelector:
              matchExpressions:
              - key: ZddcC
                operator: ?]贅ȈƣÜs攘ƥ)醆
                values:
                - OqYA
                - RtPG
                - gsIOGJKwg
              - key: bs
                operator: Ǝ纟ɂ珣ʂǿÞoD桹ËgȦ º錜蠬Ǟ?
                values:
                - Ki7
                - id
              - key: qNt
                operator: g*
                values:
                - DzS27mhY82
              matchLabels:
                QNK: I1TS
                fqJxC1q: kzo
            matchLabelKeys:
            - a6Oq
            mismatchLabelKeys:
            - Vw2sH
            namespaceSelector:
              matchExpressions:
              - key: 5h
                operator: Þ®h
                values:
                - B6x
                - 3b
              - key: 2ZW
                operator: 篰ȉ觉U閄
                values:
                - 2BzPk8i
                - 1vl
                - dFQiBf13aS2
              matchLabels:
                "": 96xv
                SDtom: k6R3UQ
            topologyKey: Vfqn
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=v1480
        command:
        - /manager
        env: []
        image: a2vgH0:SwdpKv
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 174
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 781
          periodSeconds: 737
          successThreshold: 923
          terminationGracePeriodSeconds: 976
          timeoutSeconds: 968
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 57
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 246
          periodSeconds: 645
          successThreshold: 749
          terminationGracePeriodSeconds: 650
          timeoutSeconds: 276
        resources:
          limits:
            cpu: "86"
            memory: "770"
          requests:
            cpu: "411"
            memory: "554"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        nameservers:
        - a
        - vKrqNPcbUm
        - POr
        options:
        - name: 2l
          value: gRSlrVXm
        searches:
        - yYUHdam
        - wEo
        - hlUiZBq
      dnsPolicy: ʁ"@ǔņƕ BMŘ扳qB嘗&ȼ泇
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - ip: LqvaCa
      hostIPC: true
      hostUsers: true
      hostname: geL4Aa
      imagePullSecrets:
      - name: h
      initContainers: []
      nodeName: yR1
      nodeSelector:
        O1HyM630: BKr67cI
        ZUz5pLL8: hTYM22hr
        l: iJBf
        nj3s39: b9nBL
      preemptionPolicy: 恟ƞǍʯ嚃A蟘ȃ|xǊǃŇȘ疻-
      priority: 1877191256
      priorityClassName: 7K
      restartPolicy: '*呦Ə版'
      runtimeClassName: QnzgP
      schedulerName: vVXMuZK
      securityContext:
        fsGroup: -7076089516419596000
        fsGroupChangePolicy: Always
        runAsGroup: 1111714984489826400
        runAsNonRoot: true
        runAsUser: -4289867089642414600
        supplementalGroups:
        - -1924996851394923300
        sysctls:
        - name: Tx
          value: XY2MbMWpG7
      serviceAccountName: erwS
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: y2pJm
      terminationGracePeriodSeconds: -4932597896166567000
      tolerations:
      - effect: ńÜȶö邐Ɍ篒ȷbɚ
        key: DjtMgK2
        operator: ſɵ2~ɒŕ+lİ
        tolerationSeconds: -8775981821060471000
        value: eW72
      - effect: 飭鶱碹ķ欗ʧ掖ǥ|厎饥Łg暠k玈ʙɦ¨
        key: UxxYyS
        operator: u銽豵X巅穓m>檭ärźW
        tolerationSeconds: 7077156953375636000
        value: Aaf
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: 1OUY
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: spW
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-031.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    6WOM: xxkxL
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Zihc6G
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: pnlpbYv
    health:
      healthProbeBindAddress: aghAW7
    kind: NJn
    leaderElection:
      leaderElect: false
      resourceName: d
    metrics:
      bindAddress: AKGnHV
    webhook:
      port: 274
kind: ConfigMap
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu-additional-controllers
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - nodes
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tDyp0579ogHIu
subjects:
- kind: ServiceAccount
  name: Zihc6G
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu-additional-controllers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tDyp0579ogHIu-additional-controllers
subjects:
- kind: ServiceAccount
  name: Zihc6G
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu-additional-controllers
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tDyp0579ogHIu-election-role
subjects:
- kind: ServiceAccount
  name: Zihc6G
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tDyp0579ogHIu
subjects:
- kind: ServiceAccount
  name: Zihc6G
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu-additional-controllers
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tDyp0579ogHIu-additional-controllers
subjects:
- kind: ServiceAccount
  name: Zihc6G
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tDyp0579ogHIu-rpk-bundle
subjects:
- kind: ServiceAccount
  name: Zihc6G
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: pnciO
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    B11cb: P1mQky
  creationTimestamp: null
  labels:
    Q3Y: wWGGlI
    ZgcMSFjkA: f0Je
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pnciO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tDyp0579ogHIu
  namespace: default
spec:
  replicas: -2080953608
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: pnciO
  strategy:
    rollingUpdate:
      maxSurge: 624480148
      maxUnavailable: 302171922
    type: Ļ% 钮眶蟞dČ-{Q譩~).X
  template:
    metadata:
      annotations:
        "": qYpKB
        L3jCpuTn: R
        N068dY: ZtIf
      creationTimestamp: null
      labels:
        1Fnm: 1lZzGTl
        FmIto: JkYODd59
        UCr6oTD: WoibN1isV
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: pnciO
        dZqk3m: xbfDxoCxSY
        i4ZeQT: R
    spec:
      activeDeadlineSeconds: -471603162845905600
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: YautP
                operator: ""
                values:
                - Ewpi1iLxnJ
              - key: nfN
                operator: K馲ú澾ù元&ǡ>枻荚;峨
                values:
                - syqSywj
              - key: BLVU
                operator: ""
                values:
                - 3cAXT
                - r0ngW
            - matchFields:
              - key: 7gn
                operator: VƇ,l颎*売v趞钫g
              - key: kF
                operator: Ɯ|$ʒCWp扃&Â嗨ʚ嫘Ăčʏ
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  FrZ20BP9T0G: kcsQkOFM
                  p5SaX: BWa6
              matchLabelKeys:
              - Dq
              mismatchLabelKeys:
              - 7GQ1xUB
              namespaceSelector:
                matchExpressions:
                - key: zms
                  operator: »帄ɟ忰@Ȋ裙ieȶd桲Çɚeģ9Ȍ
                - key: WaJC
                  operator: Pȭ农êǎ2虢h
                  values:
                  - Lq9
                  - a1rE
                matchLabels:
                  54U9lzP: KI
                  NWiZPMn: lUD6mXOAvcW
              namespaces:
              - f9vMBdG
              - OtE7Kl5t4
              - tCDp5MkQ
              topologyKey: eMtZ3EaLr
            weight: -404766207
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: bylLV4V
                  operator: '#ǑlŬʒļ駚(ƺÛ#'
                - key: Phb
                  operator: 皽縍$ºā
                  values:
                  - ZTTCKS
                  - iR761
                - key: we
                  operator: ȼ唋Ƹ鰝鸸
                matchLabels:
                  "": swZwuy2X
                  CXo0A: bZ1Hd
                  WVeq: C43
              namespaceSelector:
                matchExpressions:
                - key: M
                  operator: 汝:őĦìɝļ¸g_é咬ȌŷQ
                  values:
                  - Ou52
                  - rNT
                - key: c0Sww
                  operator: o;u轅鐘豄婙/ʌ孓ü觢ʢ抰某棜貦d
                  values:
                  - O4RT1
                - key: v8LG2
                  operator: ""
                matchLabels:
                  qaekw: V
              namespaces:
              - 3SJ
              topologyKey: 8Ah
            weight: -100386840
          - podAffinityTerm:
              labelSelector: {}
              matchLabelKeys:
              - lQ5YvzOEF9
              - 5HroZ0o
              namespaceSelector: {}
              topologyKey: "1"
            weight: -1687222587
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "86"
                operator: 剼ü湔籾蠻梆Š拌劬忼ɩƊ葞ù
                values:
                - 6V7zL
              matchLabels:
                9W7XU7: pVMQk
            matchLabelKeys:
            - b8Xb
            mismatchLabelKeys:
            - Asp1qz
            namespaceSelector:
              matchExpressions:
              - key: c
                operator: ʮ圪愦湔良ȧȸ査ŸgŴ [綄ȶĶx水g
                values:
                - 0gkzZ
              matchLabels:
                "": 2fz
                ZRX: 0ROqUZD
            namespaces:
            - 89i
            - 92Wbhoz
            - 8g
            topologyKey: 9SY
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector: {}
            mismatchLabelKeys:
            - p0OX
            - zmXV
            - iEys
            namespaceSelector:
              matchExpressions:
              - key: iulNwOX
                operator: ""
                values:
                - gLIt
                - tCdWb
                - 1Pca9je
              matchLabels:
                A5Ukw32ccnvh: u
                WHM: 4lV
            namespaces:
            - n7wn2OMT2
            - PyLhj5vfkW
            - BWN1eYBm
            topologyKey: cb38xL
          - labelSelector:
              matchExpressions:
              - key: jKK
                operator: ǟ"L葛Eǁƫ瑛aǶ嶽b孆张
                values:
                - GwIUiNGIVd3
                - KjB3mR
              matchLabels:
                pQpe9Slu: fEn
            matchLabelKeys:
            - DYN
            - R8n3nmt
            mismatchLabelKeys:
            - pqIrH
            - 5D
            - eme662NaPz
            namespaceSelector: {}
            namespaces:
            - wFOGE
            - G
            topologyKey: s
          - labelSelector:
              matchExpressions:
              - key: F
                operator: 鞥秧鉖鴲ǻ1zȕ鲐悬儓9鱬=Ǘ
                values:
                - W
              - key: WQF
                operator: '>'
                values:
                - J
                - hW
                - feLHE0
            matchLabelKeys:
            - FWKCFwV
            - 96Tur7
            mismatchLabelKeys:
            - VBt
            - zyRZ
            - XIchXTS
            namespaceSelector:
              matchExpressions:
              - key: AbxuK5
                operator: 蠐ǌ裑ɰ
                values:
                - dancPNoJe7
                - RX
                - Wu
              - key: kPo
                operator: ķ婈=q氶ȵM謞űh卉ɐv鹧Ȱ嶴x屒
                values:
                - hxeBTpB
                - 5jBNGT
            namespaces:
            - 5cGxz9WU0
            - nxg
            - HSSuQ
            topologyKey: moFrs
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=XxZ
        - Rlceb
        - pf5
        command:
        - /manager
        env: []
        image: bqtHD7:zo
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 363
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 6
          periodSeconds: 87
          successThreshold: 435
          terminationGracePeriodSeconds: 689
          timeoutSeconds: 343
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 927
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 161
          successThreshold: 290
          terminationGracePeriodSeconds: 318
          timeoutSeconds: 976
        resources:
          limits:
            cpu: "613"
            memory: "0"
          requests:
            cpu: "351"
            memory: "320"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        nameservers:
        - CDHKmOg2
        - oUUYqD
        - sbbQN4Uuof
        searches:
        - u3hKCjcy
        - ZJgoaz
      dnsPolicy: ȻR/ʗ楧鱞餇醓丏
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - ip: TojRJXx
      hostIPC: true
      hostNetwork: true
      hostUsers: true
      hostname: 6GO
      imagePullSecrets:
      - name: wXRyxq
      - name: WBMkPwZA
      - {}
      initContainers: []
      nodeName: xnWuRj50nA7rauK
      nodeSelector:
        e3nv: SVSvv9QvG
        neY: uo
        rYKkr: "y"
      preemptionPolicy: ­Jf弣ƋŞ
      priority: 1835241611
      priorityClassName: 15x
      resourceClaims:
      - name: 28yPU
        source:
          resourceClaimName: cK
          resourceClaimTemplateName: g9Y04d
      restartPolicy: Ǆ<6ɡ擼ƌ%t搨瓴°ū葠©璃Ş
      runtimeClassName: rfuJ
      schedulerName: OA
      schedulingGates:
      - name: ayGgwCwfW
      securityContext:
        fsGroup: -8912598160199637000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -676902822287339000
        runAsNonRoot: false
        runAsUser: 6627815993032152000
        supplementalGroups:
        - -6022127879436660000
        sysctls:
        - name: mV7R6B
          value: fJ6CBS
        - name: EoDC
          value: jGm8yNvs
        - name: de9sf33Pb
          value: 6yib5
      serviceAccountName: oPnm2
      setHostnameAsFQDN: false
      subdomain: L8UrEhf
      terminationGracePeriodSeconds: 69644444177153760
      tolerations:
      - effect: 帓矔
        key: zVex3oS8
        operator: 氙幹E燲圻ą觵
        tolerationSeconds: -3800440195176564700
        value: HFHHuMka
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            EjC5: 8NG9v2WPE
            XJkn: dD77HfU
            hGnZ: 1s
        maxSkew: 976344313
        minDomains: 715355624
        nodeAffinityPolicy: 炝56ʔ歟W倌痓ŰȀ敲S$ǶƓK
        nodeTaintsPolicy: ǰÑt贇ƆĽ盀ƺð權Óȡ.
        topologyKey: WYqBsn
        whenUnsatisfiable: 孍}?fʒł_6甀滈Ȏ摤礨哥ǩ(
      - labelSelector:
          matchExpressions:
          - key: 7GTv1w
            operator: '`UŗǍ挟桺źoH炚i)QŢ'
            values:
            - EPKxL
            - jd
          - key: JL
            operator: 鸦b幆ɕyĬé瓔2ō筅Hʑ¹ȎMʧŀ
            values:
            - INqgDSOlW
            - dMbo
          - key: XuhdAJ
            operator: 臔(蜸硰臈¹
            values:
            - e
            - DyatF7a
            - Tf
          matchLabels:
            IPFW2o: pr2
            Jb3PtuCQSljh: jf
            iU6: efk
        matchLabelKeys:
        - j9VpU
        - ZOn
        maxSkew: 1535859514
        minDomains: 1462801866
        nodeAffinityPolicy: gł曃lyi
        nodeTaintsPolicy: 珁牘Ǔ糄JU]E见HB(
        topologyKey: F
        whenUnsatisfiable: jŖ
      - labelSelector:
          matchExpressions:
          - key: "9"
            operator: Ćǘ稸o
            values:
            - Z
          matchLabels:
            6DCkFS8: 6Fsfw
        maxSkew: 1853962238
        minDomains: -1346819512
        nodeAffinityPolicy: z绦Z-骗Ã涀]fp<琯+
        nodeTaintsPolicy: Ɵ珢¼F皈|a槵ĕ郉ǝŘ,懳Şʛc
        topologyKey: B
        whenUnsatisfiable: U蕟ÀG略xQX睩(¶驝Ś;ȘIȟǉż
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: SQhKg
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: Zihc6G
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-032.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    3Y64: eosT
    5Qb9G22j: um5NlI6mc
    uDYM5WqGQ: 6Z7
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: P6wEG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: TmM6fo
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: uCz2LaBB
    health:
      healthProbeBindAddress: Nb
    kind: mBBMxze
    leaderElection:
      leaderElect: false
      resourceName: TnI56l
    metrics:
      bindAddress: 3N
    webhook:
      port: 175
kind: ConfigMap
metadata:
  annotations:
    1Jk1: vK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: P6wEG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Wzr8UxvO-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    1Jk1: vK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: P6wEG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Wzr8UxvO-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: P6wEG
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    1Jk1: vK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: P6wEG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Wzr8UxvO
  namespace: default
spec:
  replicas: -373101477
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: P6wEG
  strategy:
    rollingUpdate:
      maxSurge: 1872021458
      maxUnavailable: 611380407
    type: 韟綣酠(蝀袁ǜ颀蒆Ų榹iqŚ$9
  template:
    metadata:
      annotations:
        YBkiIECLXIgdW: 2bPKz
      creationTimestamp: null
      labels:
        Y4U: nrcy
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: P6wEG
    spec:
      activeDeadlineSeconds: 1021876365023256000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: aGUe2X
                operator: Ɗ潨湢璄
                values:
                - gbcG
                - AZrVPN
            weight: -969250849
          - preference:
              matchExpressions:
              - key: peIn
                operator: ¶Ȳ_*EɊ舰s溚yțá'岫Ď
              - key: LIOE
                operator: 氚ɻ-
                values:
                - JGGIfv
                - 71lNlQE
              matchFields:
              - key: avL1
                operator: zÄǗ么ɫ
              - key: cL7w
                operator: '#駆表豸惟å磸ōǉƭPf撋Ɍ痃'
                values:
                - TQ
                - U
                - I9Bdv
            weight: -207976571
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: MhxRCBKeFN
                operator: r\i骬¹/ǟƑÍz^}墹xoǰ
                values:
                - T6ug
              - key: Bl0UX
                operator: 犳ƫ}`ǅ3RŞ-Ɩȹ
                values:
                - 1rrLPKR
              matchFields:
              - key: TK8S
                operator: 箑cƀ拎Ɯ;īŖE榆丮ŏ譈ý
                values:
                - oDdm
                - etqc
              - key: ""
                operator: 糑鑛ū畺
                values:
                - IzMfpoP
            - matchExpressions:
              - key: qYbf
                operator: ʡ踐BƯƫM辭丸J
                values:
                - ""
              matchFields:
              - key: qkWhoNTGm
                operator: Ʋcº荧驑ʤL畏Ơbơy侫
              - key: aGh49Wr
                operator: ģ^棖¡Ǒ燙ʫǯ尳楕刘?ʮŲ
                values:
                - ahme
                - YcG
                - 0oM
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: PqP7x
                operator: 喢林
                values:
                - zS5m
              matchLabels:
                "8": ag
            mismatchLabelKeys:
            - ToAWECJ
            - 6fpRcrnJI
            namespaceSelector: {}
            namespaces:
            - 4Xe
            - YB
            - O4F
            topologyKey: ld7Fed9e
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                v: ""
            mismatchLabelKeys:
            - a
            - kkTV
            namespaceSelector: {}
            namespaces:
            - LR3ffs
            - VJNB
            - nboH7iG6fen9
            topologyKey: Hfw5LCBf6AFM
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=G3wz
        - wK
        command:
        - /manager
        env: []
        image: 16DN2:RK6Ba96O
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 434
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 154
          periodSeconds: 384
          successThreshold: 791
          terminationGracePeriodSeconds: 736
          timeoutSeconds: 759
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 788
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 840
          periodSeconds: 70
          successThreshold: 50
          terminationGracePeriodSeconds: 469
          timeoutSeconds: 0
        resources:
          limits:
            cpu: "398"
            memory: "535"
          requests:
            cpu: "52"
            memory: "121"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        nameservers:
        - KryE
        options:
        - name: qZp
          value: ChR
        - name: jqbI
          value: bk
        - value: 0Ypmpzf
        searches:
        - ""
      dnsPolicy: Ɩzȇɀ
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - nidz7Yuy
        - DhC5x7t
        ip: pY
      - ip: dmk
      hostIPC: true
      hostNetwork: true
      hostUsers: true
      hostname: ciij
      imagePullSecrets:
      - name: vgy
      - name: Dw
      - name: AmPdW
      initContainers: []
      nodeName: 5l
      nodeSelector:
        FCWVhL: BX
        fg6adycMTt: wE
        gAxa: ZuxUYdtnF
      preemptionPolicy: Mƈņumě
      priority: -1104627993
      priorityClassName: hBUTUiJP
      readinessGates:
      - conditionType: W澬5ȳȆOAǵ轼鮁D栮ɱ
      - conditionType: ȑǊĸ疞ɮt壓ǝ4ȥ迯NŴ銜表
      restartPolicy: 淄休ŋL綳ǀƲ年ĺ5ʉ2
      runtimeClassName: tFo
      schedulingGates:
      - name: C
      - name: ICjGq
      - name: N0k
      securityContext:
        fsGroup: 3700215875989369000
        fsGroupChangePolicy: Always
        runAsGroup: 969663494467258200
        runAsNonRoot: true
        runAsUser: -6839067346023426000
        supplementalGroups:
        - 5885422743674264000
        - 7949464185642053000
        - 3151508661079112700
        sysctls:
        - name: V3Mli
          value: mWPuG
      serviceAccountName: sxeN2i
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: LRw2C4hiMR
      terminationGracePeriodSeconds: -5489278371963064000
      tolerations:
      - effect: 醜ȋ,ȿɔ疦煫篓ő凢e腇旗ʤ}DZ7
        key: FDtXKIviZj
        operator: 'K '
        tolerationSeconds: -3134249558038261000
        value: O1m7Z
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: RQvPr
            operator: S癱骜皭Ȭ覚ɱ蠀X
            values:
            - kL2Q
          - key: B7i
            operator: 縣ʍʣ
          - key: Z8VcoQkm
            operator: 螺Ń沙国?Oɯ<'榶
          matchLabels:
            8rtP: hROP
            sbkwpMQijVFr1S: tpVZLGMk
        maxSkew: 377835089
        minDomains: -1687478953
        nodeAffinityPolicy: .=2ń蹁
        nodeTaintsPolicy: Ɖ'ɖZBʋ~厵¤ŵâ
        topologyKey: 1QrEq
        whenUnsatisfiable: uńƹ彠橐猩Q吁4#队軝TXkȗǎ
      - labelSelector:
          matchExpressions:
          - key: ytUedNja
            operator: 坫茪憹L淜\Ű+c
          matchLabels:
            m9kJd252K: iPfeV28
        maxSkew: 1766424504
        minDomains: -1719290285
        nodeAffinityPolicy: O陂Ȧ
        nodeTaintsPolicy: hƦLe皴ǀ荾;È;ɁR習彸ʧ,!
        topologyKey: Yln
        whenUnsatisfiable: î根¯ʟZ
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    1Jk1: vK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: P6wEG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Wzr8UxvO-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: P6wEG
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: TmM6fo
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-033.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 5gjqBM
    health:
      healthProbeBindAddress: U8r6618MEX
    kind: NEUo8izo0UYP
    leaderElection:
      leaderElect: true
      resourceName: q
    metrics:
      bindAddress: 0ECBKwI
    webhook:
      port: 441
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    IkOwwd: 37ZfCkM
    M3fH: xmhoB
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 9wjOhT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    uUW: Us
  name: 6z0k3NX-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    IkOwwd: 37ZfCkM
    M3fH: xmhoB
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 9wjOhT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    uUW: Us
  name: 6z0k3NX-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    IkOwwd: 37ZfCkM
    M3fH: xmhoB
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 9wjOhT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    uUW: Us
  name: 6z0k3NX
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    IkOwwd: 37ZfCkM
    M3fH: xmhoB
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 9wjOhT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    uUW: Us
  name: 6z0k3NX
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 6z0k3NX
subjects:
- kind: ServiceAccount
  name: 9xg1jKJ
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    IkOwwd: 37ZfCkM
    M3fH: xmhoB
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 9wjOhT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    uUW: Us
  name: 6z0k3NX-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    IkOwwd: 37ZfCkM
    M3fH: xmhoB
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 9wjOhT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    uUW: Us
  name: 6z0k3NX
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    IkOwwd: 37ZfCkM
    M3fH: xmhoB
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 9wjOhT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    uUW: Us
  name: 6z0k3NX-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    IkOwwd: 37ZfCkM
    M3fH: xmhoB
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 9wjOhT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    uUW: Us
  name: 6z0k3NX-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 6z0k3NX-election-role
subjects:
- kind: ServiceAccount
  name: 9xg1jKJ
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    IkOwwd: 37ZfCkM
    M3fH: xmhoB
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 9wjOhT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    uUW: Us
  name: 6z0k3NX
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 6z0k3NX
subjects:
- kind: ServiceAccount
  name: 9xg1jKJ
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    IkOwwd: 37ZfCkM
    M3fH: xmhoB
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 9wjOhT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    uUW: Us
  name: 6z0k3NX-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 6z0k3NX-rpk-bundle
subjects:
- kind: ServiceAccount
  name: 9xg1jKJ
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    IkOwwd: 37ZfCkM
    M3fH: xmhoB
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 9wjOhT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    uUW: Us
  name: 6z0k3NX-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 9wjOhT
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    IkOwwd: 37ZfCkM
    M3fH: xmhoB
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 9wjOhT
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    uUW: Us
  name: 6z0k3NX
  namespace: default
spec:
  replicas: 999315295
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 9wjOhT
  strategy:
    rollingUpdate:
      maxSurge: 520022418
      maxUnavailable: 419878016
    type: Ǣ=ʣxfȸ
  template:
    metadata:
      annotations:
        3k2GZ: pSZov
        OfkmIIg: lvn0EuSw4nQ
        aTgP: 0C4pWjw6Xjegg9a
      creationTimestamp: null
      labels:
        F6WO: Ib3
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 9wjOhT
        hKO47: xAT
        wue: VABbdY
    spec:
      activeDeadlineSeconds: -4209332569599939000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  e1uTVLJ: McLB
              matchLabelKeys:
              - "40"
              - "4e73"
              - 6r
              mismatchLabelKeys:
              - 1p9eMjY
              - zJg
              - diCC
              namespaceSelector:
                matchExpressions:
                - key: 74rez7DvhRz
                  operator: JU砽ʜ
                  values:
                  - MORLtc
                  - VHEUu
                - key: 8v
                  operator: 畝鎻仝魭騢Ȏ譔$jn-¶Z龗ɋ錻皊K蔛
                  values:
                  - bCCcq
                  - 51Pi
                - key: 1Z8od
                  operator: 癟kD儼Ⱦ_鵈Ƈ顱櫈@
                matchLabels:
                  bC45: odNesqxgbw
              namespaces:
              - e7Alx
              topologyKey: 4NKc5T8i
            weight: -546355911
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: Z4eJJ2Ek
                operator: M鿭ǝį¤\<
            matchLabelKeys:
            - IwKA74
            - ultKoAtDc
            mismatchLabelKeys:
            - KjOF3
            - 9zbv
            - r3h
            namespaceSelector:
              matchExpressions:
              - key: ""
                operator: 卍Î
                values:
                - 3Ye
                - KeE
              matchLabels:
                d6Eak: WoS
                gbK1: NlgbLbiLc
                yqjy: yncCdbLug
            namespaces:
            - u
            - XoIW
            topologyKey: RLOi1
          - labelSelector: {}
            matchLabelKeys:
            - 0NKRa
            - W
            - Aet
            mismatchLabelKeys:
            - Nz45q
            namespaceSelector:
              matchExpressions:
              - key: pSkn
                operator: 壭aǔq
              matchLabels:
                Am5: ""
                tKok: eb
            topologyKey: Egqc
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: fGm
                  operator: Ɠ±ŜP沓v!簜蝦蕱
                - key: ""
                  operator: kÿ烩篽日ƀ竷-:甒
                  values:
                  - "6"
                - key: kZRV9jWCo
                  operator: 棴ɉvy#eȓōȥ胯ė
                  values:
                  - k0LEzj
                  - O2UF5eHj0
                  - W
                matchLabels:
                  3loBH: nImIeI
                  RLYek: ""
                  RaosO: D
              matchLabelKeys:
              - FzbbgJyd
              - raTbn7yH
              - 1Q
              mismatchLabelKeys:
              - OiiaM7
              namespaceSelector:
                matchExpressions:
                - key: gO4fmt
                  operator: 訁C眄ǰŅ}ƣ2Ý斲谌ľʧ鏼
                  values:
                  - 64Lx
                  - 9F
                - key: fcYRW5
                  operator: £VŠȻ謐ȁ0Ȼő6*ğ陪枭棩ly
                  values:
                  - Oq
                  - a0IsYdZMH
              namespaces:
              - WhR27YV9SRRJe
              - oja4
              topologyKey: c3o
            weight: -4040378
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: HH
                operator: ƛGȯ刃R氎殯佲颅菉ĜƊǖ誹
              matchLabels:
                qxmta: ""
            matchLabelKeys:
            - 8Fv
            - eMMF
            - nyHcgRL
            mismatchLabelKeys:
            - my5jBGHjD
            namespaceSelector:
              matchExpressions:
              - key: dLgl
                operator: ""
                values:
                - 6WV5B
              - key: fwoTix
                operator: 旐ƕ坾臎ė
                values:
                - PcbJF6cVs
                - bCP1
              - key: Jqd
                operator: Ũ,聙Ïȶ@娋k<鲫čCȈdM?Q裚
                values:
                - hbQ
                - Uwec1YfIJ
                - TWua5OK
              matchLabels:
                F: ZNp
                lI1P0: dyy
                p3EHV: D
            topologyKey: ez0SYN3KBc15j
          - labelSelector:
              matchExpressions:
              - key: qaxGoT5SKrO4l
                operator: ɔ鿿>Sx
                values:
                - Bb
                - 3HCn5YL4sIt
                - XBdy
              - key: ""
                operator: 禨裦¤U夣ŗ ē晈`Ȃg欆Ƙ乕馫FXõ
                values:
                - sPTz9aiX
            matchLabelKeys:
            - eh
            mismatchLabelKeys:
            - 9ZZ0BNgs5
            namespaceSelector:
              matchLabels:
                1w: 4Wmj
                NmKh: Jy8
            topologyKey: Ftf
          - labelSelector:
              matchExpressions:
              - key: Vd
                operator: 趢lɉ%#
                values:
                - kHBf2
              - key: s35
                operator: 噅ńsʓ謳?t
              - key: ziqc3J
                operator: 2ɼ
                values:
                - wtNQkwXx
                - Bn
              matchLabels:
                D8qrb: Vnn1hIL
            matchLabelKeys:
            - W1
            - WtO
            - ""
            mismatchLabelKeys:
            - nM
            namespaceSelector:
              matchLabels:
                Vpv: UPW1
            topologyKey: RnHxlh
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=KMFMJqF
        - SkxA4PXfixGo6H
        - Fa1
        command:
        - /manager
        env: []
        image: MhZp:NaNHQ74
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 555
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 880
          periodSeconds: 169
          successThreshold: 536
          terminationGracePeriodSeconds: 269
          timeoutSeconds: 579
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 166
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 850
          periodSeconds: 870
          successThreshold: 880
          terminationGracePeriodSeconds: 604
          timeoutSeconds: 425
        resources:
          limits:
            cpu: "713"
            memory: "863"
          requests:
            cpu: "273"
            memory: "183"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        nameservers:
        - Nr
        - d0S
        searches:
        - Fue
        - pDaMCHRq5
      dnsPolicy: 皰|ç0~bȾɷ
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - ip: I
      hostIPC: true
      hostUsers: true
      hostname: wIg
      imagePullSecrets:
      - name: 1G3qsUeX
      - name: MfQ3EzTp7q9k
      initContainers: []
      nodeName: gNBksxjndF
      nodeSelector:
        "": k2KbB
        5dCSt9: LElGJ
        cIMAXDCuY: Y52Ax
        hq20GpR0VRl: Hm
      preemptionPolicy: n悳Ťu峧2
      priority: 1538920371
      priorityClassName: mxyOicuJ
      readinessGates:
      - conditionType: ɷŗ翜栘
      - conditionType: Řʦȏ耟Wįƹ4EÊǖ桉ɭþJ鵻Ȅ
      resourceClaims:
      - name: MuBfNAK
        source:
          resourceClaimName: vzu1w
          resourceClaimTemplateName: En2DC
      - name: cz4eqU0R
        source:
          resourceClaimName: n5MCEMG
          resourceClaimTemplateName: ""
      - name: zfsdyo
        source:
          resourceClaimName: sFGVCJ1
          resourceClaimTemplateName: gQwCr
      restartPolicy: 纍k$ƴI»
      runtimeClassName: 4MqDyq5rk
      schedulerName: t3coUSyQ
      schedulingGates:
      - name: c9pzaF
      - name: DPecI
      - name: GSp
      securityContext:
        fsGroup: -156572939790639140
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 2183539069813392400
        runAsNonRoot: false
        runAsUser: -3112209966011252000
        supplementalGroups:
        - -2156329419442480600
        - 5019114569367727000
        sysctls:
        - name: O9kEHw
          value: 9jLYuYu0k3lOGn
        - name: ScRMe
          value: mXsDu
        - name: qICk7
          value: ""
      serviceAccountName: 5oCOmk
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: TUd
      terminationGracePeriodSeconds: -3744990875899211300
      tolerations:
      - effect: Ɵ'@?蓎ǳ錥釽鰼ɖ嫖禎
        key: 7RABX
        operator: ʄ-
        tolerationSeconds: -6156514130788734000
        value: EtqEjW
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: eLd0JExcVs
            operator: ƍ[{Ƃ
            values:
            - YEWhJ
            - y8L1j
          - key: ""
            operator: CĻ郵奡ųÜÁsŇǞĺ均麶dxʦd
            values:
            - 66bLrjD
            - 62Hbwh56
          - key: sfXaWbXD0
            operator: ""
            values:
            - yQo
            - ""
            - KOExMK
          matchLabels:
            cf: vgE
            flC51TdC: vDJf6O32
        matchLabelKeys:
        - IxVFD
        maxSkew: -1442030726
        minDomains: 2122004706
        nodeAffinityPolicy: s
        nodeTaintsPolicy: .<s撠唐Iɂ ¾幣Ƴ齦闬缈Ũ厠Ĉȅ<
        topologyKey: bUBHxkJN
        whenUnsatisfiable: u
      - labelSelector:
          matchExpressions:
          - key: AL
            operator: ""
            values:
            - WgTmC
            - KktBqg3v
            - ZWgqe
          matchLabels:
            tG0roQkk: eEQwrBU
        maxSkew: 815738914
        minDomains: -158908636
        nodeAffinityPolicy: 鿻>ɶȁ汉聙ȯ
        nodeTaintsPolicy: =ǉí
        topologyKey: 3vd
        whenUnsatisfiable: ȶ
      volumes:
      - name: Y4eYBG
      - name: wtbsGN
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 9xg1jKJ
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-034.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    0A3p3: jM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6xIMZiuoly3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    in: IEvkGW7b
  name: ClL0jwLRjj
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: gwFHgU3
    health:
      healthProbeBindAddress: wnA5
    kind: SN4Pz
    leaderElection:
      leaderElect: true
      resourceName: rAphO
    metrics:
      bindAddress: p6a
    webhook:
      port: 211
kind: ConfigMap
metadata:
  annotations:
    jFAGoiKg: S0ruuP
    louERS: dWcc
  creationTimestamp: null
  labels:
    0A3p3: jM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6xIMZiuoly3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    in: IEvkGW7b
  name: t-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    jFAGoiKg: S0ruuP
    louERS: dWcc
  creationTimestamp: null
  labels:
    0A3p3: jM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6xIMZiuoly3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    in: IEvkGW7b
  name: t-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 6xIMZiuoly3
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    jFAGoiKg: S0ruuP
    louERS: dWcc
  creationTimestamp: null
  labels:
    0A3p3: jM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6xIMZiuoly3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    in: IEvkGW7b
  name: t
  namespace: default
spec:
  replicas: 1507271392
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 6xIMZiuoly3
  strategy:
    rollingUpdate:
      maxSurge: 1343937480
      maxUnavailable: 989960583
    type: i巅P°į欈Ǣg9搨ň偲颕Å矐,
  template:
    metadata:
      annotations:
        "2": ICCoP4E
        "7": bp8zXzOF
        "095": nWcb
        a8BQYCvG: vrjwweZiCAe
        bme33: i9xjX
        cnwK: WP
      creationTimestamp: null
      labels:
        Dn: Xe
        EX: Bb4
        JKMTjfb: Yimx
        PL2: SxbcU8Sv
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 6xIMZiuoly3
        voHHm: eY
    spec:
      activeDeadlineSeconds: -6398421988897698000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: Pp9
                  operator: 衴ʨ瑕.r魿ɺŧ凋_&瓉î寖¤tĜt"
                - key: VG
                  operator: 鼸眙0!啵鹾迓胪SĖY
                  values:
                  - i4l
                  - Y6gl
                  - WA
                matchLabels:
                  5jqgHGxN: uQx
              mismatchLabelKeys:
              - acp
              - gn0p04
              - CvvldniL
              namespaceSelector:
                matchExpressions:
                - key: UsyM
                  operator: Ǭ.
                  values:
                  - aFu2Db8qvq
                  - SwzwU6As
                - key: EgI
                  operator: ""
                  values:
                  - 2SN
                  - i4aVPZmT
                - key: JoubvvqBLU
                  operator: R筈駊Ŗ:挶
                  values:
                  - GqK4CV
                matchLabels:
                  Hxf: Kv
                  i5ScCfIqa: kao
              namespaces:
              - TMpTw
              topologyKey: d
            weight: -119797982
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: zPe50d
                  operator: '?'
                  values:
                  - iFqAX
                - key: xnW
                  operator: :攃ĺV窎
                  values:
                  - 3nYZuq
                  - JQEB7x
                  - ZWU
                matchLabels:
                  9rE8VGR: OZgHuti
                  OP: ckCaWEL
              matchLabelKeys:
              - k660y
              - 7BvT65jhS
              mismatchLabelKeys:
              - 4wGxeaSgyM
              - ""
              - 1X
              namespaceSelector:
                matchExpressions:
                - key: o0sT
                  operator: ʅ¿掯儯
                  values:
                  - qZ
                  - l
                  - YtpVM0H
                - key: LVBzP1Ae
                  operator: ó3缐穳娫嘽3x
                  values:
                  - LEbLp
              namespaces:
              - b6s3a0g
              topologyKey: tgJ1ADV
            weight: -60551341
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: 7CXo
                operator: ũTƓ¨q噞W淵ƚeƘ綗跉Ǘɶɨ靟樿t
                values:
                - fIjL8ud
                - cP6ku3Ce
              matchLabels:
                EPN: NAF
            matchLabelKeys:
            - 1Gmhbm
            namespaceSelector:
              matchExpressions:
              - key: 4GLPuhOFl
                operator: ""
                values:
                - rcxiBTaZ8FV
                - 7aKrc
                - "43"
              - key: HlS
                operator: 倗龿泍ȗʗe囝涷購;źFƝ單a軷&
                values:
                - niV
            namespaces:
            - D
            - Qq
            - ""
            topologyKey: zz
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: eAqYoR2B
                  operator: ʧ膕眹Ʈǰ韑&ÅÆ7ə&ĝ
                  values:
                  - rkx
                - key: 3ycQsqbL
                  operator: =¡憴ʊĩƬ_ɕ
                  values:
                  - Xp
                  - xrURdzvH
                matchLabels:
                  s: Q
              matchLabelKeys:
              - HRAIb
              - 5a6U
              namespaceSelector:
                matchExpressions:
                - key: "7"
                  operator: ʉĥ
                - key: NX
                  operator: ɽ阣旦Áļáʋ霐ĊW覒bYy竰ɋV条蒩
                matchLabels:
                  "": O4C
                  JDyjt3: TX
              namespaces:
              - 9zv
              - vb75Ef
              - x7R0H
              topologyKey: 6BGhh
            weight: -1485510964
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: CxpFW5N
                operator: n鉢q
              - key: T
                operator: Y襱Ƞ)4ʜåȸ譨R袞îü筎@b
                values:
                - hqdw8EVv1
                - 1mT3hr
              matchLabels:
                UnfuNo: YxmvwMe
            mismatchLabelKeys:
            - Ov2egK5
            - IOdr
            - aoAX2p5
            namespaceSelector:
              matchLabels:
                6mgvu490: TT
                sXWWyY: Tcd6j
            namespaces:
            - UOXmG
            topologyKey: ""
          - labelSelector:
              matchLabels:
                GgvCsL: 4nHaBTb
                xsHA4dSX: A0s6
            matchLabelKeys:
            - ISAMP4TC
            - ks6XZ9fL09
            - 9av
            mismatchLabelKeys:
            - SvB0
            namespaceSelector:
              matchExpressions:
              - key: 70TOcc
                operator: 媭饴$ʉ灞颉Ǵ粨
                values:
                - oK2lFz54
                - DT
              - key: "n"
                operator: 爵礝8oJb赇n
                values:
                - JcD
                - 0PHAj4GyS
                - 8OS9FIppKicyyn
              matchLabels:
                wV: agcZU
            namespaces:
            - S7GUz7tacC
            - qmihBv1hRQ
            - sl18T1
            topologyKey: s7dw
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=SzbHWgTpbD2
        - gQcl6Ej6
        command:
        - /manager
        env: []
        image: 5Q:jr9
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 810
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 500
          periodSeconds: 189
          successThreshold: 853
          terminationGracePeriodSeconds: 565
          timeoutSeconds: 525
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 348
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 901
          periodSeconds: 523
          successThreshold: 143
          terminationGracePeriodSeconds: 422
          timeoutSeconds: 114
        resources:
          limits:
            cpu: "760"
            memory: "142"
          requests:
            cpu: "163"
            memory: "318"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        options:
        - name: 6Fq
          value: cuoN
        - name: cVM
          value: e4mx
        - name: IAvD
          value: 4szS0pX
      dnsPolicy: 絀揋a
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - v0Kv
        ip: eQ3r5
      - hostnames:
        - 8nEk84M
        - euK9Qp3
        ip: LEDvLQQsFo9
      hostIPC: true
      hostUsers: true
      hostname: 3iw
      imagePullSecrets:
      - name: 9J
      initContainers: []
      nodeName: 3Q886bLj
      nodeSelector: {}
      preemptionPolicy: ň鈩(ɟǛ穯農麤蠼
      priority: -770320052
      restartPolicy: ʇ`&箸ħ
      runtimeClassName: D
      schedulerName: IESs5
      schedulingGates:
      - name: 8U1
      - name: X
      securityContext:
        fsGroup: 6118947562666083000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 6213863176334278000
        runAsNonRoot: false
        runAsUser: -2189966760468144400
        supplementalGroups:
        - -8830045925767746000
        sysctls:
        - name: 34Kkf2OQ
          value: 7ZPrf
      serviceAccountName: f0
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: "6"
      terminationGracePeriodSeconds: -7029881915293393000
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: Ra
            operator: 豼
          - key: dEVKZS3
            operator: i膆邓柟洬墐Ǿ$
            values:
            - l
          matchLabels:
            0ZyOGf: Wijr
        matchLabelKeys:
        - xlVcmk7TJ
        maxSkew: -2107805018
        minDomains: -1180467181
        nodeAffinityPolicy: '''ŵ豞穾蹙還ȑ'
        nodeTaintsPolicy: Ğ繰Ÿ@-ě
        topologyKey: 0dMxJp
        whenUnsatisfiable: ¬鴍ʀɞs<ǨŜ凓Ėǲȣ
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: "6"
      - name: zAdnzeSaest
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    jFAGoiKg: S0ruuP
    louERS: dWcc
  creationTimestamp: null
  labels:
    0A3p3: jM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6xIMZiuoly3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    in: IEvkGW7b
  name: t-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      0A3p3: jM
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: 6xIMZiuoly3
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
      in: IEvkGW7b
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: ClL0jwLRjj
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-035.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    R: x
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k
    app.kubernetes.io/version: v2.3.8-24.3.6
    dcuPV: Fy
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 1316QiC
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 9nlMnZj2
    health:
      healthProbeBindAddress: 86hb6c8
    kind: pS
    leaderElection:
      leaderElect: false
      resourceName: Rej6x7c
    metrics:
      bindAddress: AA
    webhook:
      port: 385
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k
    app.kubernetes.io/version: v2.3.8-24.3.6
    dcuPV: Fy
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PW6-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k
    app.kubernetes.io/version: v2.3.8-24.3.6
    dcuPV: Fy
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PW6-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: k
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k
    app.kubernetes.io/version: v2.3.8-24.3.6
    dcuPV: Fy
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PW6
  namespace: default
spec:
  replicas: -863901194
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: k
  strategy:
    rollingUpdate:
      maxSurge: 273545509
      maxUnavailable: 1165284047
    type: 竈繭ż7訽ǵVHoG捔Ą
  template:
    metadata:
      annotations:
        0vs: "1"
        L: dwD5nU
        pUlqRf45: NG
      creationTimestamp: null
      labels:
        F8kfXVrMt: lr0M
        WOU: k
        XHCkj: QKIvxGl5
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: k
    spec:
      activeDeadlineSeconds: -479205534661964100
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchFields:
              - key: O4qec
                operator: ǀ诺n罣湰ƾŝ黜ǒ耴Ƴfä
                values:
                - lVX
                - 7EKxRsUAz
              - key: 1ed
                operator: u
                values:
                - WxGv2
              - key: fTLDFjvn
                operator: 7懱c
                values:
                - so482
                - EitqgZ
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector: {}
            matchLabelKeys:
            - DJge
            namespaceSelector:
              matchExpressions:
              - key: rn9
                operator: ƣ愠ƈh絳eɓi§
                values:
                - 6imO
              - key: yUkrn
                operator: ʅv憼腨ɚ
                values:
                - mZ
                - oO1UJ
                - 8q
              - key: QCHd6
                operator: 櫨}R茤ţmɔ铫uǈȚșǫK借
              matchLabels:
                PQQx: zwV
                RyFpnA: zQqlgMizGEu
            namespaces:
            - "9"
            topologyKey: kk7yjR
          - labelSelector:
              matchExpressions:
              - key: "y"
                operator: ^C境ɂ馷1*Ǆz辺uǠʒ6袏c躼ø
                values:
                - Z
                - zfWOtzNayRN
                - UN7Auq
            matchLabelKeys:
            - MZm
            namespaceSelector:
              matchExpressions:
              - key: aDfk1sPM
                operator: 姚1Y
                values:
                - vDNH8
                - 1VLVR
                - BUY5Xx4
              - key: g0Cr
                operator: 枙!Ǥ
                values:
                - B00qSVLkHpfG0
              - key: 3RWUaD
                operator: 龷衈凌_敃FLJ饮J噁赡
                values:
                - BvLwik
                - Bqm54DxyiW
                - v2N9o
              matchLabels:
                FI: 4CJ6Ehq
                e3Xo: qa
            topologyKey: k98kmgw
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: TQvU6Id
                  operator: yȨÁ汑ȟEʪɫzȷj脽硗ɬO$ǫ羡
                  values:
                  - WCNC49poydsy
                  - 5esRdA
                  - uio
                - key: mmE
                  operator: 釮GsEɲ诒檃拼6韺ÛOm疐ɦ
                  values:
                  - "37"
                - key: mqVOqJq
                  operator: Ǝ
                  values:
                  - hAKG
                matchLabels:
                  D0geiPus2: tCC
                  tzXLb: 0Uq
              matchLabelKeys:
              - Kj
              - yi
              namespaceSelector:
                matchExpressions:
                - key: cckS
                  operator: ɲʣƁ嬩ʧɡ跊Ĥȃ懍嗆鹿Ǜ
                  values:
                  - 5inp
                  - DzJRJ
                - key: UOF
                  operator: 餱覲Kȃ篙兄禔ɥ擫
                  values:
                  - VRWd
                  - B
                  - w2ggqD
                - key: hwT2eq
                  operator: 椟k¡栤蘩à娰訾玽-ʏ=^窻ƦX¾,
                  values:
                  - g6L
                  - N9B3wmlSo
                matchLabels:
                  "": ""
                  Ql: aM
                  aQp: Wu6
              namespaces:
              - Cea4
              - 1c69
              topologyKey: 0T
            weight: -1373208300
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  21EsNlB: oMlzm4tm
              matchLabelKeys:
              - jW2041N
              mismatchLabelKeys:
              - 9QZQ2WMN
              - TT
              - U
              namespaceSelector:
                matchExpressions:
                - key: S
                  operator: vĢɸɦ狓Ui4lĖ弳Y.珸
                matchLabels:
                  7l: BJrJcdKfp
                  kSRav0N: rDbz53oTY
                  qKh4tv: iDb2z
              namespaces:
              - uUXdfwE
              - VBuV9
              topologyKey: ""
            weight: 1039679825
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                C4Saz4lf: 42so6l
                L34Nnw8Frg: 4wOR
                zDwo: 7hctY
            matchLabelKeys:
            - iec09dAvG
            namespaceSelector:
              matchExpressions:
              - key: mVp
                operator: ų
                values:
                - yrYw6b
              - key: EWsZkpwQ
                operator: '埁T佮Ŕ&:'
              matchLabels:
                G4T: "68"
            topologyKey: 3DBj74YHA7j
          - labelSelector:
              matchExpressions:
              - key: IPYws68w
                operator: lǰƻſ¯I4x>#ɶ%ɯ徬
                values:
                - Z9f
                - CQGBiVMq
              - key: uXd8n6
                operator: '%J}聜ȡ'
                values:
                - FOL0
              matchLabels:
                "6": 21G4
                m3c4: cUiCI
            matchLabelKeys:
            - "n"
            - nP4Sn
            namespaceSelector:
              matchExpressions:
              - key: Zwk
                operator: ŵǹ柉忬诱ôF9搫Ð}*ƞAɺʠʅ日
                values:
                - "4"
                - 4Y6C
                - YpRMY
              - key: P3aF4fm4Fc
                operator: Y{Ǽɠ
                values:
                - dJrrmvxXi
                - o0qAWA
                - tXyqe
              matchLabels:
                P0A: ""
                ROb1lF: gN6G6Wtg
                u4apTzbF4XO: i1tol
            namespaces:
            - JHJ
            - BGu5k3e
            - TjWU
            topologyKey: yhmLl4
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=iAMFhZ
        - 8kSamSw9
        command:
        - /manager
        env: []
        image: P9JMlA:i6Q4sn53d
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 122
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 163
          periodSeconds: 240
          successThreshold: 310
          terminationGracePeriodSeconds: 814
          timeoutSeconds: 57
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 320
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 395
          periodSeconds: 682
          successThreshold: 493
          terminationGracePeriodSeconds: 888
          timeoutSeconds: 845
        resources:
          limits:
            cpu: "417"
            memory: "633"
          requests:
            cpu: "307"
            memory: "967"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        nameservers:
        - E4iX
        - wh8
        - sEe
        options:
        - name: LG5d6Ts
          value: jCMr
        - name: cZX
          value: "47"
        searches:
        - GceCBWJ1Bz
        - gMgtPpnfwg
        - xJL
      dnsPolicy: ʭřɖ讋朩čɦq9
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - 4jg
        - A6aDqHij
        - J0F
        ip: JzFtYa
      - hostnames:
        - 2S1cK
        - lgaF6AE
        ip: Nm5sHlku
      - ip: QVK
      hostIPC: true
      hostUsers: true
      hostname: w6S
      imagePullSecrets:
      - name: jUtd
      - name: 4HyE5S
      - name: cTV
      initContainers: []
      nodeName: biEOYK
      nodeSelector:
        4PEnEGV: iaAZkrS
        m: GP78P
        p3: LwcLZgWD4x
      preemptionPolicy: 赬應敪塀ſ缲ťǎ邙Xt*Öơ
      priority: 1451453581
      priorityClassName: mR
      resourceClaims:
      - name: PNC
        source:
          resourceClaimName: p
          resourceClaimTemplateName: rN5X
      restartPolicy: 諜ŵ7骕蝍ă%ǲ薋űĨ¿,M_T
      runtimeClassName: aNuW
      schedulerName: 5Sk
      schedulingGates:
      - name: SN
      - name: mM
      - name: IOhXovq
      securityContext:
        fsGroup: -3507907059458774500
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -7869609674426729000
        runAsNonRoot: true
        runAsUser: 638537944699867400
        supplementalGroups:
        - -1194734635076507400
        sysctls:
        - name: kWMtMKZgRV9K
          value: FeSa
      serviceAccountName: NVe
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: P0cezK
      terminationGracePeriodSeconds: -7912782538847534000
      tolerations:
      - effect: R
        key: npvocBvp
        operator: nĥ憱勐蝵炱¸矋ȓ[
        tolerationSeconds: 7409148459521107000
        value: dh6H4ND
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            P6nf: ND
            c1BhNr: YluE8
            rtFA6: iapOjb
        maxSkew: 1600069253
        minDomains: 1529433080
        nodeAffinityPolicy: Ǎ倭赖
        nodeTaintsPolicy: ĵů)w[楰R醡uZɱ噍螽曚l*
        topologyKey: mmx0nY
        whenUnsatisfiable: Æ Ɂ聠Q
      - labelSelector:
          matchLabels:
            MbFDM: 8xD9
        maxSkew: -959650895
        minDomains: -1666435784
        nodeAffinityPolicy: '>Å洗墠Å×蔪o鍵禮廾'
        nodeTaintsPolicy: ~rš煫¤īLǬ纨ʫNŪ吮卼¥ÏȦ
        topologyKey: 2PWoF15m
        whenUnsatisfiable: Ƈ
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: ""
      - name: MlOcWr
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 1316QiC
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-036.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: oVpv6Jbiu
    health:
      healthProbeBindAddress: rM
    kind: "4"
    leaderElection:
      leaderElect: true
      resourceName: 8ABD2
    metrics:
      bindAddress: aptE
    webhook:
      port: 265
kind: ConfigMap
metadata:
  annotations:
    UUhlBGZ: "4"
    klq64tXT: lQvkvI
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Z4N6WbZ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: a-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    UUhlBGZ: "4"
    klq64tXT: lQvkvI
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Z4N6WbZ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: a-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Z4N6WbZ
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    UUhlBGZ: "4"
    klq64tXT: lQvkvI
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Z4N6WbZ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: a
  namespace: default
spec:
  replicas: 501079035
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: Z4N6WbZ
  strategy:
    rollingUpdate:
      maxSurge: 2067590918
      maxUnavailable: 1947322773
    type: 8t哨F
  template:
    metadata:
      annotations:
        2obh6r: YJnq
        REz: "91"
        q1: hpRYOkCjD
      creationTimestamp: null
      labels:
        8YshAI6y: MbG3NXx
        PWOkXnXZ: jBxq
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: Z4N6WbZ
        tAL: H977c3z
    spec:
      activeDeadlineSeconds: 8869812654614202000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference: {}
            weight: 473439767
          - preference:
              matchExpressions:
              - key: "027"
                operator: 苒&FɅ-UĖ
                values:
                - gPn9
                - hvowqqp8Q9
              matchFields:
              - key: NCl
                operator: ',+ȰB诐Uŭ怍睞ʧ澣0樐阿ĳȓ娱Ȥ'
                values:
                - NgJ8z
                - NeO
                - Qkl
              - key: Pb
                operator: ȅ<
                values:
                - Dbq0DDR
                - wVYD8l9l
            weight: -396603968
          - preference:
              matchExpressions:
              - key: LhzwY
                operator: ""
                values:
                - FrO
                - ""
                - 0m
            weight: -1154736427
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gF0
                operator: Ɉ涍ʃŽ杔+
                values:
                - YkDQ
                - m
                - gMKIh
              - key: UDt50o
                operator: 篲Ǟ僌
                values:
                - htXPClZ
              matchFields:
              - key: MUyQ
                operator: 雸槾ô慾鹸x籢
                values:
                - mYLc7FjPB
                - OtkQaV5lk
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector: {}
              matchLabelKeys:
              - Bq2lGSc
              - "11"
              namespaceSelector:
                matchLabels:
                  61F: WZbVUH
                  SX9la: Xi
              namespaces:
              - pZw
              - 7PgdMsO7
              topologyKey: KjgQ6MCYvet
            weight: 1896493716
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  EoK5b: 0EsO
                  cAa: 73CDGl5Q28E
                  hC: QEb
              matchLabelKeys:
              - ycS1kTps
              - jUS
              mismatchLabelKeys:
              - bb9r7UB
              namespaceSelector:
                matchExpressions:
                - key: YpiUL
                  operator: 蕩鉝L鏲傳渋ʅ齸ĲH镱鎓Tŝ飿&¶ʁ鞏
                - key: ""
                  operator: 鯊骟蚎m
                  values:
                  - cE
                - key: D3S7t
                  operator: ĐŝÃğǇɾ湐\汻M譭ǁ
                matchLabels:
                  "": 3Xd0zLiqw
                  1FRkcAxC: i0rmXF
                  04GAcO: iR6H
              namespaces:
              - R
              - EM1Pn
              topologyKey: WS
            weight: -961265894
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                FBAH: nP16pV
                om: "1"
            matchLabelKeys:
            - HnT
            mismatchLabelKeys:
            - uGMMd9
            namespaceSelector:
              matchExpressions:
              - key: 6AXTYUaG
                operator: 鯶鳚¢裪hR
              - key: ""
                operator: 宆E訄蹐÷xł鉁珅9}Ƥ
                values:
                - Vs
                - sP4bxNG8y
                - xLJquafHw
              - key: 00UA
                operator: Ƨ&*ȥ@s躵ʏ0搢0ɯ槃
                values:
                - cwC0FTV
              matchLabels:
                ZsyhZP: ""
            namespaces:
            - CF2LbLc
            topologyKey: vU4qw
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: mY
                  operator: 3ȶ臙ʪv腫牐c脎
                  values:
                  - uO3l0fwWh6
                - key: qXVQkeqOR
                  operator: Ƽ傌ʂ沺F}\]ȃʛ駕Ɇ
                  values:
                  - ""
                  - YLfmiZ
                  - yROx
                - key: kHA
                  operator: '%襔zʠdm§"EgȰ雑$Ħ¥'
                  values:
                  - FDY4eRpq
              matchLabelKeys:
              - I8iTy
              - PnzjSV4y
              - bwsYsGvz
              mismatchLabelKeys:
              - E
              - I5rAEn8oew4
              namespaceSelector:
                matchExpressions:
                - key: BTUtFa7
                  operator: àʚÍ/Ƣ5{ʃ犕#ʆ湏圄gʐ耆
                  values:
                  - vIs
                - key: 2LDI
                  operator: ņB/ȉś镛ĸ
                  values:
                  - fL1DgO
              namespaces:
              - Oxrg
              - t
              topologyKey: 6r
            weight: -1087546313
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: x9B1Nd
                  operator: ÈĖJ歱Ȋ詮Ƒ卵ʣŐsŹğ
                  values:
                  - jRB
                  - 0oZcYk
                - key: sB
                  operator: 忞yG°~ƎʠA鱃很ō馥ɾ
                  values:
                  - wm
                  - 8GaQE
                - key: ek1po
                  operator: ^1'跢2«
                  values:
                  - ""
                matchLabels:
                  U: cJ
                  g0iGC2x: FPv4Mw
                  mHv: ESsM
              mismatchLabelKeys:
              - MWJzXK
              - 69e
              namespaceSelector:
                matchExpressions:
                - key: lyRh
                  operator: ōý
                  values:
                  - 6W9ZKTa
                  - hdT3hZJ6
                  - iuZv5jv
                - key: a27D
                  operator: Ɇ鰖揋żq狮ɦʢ苴ǰ/
                  values:
                  - 3xTbG8dHf
                - key: KHGn0pZ
                  operator: 3ŸʩÕ£曁Ƞ闷撐磢ɤQ,Z榉W栚奸
                matchLabels:
                  izmMr: 4Syj
              topologyKey: TMvGjb
            weight: -31298358
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: dqcW4
                  operator: ǂƢ二匪
                  values:
                  - xJ
                  - y7
                - key: Svv1
                  operator: 麖寁ÆK閉Ǹ,<V祔ƨ琒豶PǬ鈟ē耻
                matchLabels:
                  "": kYd8K9RO
              matchLabelKeys:
              - fRcmG5lskN
              namespaceSelector:
                matchExpressions:
                - key: GfNA0bnJ
                  operator: ę鰃-ɘŃ进z4VHɠ(QXč
                  values:
                  - JwM
                - key: ""
                  operator: ʏ躿ǧd覾阥殻U噒椙-0ĀĬ
                  values:
                  - eyGVK
                  - 3xX8Z0
                  - fmCUCh
                - key: SMIjETPd
                  operator: ɵǦ
                  values:
                  - ji5uB81
                matchLabels:
                  eDuAYO: vpel
                  gqeVpYRPj1B: "00"
              topologyKey: bhRuz
            weight: 587779527
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: ZNApjO4dyL7
                operator: è葱R17eʢGŪeQ恳趱
                values:
                - h
              - key: i5wcIHH
                operator: 菙
                values:
                - 0lxU
              matchLabels:
                WHuL8cnbjHWTya: gEkNb1xRhw
                nGWt: at
                u: djHc
            mismatchLabelKeys:
            - CR7Fa
            - KGGf9
            - eM
            namespaceSelector:
              matchExpressions:
              - key: omh
                operator: Mƃȇâ8ƯÆȿæo拈ǳ
                values:
                - jC6
                - Nj5EM
              matchLabels:
                Icr8ew: uy0gdyT
                bqK8: lRl
            namespaces:
            - C4yuiv
            - w
            topologyKey: oM3
          - labelSelector:
              matchLabels:
                r3Z167j: ""
                u379sn4o: fGjBaQByN
            matchLabelKeys:
            - aL4
            mismatchLabelKeys:
            - O
            namespaceSelector:
              matchExpressions:
              - key: ""
                operator: 瘻鍹p#Ţ餡纂駰Ū@Ɠ
                values:
                - Gd
              - key: CCET
                operator: Ǻ戝Ă{锧鄅%əȃÜ櫨绻
                values:
                - sLtfLzWl6
                - Ph
                - oIxv
            namespaces:
            - UA5Cy
            - yYkylzXRg
            topologyKey: v5
          - labelSelector:
              matchExpressions:
              - key: qnWjp
                operator: P甐Ǥt久x鄒历筹"ǉȁq6ĳ»Ƕ
                values:
                - yhljwba
                - 2Fgb
              matchLabels:
                KvSeg: W
                g: RLw
            matchLabelKeys:
            - 3crwL
            - Bs76On
            mismatchLabelKeys:
            - uVQ
            - Qn
            - 5Q27Wh2md3k
            namespaceSelector:
              matchExpressions:
              - key: Egc
                operator: 鄅ħ<搪ȽȓrRȚ综%Ɛ
                values:
                - IXHF
              - key: p
                operator: 剠徵uĂ
                values:
                - AIIjh9
                - z68MZ
              matchLabels:
                MY8qL8sBd: "5"
            namespaces:
            - QMIT
            - zKD
            - sdR2lq
            topologyKey: GpU29
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=W
        - Cz5DsC
        - dk6pMw8X
        command:
        - /manager
        env: []
        image: dOHS:4hS76
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 599
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 221
          periodSeconds: 299
          successThreshold: 45
          terminationGracePeriodSeconds: 475
          timeoutSeconds: 953
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 852
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 158
          periodSeconds: 878
          successThreshold: 917
          terminationGracePeriodSeconds: 17
          timeoutSeconds: 504
        resources:
          limits:
            cpu: "746"
            memory: "630"
          requests:
            cpu: "757"
            memory: "961"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        searches:
        - ""
      dnsPolicy: ośǃēI窠ʬ荑}Ň
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - NMj
        ip: TbFyR0ly
      hostIPC: true
      hostNetwork: true
      hostUsers: true
      hostname: Yv
      imagePullSecrets: []
      initContainers: []
      nodeName: ghOg
      nodeSelector:
        BcfyfWrjYZ: n2ry7p
        CxnDAhw: G
        le: 9BfgHzxifNa
        maJiXMJ: 8maQMn
        mou: 7Wk
      preemptionPolicy: 7Żȯ景D頃g_猍!ȼ$Ȝ
      priority: 461403438
      resourceClaims:
      - name: FL03mN
        source:
          resourceClaimName: 0Y
          resourceClaimTemplateName: TxncKOLkdF
      - name: fvv1dYr3Pj
        source:
          resourceClaimName: 3YL
          resourceClaimTemplateName: Q3vD
      restartPolicy: 妖軉Ǖ阡îʈxƴ畲ĵǚ鉌|少ɝ罆oĆ
      runtimeClassName: efVho
      schedulerName: Yw
      schedulingGates:
      - name: l
      - name: tP
      - name: 3BRpp
      securityContext:
        fsGroup: 4017995695260251600
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 4260638328869255000
        runAsNonRoot: true
        runAsUser: -4618393208103491000
      serviceAccountName: 9uMfhiZ
      setHostnameAsFQDN: false
      subdomain: 3I
      terminationGracePeriodSeconds: 8276487153201002000
      tolerations:
      - effect: ',ʃƃ鲿騢X'
        key: DDZm6GU8P
        operator: 蕣<呞
        tolerationSeconds: 48473247690654570
        value: uduUoI0A5OiW8
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: X
            operator: 佛乃鍉魂ɝ遷Ð謡詻aĥǑ鳀喑»Y
            values:
            - u9
          - key: T4
            operator: 戀是#3摞v淚氣
            values:
            - rMiRUF
            - Wyr
          - key: k8
            operator: 蓩蘸鴎ƃô狄懊乵UìȔ瑊Ǳ牳*
            values:
            - iber9B
          matchLabels:
            3AQpTJp6O3: OhzvsgB79ec
        matchLabelKeys:
        - PuhJyxq
        - xCWb4C5
        - yT
        maxSkew: 1702068385
        minDomains: -1322214476
        nodeAffinityPolicy: :C貞g伮稂祅áÒL繆ÃȾ
        nodeTaintsPolicy: G99櫻N6鴇­Ĉ櫫Ƚ4
        topologyKey: y3F2Ss
        whenUnsatisfiable: 奂閙ɏiģpȝůƤĮĶ
      volumes:
      - name: ORR
      - name: jh435G
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    UUhlBGZ: "4"
    klq64tXT: lQvkvI
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Z4N6WbZ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: a-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: Z4N6WbZ
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: HOry
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-037.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: KgBq
    health:
      healthProbeBindAddress: ""
    kind: xm
    leaderElection:
      leaderElect: true
      resourceName: lyaPKkd
    metrics:
      bindAddress: ""
    webhook:
      port: 92
kind: ConfigMap
metadata:
  annotations:
    L6XT: "9"
  creationTimestamp: null
  labels:
    D0BN9: JZC8K
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 2rbFmR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    miGH: N7Ko
  name: A8UY-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    L6XT: "9"
  creationTimestamp: null
  labels:
    D0BN9: JZC8K
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 2rbFmR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    miGH: N7Ko
  name: A8UY-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 2rbFmR
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    L6XT: "9"
  creationTimestamp: null
  labels:
    D0BN9: JZC8K
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 2rbFmR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    miGH: N7Ko
  name: A8UY
  namespace: default
spec:
  replicas: 294527132
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 2rbFmR
  strategy:
    rollingUpdate:
      maxSurge: 590184565
      maxUnavailable: 111912864
    type: 爿ÿ盚²檆T皕i5[m?
  template:
    metadata:
      annotations:
        3D: oyP6
        C4C8HR: DWzZw
        RXN5: 4v
        lnjX: av
        u: Wz
      creationTimestamp: null
      labels:
        NY: wgXa
        R: N2
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 2rbFmR
        rTCB2: tfqHb8
        zzLFnSk6: C2PK
    spec:
      activeDeadlineSeconds: -7603236822445764000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: 3fSZ
                operator: ""
                values:
                - rAyd9KxO
                - onsnwRPVBr
                - HGC
              matchFields:
              - key: ""
                operator: ǷɤɱaN深¼澾»ƌ霺ʍ=
                values:
                - v
                - CG60Nc
            weight: -390831773
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: W553zn
                operator: V_
                values:
                - u9MHV46V7
              - key: O71Ws
                operator: 敂珐J忴攈
                values:
                - yfj
                - aAcsCeZ8WzS6tDr
            mismatchLabelKeys:
            - Xom3k
            - BUY
            - b
            namespaceSelector:
              matchExpressions:
              - key: r
                operator: 蝝KƏ档窓Pʁ\ʑǒ,ĵŸ鬸埓¥Ő涼
              - key: W6Llt
                operator: Ŋmȑ煂k|Ǽ珗玿亟
              matchLabels:
                MfttBU: Qiasf9C
            namespaces:
            - fqxUE4odf
            - Zbe5iO5
            - zJDD
            topologyKey: u4BmFo
          - labelSelector:
              matchExpressions:
              - key: 9mPfnS
                operator: 帇掓鲊ƞOʄņ¯蒴Kà1黡Ŝġy叕!l
              - key: ""
                operator: ɏ
                values:
                - P
              - key: U8NsmS
                operator: i远t [軣ęO嘿冨ɦ
                values:
                - opbto8
                - R
                - PHRNShb
              matchLabels:
                m: Zts
                zT: CYRVX9S
            mismatchLabelKeys:
            - vW
            namespaceSelector:
              matchExpressions:
              - key: TJJezAK
                operator: ""
                values:
                - Cy
              - key: w2d
                operator: '%煶¤ǌz洋I姝ǒ蓍質Ȥ'
                values:
                - 4le
                - ONDn
                - VVa4iQk
              matchLabels:
                6NtGC: iFNM
            namespaces:
            - oF2zs
            topologyKey: X0e
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: Shkg
                  operator: 0jË
                  values:
                  - hkZsf9
                  - aKL
                  - b
                - key: BA5nkpT
                  operator: '|@頉ȣ杒'
                  values:
                  - lGyBvlcA
                  - Hh2av
                  - lAVMcO
                - key: jw
                  operator: ĥĈƪ Ƈ魁專Ǔ
                  values:
                  - i
                  - tn6tgD3KS
                  - ""
                matchLabels:
                  faSupWl: C8EilS
              matchLabelKeys:
              - jalW
              mismatchLabelKeys:
              - jla
              - Vj5T
              - wtr
              namespaceSelector:
                matchExpressions:
                - key: IQWO
                  operator: ZO炕9lǐS@彥峞É棿茀2巫Ģ宎壅鯘
                - key: 8W8ISE
                  operator: ŵő技#qćĦy
                  values:
                  - gmpph35e
                  - ewTi
                  - ygKk5
                matchLabels:
                  YR9SwVLf5: WVvhE
                  rqTWM6oI: YCJYvOIXt
                  yNjUZ2: wNpgNJ
              topologyKey: nOty4XDw
            weight: 1445065907
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: fSK0G9
                operator: þ揎[啢<]喣攡ȫ*9ȓåɚ
                values:
                - g6cDDIH
                - NWkDR5c
                - M7Es
              - key: DpuS9ug
                operator: 疫}
                values:
                - Y0j
            matchLabelKeys:
            - yK
            mismatchLabelKeys:
            - s2x
            namespaceSelector:
              matchExpressions:
              - key: Eymu9E5T
                operator: w|Ĉ]ǗÐʫ坎XĖ搞7Ʃk鮚禢2
                values:
                - SR71Ib
                - bUbhkz
              - key: Jwd
                operator: 9ƣɷ~ȉ曧LŒ榽ub
                values:
                - lL38
                - dIl
                - ZEs
              matchLabels:
                FBDhIn: i1Tzs
                LECl: fxmi
                s08BT: NVL8Rj1c
            namespaces:
            - VOBx1lzh
            topologyKey: MFry
          - labelSelector:
              matchExpressions:
              - key: Gn
                operator: ¯cɆ捯Ǔė?²牓ɌK皛爠Z°
                values:
                - Q
              - key: gajkms6D
                operator: ǜȯ鷵ȡIǫĴ6/Ƀ僺嵀鑉
                values:
                - c
              matchLabels:
                JAXqk: 8NSht
                VfsNZy: waZD
                t8OJOgaV: x54
            matchLabelKeys:
            - S
            namespaceSelector:
              matchExpressions:
              - key: i3I
                operator: ""
                values:
                - ctEyyp
              - key: "1"
                operator: 豚Ƨċ妠h蜉q荷ȧ溈Û狂½ʁ筹鲦Ĩ
                values:
                - gYobCj
                - 50GeR
              - key: 5OU
                operator: ""
                values:
                - 0N1RdXr
            namespaces:
            - gWAz
            - tpMVwJ
            topologyKey: bu
          - labelSelector:
              matchLabels:
                u1HEH: XafQDnL
            matchLabelKeys:
            - yXdizoV
            - b8W2fmZ
            mismatchLabelKeys:
            - TJztDLF
            - E0vw
            namespaceSelector:
              matchExpressions:
              - key: Hy
                operator: PŌȼPƛzɧǍ寗LuČ/ƩũƯȱ
                values:
                - 7M
                - wOSvGvlER7
                - nD2jk5Stu
              - key: 8w
                operator: S罩
              - key: ""
                operator: þ瀥ĸwc
              matchLabels:
                T7o: k55I
                TuGDur5aRMaeZTj: 2jy2PKgg
            topologyKey: VJU
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=GyEj
        - 0H
        - nCx9L
        command:
        - /manager
        env: []
        image: 5R2fC0t:C5
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 76
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 324
          periodSeconds: 47
          successThreshold: 294
          terminationGracePeriodSeconds: 779
          timeoutSeconds: 181
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 332
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 847
          periodSeconds: 679
          successThreshold: 520
          terminationGracePeriodSeconds: 904
          timeoutSeconds: 751
        resources:
          limits:
            cpu: "319"
            memory: "234"
          requests:
            cpu: "624"
            memory: "579"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        nameservers:
        - YISghsOm
        options:
        - name: l17zGpggC
          value: QKMtNwE
        - value: ga4h
        - name: "0"
          value: bwn5neRUx
        searches:
        - Hk1
      dnsPolicy: ?譯ŗĠɫ禪,慾ʂ
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - Jc
        - rNSY
        - 3zKm
        ip: TomGWEr
      hostIPC: true
      hostUsers: true
      hostname: lKhK
      imagePullSecrets:
      - name: DQ
      initContainers: []
      nodeName: zBKKvFo
      nodeSelector:
        2D: Q8r
        2IB: Bzyzn
        94I: 0webS5W
        RKcWXOt: Xs6
        gd: Gk
      preemptionPolicy: 妓鸪媾Å幤fiHÉĕ鵓
      priority: 28289167
      priorityClassName: GzmDJoYOMAzA
      resourceClaims:
      - name: amoPyt4
        source:
          resourceClaimName: tnr8
          resourceClaimTemplateName: KN
      - name: ""
        source:
          resourceClaimName: qUqV
          resourceClaimTemplateName: 31RoycCm
      restartPolicy: 蕡s楳(Ua撎ɻ3
      runtimeClassName: RqRjVM
      schedulerName: xeYX
      schedulingGates:
      - name: Lojre
      - name: QBhq8
      - name: m0Gg2
      securityContext:
        fsGroup: -2486708970747349500
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -6088862733792397000
        runAsNonRoot: false
        runAsUser: -190992104546819170
        sysctls:
        - name: ""
          value: vSi
      serviceAccountName: Ed
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: D8j
      terminationGracePeriodSeconds: 5073170751489756000
      tolerations:
      - effect: 渞]PTXqoh+嵖nÉ蝆Ěgƫ>
        key: 0Xbv0
        operator: 掠Ǉ禐Ǩ廧约睚駶ǲ\
        tolerationSeconds: -296008987596813900
        value: fhUXyNYOFl
      - effect: '>ZƩj氘瘺'
        key: WLMNz
        operator: '`>]Ȯ峤'
        tolerationSeconds: -696994963583694200
        value: Cyq9
      - effect: 2Ċ
        key: jh
        operator: 澀"_Ƹ53
        tolerationSeconds: 8904355430000706000
        value: dXjh
      topologySpreadConstraints:
      - labelSelector: {}
        matchLabelKeys:
        - 4SBggR
        - W2
        - xucqr1
        maxSkew: -917627070
        minDomains: 44463309
        nodeAffinityPolicy: ""
        nodeTaintsPolicy: pDf笫Aß悫ȼ茷w
        topologyKey: dnKKLwixm
        whenUnsatisfiable: pb>ʯ僙ȴō
      volumes:
      - name: ""
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    L6XT: "9"
  creationTimestamp: null
  labels:
    D0BN9: JZC8K
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 2rbFmR
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    miGH: N7Ko
  name: A8UY-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      D0BN9: JZC8K
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: 2rbFmR
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
      miGH: N7Ko
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: tFtWKgQ
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-038.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    1U4k: i7
    U8TFHg6A: OLyvSN
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: dgtMSpw
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: kN
    health:
      healthProbeBindAddress: Mmg1mhk7P
    kind: L2ytr9FI0
    leaderElection:
      leaderElect: false
      resourceName: iUgGbF1x
    metrics:
      bindAddress: FrgVf
    webhook:
      port: 160
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE-additional-controllers
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - nodes
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fjEnE
subjects:
- kind: ServiceAccount
  name: dgtMSpw
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE-additional-controllers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fjEnE-additional-controllers
subjects:
- kind: ServiceAccount
  name: dgtMSpw
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE-additional-controllers
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fjEnE-election-role
subjects:
- kind: ServiceAccount
  name: dgtMSpw
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fjEnE
subjects:
- kind: ServiceAccount
  name: dgtMSpw
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE-additional-controllers
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fjEnE-additional-controllers
subjects:
- kind: ServiceAccount
  name: dgtMSpw
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fjEnE-rpk-bundle
subjects:
- kind: ServiceAccount
  name: dgtMSpw
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: RYuL
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RYuL
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oMSwsE1: VOZ
    x: 4Xx1lbe
  name: fjEnE
  namespace: default
spec:
  replicas: 1948743687
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: RYuL
  strategy:
    rollingUpdate:
      maxSurge: 11170225
      maxUnavailable: 805692477
    type: ɴsɺ)灦C油ɨT
  template:
    metadata:
      annotations:
        W: A7ZVK88
        e: f8Tjdvbo
      creationTimestamp: null
      labels:
        O: SHr5FXhm
        RBYx5: 9lXw
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: RYuL
        yEH: Yi58lHOq
    spec:
      activeDeadlineSeconds: -323868613046808200
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference: {}
            weight: -168636196
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector: {}
              matchLabelKeys:
              - "5"
              mismatchLabelKeys:
              - ieCeevI
              - BhKPo
              - xKNT
              namespaceSelector:
                matchExpressions:
                - key: 4OeUuVVg
                  operator: Ē%ǘȩ讦忈ìĦ,鸉俦繪7諙痍ĭ緷羾
                  values:
                  - EC3
                - key: CO0
                  operator: ""
                  values:
                  - P
                - key: 3aheCb5s
                  operator: 蔡
                  values:
                  - luSv2fPCNw
              namespaces:
              - vEdz
              - lHHZ
              topologyKey: T
            weight: -427628383
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ye4BK
                  operator: 务桇讞箜ɼ
                  values:
                  - Rd1
                  - JEyAJ
                matchLabels:
                  C0vYvd: NjPCyeU
                  Jp: 9LOOBunPQ
              matchLabelKeys:
              - hwtTSZkypS
              - "71"
              mismatchLabelKeys:
              - La3
              namespaceSelector:
                matchExpressions:
                - key: yB7vq
                  operator: ǟ鴦-ǩȬɱʓ
                - key: POaXO5hem
                  operator: Ǘ沂ɖ塶
                  values:
                  - IN
                  - oiAR7Y
                - key: ""
                  operator: Ɖ婬ŧƥ2麍t
                  values:
                  - vdMYY
              namespaces:
              - kIEFUkpLfMg
              - 8DK
              topologyKey: 6t243f
            weight: 415484078
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: SSyaI
                operator: 彇_ŭ@,鵛K飩ʮȤi=
                values:
                - rpEDP
                - 17BvSx
              matchLabels:
                Al33: rLkIL
                n1EHw: 9i
            matchLabelKeys:
            - 2ub
            - s
            mismatchLabelKeys:
            - BOWfT
            namespaceSelector: {}
            topologyKey: 8Dl
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: 8IBUB
                operator: VǶ_貘ʊ
                values:
                - H800O
                - LGbdIMq
                - SB4lC0adX
              matchLabels:
                acJB: Mknp
                xIA2: EeCKvqio
            mismatchLabelKeys:
            - vk0gYVm
            - 53B
            - o
            namespaceSelector:
              matchExpressions:
              - key: iD8HB1
                operator: 憠éUB%繮町Tk菐辁銤µ墠罐慁榀ȼ
                values:
                - Njuo24byEvJ7
                - 4Y6WJ3
                - Ko
              - key: TCGN249
                operator: ƾȿSȧ1毮ɓɸ[Ǆɘ莧ǎ
                values:
                - XO5HfVBJ
                - X9cyy3
                - vr4DBm
              - key: 6zfsC
                operator: 煴YW辿誕岷^ǣĀY
                values:
                - T8YF9
              matchLabels:
                ssT: BAHA7VIV9aim
            namespaces:
            - lAJRC
            topologyKey: O1UQ
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=WFheHptfh
        - E9Eu
        - EU
        - nE
        command:
        - /manager
        env: []
        image: CABd5:DV
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 488
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 89
          periodSeconds: 11
          successThreshold: 541
          terminationGracePeriodSeconds: 738
          timeoutSeconds: 588
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 439
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 615
          periodSeconds: 812
          successThreshold: 91
          terminationGracePeriodSeconds: 631
          timeoutSeconds: 876
        resources:
          limits:
            cpu: "818"
            memory: "212"
          requests:
            cpu: "782"
            memory: "693"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        nameservers:
        - KNDuF
        - GX
        options:
        - name: QDR34
          value: ""
        searches:
        - j82BCHy
        - JNHAL
      dnsPolicy: 市Ę輭R鑍膙孢ɑƆȂɞ¬畛蠣
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - yafcI9
        - V5
        ip: OgwzuyQ
      - ip: "49"
      - hostnames:
        - oB
        ip: hJ
      hostIPC: true
      hostNetwork: true
      hostPID: true
      hostUsers: false
      hostname: t1
      imagePullSecrets:
      - name: dWgsEJ3vFfP0B
      - name: Go
      - name: HfbLZ
      initContainers: []
      nodeSelector:
        "": 5fAb9XGF
        Vhns: WI4HRq
        loM6r39: r856dt0
      preemptionPolicy: 咫橫³赤£
      priority: 1908962750
      priorityClassName: IozrUiO5aF
      resourceClaims:
      - name: 9F4BZ7
        source:
          resourceClaimName: Xi99i
          resourceClaimTemplateName: qYBXv7vgX
      restartPolicy: mn©ɗĭtǳp/菕J~ó=ǦƜ崑ɹ
      runtimeClassName: Hy
      schedulerName: iGkYIuitukSc
      schedulingGates:
      - name: 6bMwonn5
      - name: cdA50
      securityContext:
        fsGroup: 549293409168028100
        fsGroupChangePolicy: Always
        runAsGroup: 149530069440945380
        runAsNonRoot: true
        runAsUser: -7733942355662636000
        supplementalGroups:
        - -1702888372477800200
        - 9088690877236180000
        - 4815250443616439000
        sysctls:
        - name: AG4jfFyY
          value: C
      serviceAccountName: uXc
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: KIrzXPX
      terminationGracePeriodSeconds: 748025904004594300
      tolerations:
      - effect: W
        key: gIbOc
        operator: 8戭X墘
        tolerationSeconds: -324497504774729900
        value: rMHpw3dV
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: eC6qVOtUe
            operator: ȵ铯恢"ɛ塑稁ǧɌ(务繤ŀɎ幃Ȍ愗ĳ
            values:
            - 12S7AP
            - FcS
          - key: R
            operator: Ȥķ瀱l展ʨp遂@聜銚偘燖Đɯ
            values:
            - JFgA
            - ""
            - lrLHv8
          - key: f3O
            operator: ""
            values:
            - 6VRfde
            - ""
            - eBwYR
          matchLabels:
            lUKdod8ocrz: pAm
            ssS: agAmqmY
        matchLabelKeys:
        - L1wK5ak
        maxSkew: -1622516497
        minDomains: -560845306
        nodeAffinityPolicy: ŽV0賠#吳Ť焜N
        nodeTaintsPolicy: 桵ÖűVG 堫š陨
        topologyKey: iKqwWyz
        whenUnsatisfiable: 嘫`拈噒 嶝
      - labelSelector:
          matchExpressions:
          - key: VfS
            operator: ǒG?捾
            values:
            - qt9n5hh
          - key: oTjx0BGx
            operator: ƈxŪ擡熪MƺɌ伴B3v}摟´B}Ě>
          matchLabels:
            Mgg9aWK: bg
            SxX1: boiP
            v5zAQyQ1: VPHVucu
        maxSkew: -118728404
        minDomains: 653946276
        nodeAffinityPolicy: 櫋MĆ»敂ę+槖O9媯ȵY閐ɩ
        nodeTaintsPolicy: ı§Ƃi4Ã
        topologyKey: bst2
        whenUnsatisfiable: 謄菴桊°ŻÎʢþAg*[
      - labelSelector:
          matchLabels:
            HJ6Q: "9"
            qNEL: 8naHd
            qj2B: LQ7
        matchLabelKeys:
        - 0B40
        - ukp7wB2
        maxSkew: 495541948
        minDomains: 1472201829
        nodeAffinityPolicy: L8岀¸秿Źʕũ
        nodeTaintsPolicy: V
        topologyKey: UXd5TFx5U
        whenUnsatisfiable: Ɋʆ彸qɑ漾9毲穻 õ<ƣ^"Ĥ
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: anjrvNnG
      - name: w
      - name: y8U2FY2
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: dgtMSpw
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-039.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: Uf5i2FYm
    health:
      healthProbeBindAddress: FwG
    kind: 5HAJrdEh
    leaderElection:
      leaderElect: true
      resourceName: bD4EKsHTEP
    metrics:
      bindAddress: ogGdTWj
    webhook:
      port: 153
kind: ConfigMap
metadata:
  annotations:
    kSC: ZSJ
  creationTimestamp: null
  labels:
    ZPcQPMKo: 8du
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "4"
    app.kubernetes.io/version: v2.3.8-24.3.6
    chNK6Zz: 5Ii
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: n9s9M-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kSC: ZSJ
  creationTimestamp: null
  labels:
    ZPcQPMKo: 8du
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "4"
    app.kubernetes.io/version: v2.3.8-24.3.6
    chNK6Zz: 5Ii
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: n9s9M-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: "4"
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kSC: ZSJ
  creationTimestamp: null
  labels:
    ZPcQPMKo: 8du
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "4"
    app.kubernetes.io/version: v2.3.8-24.3.6
    chNK6Zz: 5Ii
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: n9s9M
  namespace: default
spec:
  replicas: -1073260928
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: "4"
  strategy:
    rollingUpdate:
      maxSurge: 16520252
      maxUnavailable: 1601923532
    type: '*ñDBȹȆ=鶫=:S(a_'
  template:
    metadata:
      annotations:
        SvFP: 986w
        h: YGsQd8JJ5
        nWH: jAiX6oRC
        qeyHynV: XYh
      creationTimestamp: null
      labels:
        CCOM8: YXWu
        T3dW: hL1iR
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: "4"
    spec:
      activeDeadlineSeconds: 9094660533002612000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: oQ
                  operator: ʏē£tN狖ȠEǏɵ
                  values:
                  - 0wDeDy
                - key: jz0
                  operator: Ń胹CM杌}筼鋢0Nv痱ȅ-ģ
                  values:
                  - r9f
                - key: dRf
                  operator: 蕡S9帼Ƶ.萫`
                  values:
                  - 18v1yOSEIKRL
                  - lEaxowe
                  - iToE
                matchLabels:
                  DmnH7h0Q: 9jqQAC
                  q8V9k: Uy6c8
              matchLabelKeys:
              - I
              mismatchLabelKeys:
              - MHn
              - bFg
              - DsNcqV
              namespaceSelector:
                matchExpressions:
                - key: 1Lo6KX
                  operator: ʓÑGǇ毪MǇǒ蛺2
                  values:
                  - VwKhYqxC
                  - GhQSh
                - key: bYK85
                  operator: '@7''ɷ昮貒樓ʜóǇ励'
              namespaces:
              - KdtSVMO
              - LAZQ
              - yYIJ
              topologyKey: RLkeP
            weight: 97631015
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "8"
                  operator: ɋ}7[K壳ƧŮȿx ś逵ƅ
                  values:
                  - ""
                  - YmviHD
              matchLabelKeys:
              - i
              - Qb
              - xqbuKcACcH
              mismatchLabelKeys:
              - nh4
              - 8KYrGw
              - twd
              namespaceSelector:
                matchExpressions:
                - key: oD3l
                  operator: k
                - key: U
                  operator: 蓜踩險
                  values:
                  - MTydnSrP
                  - KSCeZhBvoQp
                  - 3U
                - key: dCY9SNL
                  operator: 欧ï婓洳鿝
                  values:
                  - j2dBke3
                matchLabels:
                  GvyAB: Ll7
                  iTUAICRw: QMEL
                  ujmhj: YvEcrp
              namespaces:
              - 40kE1rx
              - yvx
              - IYxCc
              topologyKey: bqFqFM6
            weight: 671353099
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: YoGDq
                operator: ʀZxb溇Ǭ9韆赗ǨZ$ī
                values:
                - JKV
              - key: PYZ62XSO
                operator: ƢNɒ猖ʤ鹘
                values:
                - ""
                - N0gjVZK
              - key: eGB
                operator: 芐œȏȩɍ峦xɐ悈傿ÈĆ
              matchLabels:
                Bd1Qov: OU
                CYRJ7N: aLBCx
                U5e0RWo: I25
            mismatchLabelKeys:
            - a
            - ""
            - LKL
            namespaceSelector:
              matchLabels:
                6p: 7jZV8CS6oF4hq
            namespaces:
            - ush5M92P6
            - fX8E
            topologyKey: PQ0sX
          - labelSelector:
              matchLabels:
                4esz: qUjyBpn
                Or: BlVjbOo
                qsko: InsWb
            matchLabelKeys:
            - x7Tn
            - j851
            namespaceSelector:
              matchExpressions:
              - key: wwArLRTh6
                operator: 锾
            namespaces:
            - bwgDA5
            topologyKey: x0OnRz
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: uI0QK
                operator: ""
                values:
                - Dr4YQNBkGV
              - key: 6Ge
                operator: ƃKk
            matchLabelKeys:
            - ZzH7
            - Yh
            mismatchLabelKeys:
            - 7O
            - dwhnHV
            - P
            namespaceSelector:
              matchExpressions:
              - key: melMw2
                operator: ""
                values:
                - nwRA172K
            namespaces:
            - GlhLC3
            topologyKey: wAqQGDcS
          - labelSelector:
              matchExpressions:
              - key: Txy
                operator: 炆Ȭɻ
                values:
                - 7Cb8xYGEbt
                - gy7yUJJb
                - GHwWv
              - key: V7uhcb
                operator: ɬ逞Ǌj嘺ɼ[Ȳ鞁Ǔ]Ƴ矒
                values:
                - Cc
                - nrw
                - WdB
              matchLabels:
                TjvJ: TYjT
                iqz7: ""
                uS7: zuQmxIrr
            matchLabelKeys:
            - 1Rn8uClR1m
            - nH1
            - GSlcG
            mismatchLabelKeys:
            - 1AP9aqXtgM
            namespaceSelector:
              matchExpressions:
              - key: PSZX5kh2
                operator: Ħį疻Ł詊[Z璎
                values:
                - BKzx9B
                - bxuxCjmU3
                - 40Jd9
              matchLabels:
                Dapj3H5H: 2lT
                KtjpiW: QVz5
                i2qgTbX: 6TpD
            namespaces:
            - lhAY
            topologyKey: Mq
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=
        - JFs
        - nNwqWRT
        - ScYwDYt
        command:
        - /manager
        env: []
        image: h:95V5Gm
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 462
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 702
          periodSeconds: 45
          successThreshold: 922
          terminationGracePeriodSeconds: 272
          timeoutSeconds: 324
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 902
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 800
          periodSeconds: 924
          successThreshold: 78
          terminationGracePeriodSeconds: 731
          timeoutSeconds: 97
        resources:
          limits:
            cpu: "639"
            memory: "100"
          requests:
            cpu: "607"
            memory: "462"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        searches:
        - 1M9d
        - ccg
        - K8U
      dnsPolicy: ?掿~儓髤ńƅǙǟ璍集彗ȃQƏ!
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - g3hU5
        - 60OmY
        - 6nM
        ip: 0uSBO
      - hostnames:
        - RkcCRmH
        - d4aj
        - 5yemLpNkv
        ip: NkeTCJ
      - hostnames:
        - Bx6dB
        ip: NyW6uH
      hostIPC: true
      hostNetwork: true
      hostUsers: false
      hostname: DErH4
      imagePullSecrets:
      - name: KmDljL
      - name: cJ2n
      initContainers: []
      nodeName: tWp
      nodeSelector:
        5JLdWw5: I
        Bg6pN0ViTM: gLtqR
        L2teX: zjC
      preemptionPolicy: ""
      priority: -1810648038
      priorityClassName: 8L8
      readinessGates:
      - conditionType: 鰄愳JhǕ饁枪
      resourceClaims:
      - name: MAqE
        source:
          resourceClaimName: FSyb0
          resourceClaimTemplateName: 0A
      restartPolicy: 哬ĩQYč.餺爒璛<磨ǆ璝|ſþŎ鼭罔
      runtimeClassName: TzUN1J
      schedulerName: KP6R
      schedulingGates:
      - name: kS4M9
      - name: nHMZnD
      - name: 1cM
      securityContext:
        fsGroup: 4524591162068226600
        fsGroupChangePolicy: Always
        runAsGroup: 9053675502780789000
        runAsNonRoot: false
        runAsUser: 2482349962653319700
        supplementalGroups:
        - -1464877308109779200
        - -4104680386084361700
      serviceAccountName: 7A7LfLVaSgL
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: XPWf
      terminationGracePeriodSeconds: -5124946022502445000
      tolerations:
      - effect: $
        key: fb
        operator: -趽d:ʧ|橍 妿{贻
        tolerationSeconds: 27395074208985584
        value: SqBpohLGB
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: f9tKRk
            operator: 痳ÿ籋t玄
          - key: o
            operator: 窧òÇY篂
            values:
            - l
        matchLabelKeys:
        - Wf00sxS706
        - G6eXtZX
        - Gw
        maxSkew: -328139720
        minDomains: 1800306710
        nodeAffinityPolicy: ņm饉Eɶ辽ű蟞®s烶"骅啯妍Ȃµ柋裩
        nodeTaintsPolicy: <鯷ȫɜ橼,Fʄ8<殤ǊĆ伻ʤ
        topologyKey: O9NaFa
        whenUnsatisfiable: 缌睩氜栢ʦ是Ǉ廬茞^Žȟ塖
      volumes:
      - name: A2B8
      - name: G
      - name: ZtPPBy
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 1s
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-040.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    qKwD7uKV1jG8: 91mmo
  creationTimestamp: null
  labels:
    Vs8tyk3nrH: X
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kam5
    app.kubernetes.io/version: v2.3.8-24.3.6
    c1ch6r: sk7vUnRJ
    helm.sh/chart: operator-v2.3.8-24.3.6
    o7: kFLRHJ8kS
  name: rPim
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: KaSxMh4aS
    health:
      healthProbeBindAddress: 0Xm69MBn7OZ
    kind: cx6BfL
    leaderElection:
      leaderElect: false
      resourceName: zb8Y
    metrics:
      bindAddress: IY8
    webhook:
      port: 151
kind: ConfigMap
metadata:
  annotations:
    b: QMv9sM6xG
  creationTimestamp: null
  labels:
    Vs8tyk3nrH: X
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kam5
    app.kubernetes.io/version: v2.3.8-24.3.6
    c1ch6r: sk7vUnRJ
    helm.sh/chart: operator-v2.3.8-24.3.6
    o7: kFLRHJ8kS
  name: t08KC6rLj4Z-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    b: QMv9sM6xG
  creationTimestamp: null
  labels:
    Vs8tyk3nrH: X
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kam5
    app.kubernetes.io/version: v2.3.8-24.3.6
    c1ch6r: sk7vUnRJ
    helm.sh/chart: operator-v2.3.8-24.3.6
    o7: kFLRHJ8kS
  name: t08KC6rLj4Z-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: kam5
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    b: QMv9sM6xG
  creationTimestamp: null
  labels:
    Vs8tyk3nrH: X
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kam5
    app.kubernetes.io/version: v2.3.8-24.3.6
    c1ch6r: sk7vUnRJ
    helm.sh/chart: operator-v2.3.8-24.3.6
    o7: kFLRHJ8kS
  name: t08KC6rLj4Z
  namespace: default
spec:
  replicas: 216786617
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: kam5
  strategy:
    rollingUpdate:
      maxSurge: 1636012556
      maxUnavailable: 1075603656
    type: ' VL龶ƔZ鞝ɹƥ桃炧ƪ帯渋ɦĵæı'
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: kam5
    spec:
      activeDeadlineSeconds: 251435796122521860
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: mvuO1qg
                operator: Ë韔ĵ嫑淴ʡƛ籂úʋ吞v娝
                values:
                - NKc4mZ6t
                - O7a5gdp
                - k7X6es4ud
              - key: lNP1vX
                operator: ½桢ĿǔBP蜋¾ȃfɢh緽:礞
              matchFields:
              - key: BvQzVP
                operator: ɳ禽əe榇蘋UĂ誮
                values:
                - UUKYLfEL
              - key: d4
                operator: ƜQOƽ
              - key: 6hWVN
                operator: 读?旵
                values:
                - oF2bgNp
                - 9y1QpF
            weight: 942247031
          - preference:
              matchExpressions:
              - key: ArG
                operator: 鸇吰緀橎h/阼p@V沂W兆ƕ犺þ鲲
              - key: ShuPKe52Md
                operator: «n蕉ǆʭ贼W}ʩ
              - key: D6PAsnP
                operator: ǹiB嘚糘>瀬Q曂ƕǟ
                values:
                - izE
                - hQJ7qgq1v
                - eq4QH4
              matchFields:
              - key: BKm2WHTR
                operator: =Zƹ娤詓[敓Ĩǎ搚k]ƫ夓
                values:
                - G82g
                - oJCdgIVx
              - key: A798q
                operator: tŉ8ȅ»^Ʒ
                values:
                - i
                - 3OMO
                - T
            weight: 1001113333
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: 5TpATc
                operator: iP籡,瘂ɚ
                values:
                - v0DasK
                - Vs
              - key: "y"
                operator: ""
              - key: sY
                operator: c.í拊Ǆ4
                values:
                - NxiSfmPJm
                - SGIo
              matchFields:
              - key: cxanC
                operator: L镇-謸眵
              - key: M0iif
                operator: gʓÃvʠZ琙ćO园ǒWY攬P
                values:
                - DtKGnVs2HOB
                - 8IqfI8
        podAffinity: {}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: ql7
                operator: 詸o烂牵MĊǸDȢQŬÓ
            mismatchLabelKeys:
            - ebR
            - R2P29a0
            namespaceSelector:
              matchExpressions:
              - key: 99v4d0
                operator: b鮻e権乍ʦ
                values:
                - ARoVD
                - NU3qFeEGH
              - key: IYZ
                operator: 褰硺鰛ŏƺʋ
                values:
                - tOp
                - Q5L94evoH
              matchLabels:
                P5tV: UNH
                kCLm: RBZoDi
            namespaces:
            - 5r78oGv2
            - 1is3xw9
            topologyKey: ily
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=yGdn
        - krIILz
        - "5"
        - cS
        command:
        - /manager
        env: []
        image: OjO:YHoj
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 531
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 583
          periodSeconds: 222
          successThreshold: 252
          terminationGracePeriodSeconds: 837
          timeoutSeconds: 909
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 749
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 517
          periodSeconds: 24
          successThreshold: 394
          terminationGracePeriodSeconds: 195
          timeoutSeconds: 927
        resources:
          limits:
            cpu: "827"
            memory: "740"
          requests:
            cpu: "180"
            memory: "721"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        nameservers:
        - 1n
        - C5ma
        - lcQh
        options:
        - name: xZXnM
          value: ""
        - name: OjsT1tQR01v
          value: Hi0
        - name: 9og9
          value: 8y
        searches:
        - EBCv
        - OERh
        - XyrGhIZJun
      dnsPolicy: 1ƌƐʁ嶖ǜ9
      enableServiceLinks: true
      ephemeralContainers: null
      hostIPC: true
      hostUsers: false
      hostname: SIJz
      imagePullSecrets:
      - name: SYrN
      - name: 62nXDB4y
      initContainers: []
      nodeName: rEgnkwIW
      nodeSelector:
        CUxb: fEK
        JoPel: b8xxB
        MaACPDUKyp: k4fAtIR
      preemptionPolicy: ʝ[ɰKǖđ»xŎT襡ğ暶W磂
      priority: 1256576650
      priorityClassName: 6vL
      readinessGates:
      - conditionType: ûqǩsɳnH繚JƑ5驌ýx¦nYǪU
      resourceClaims:
      - name: cVAU48a9
        source:
          resourceClaimName: z0F6m
          resourceClaimTemplateName: wuLKh
      - name: e4r
        source:
          resourceClaimName: i3SyEa
          resourceClaimTemplateName: kWYnXIy
      restartPolicy: Ǔ阾´葚阛C[愴ð邛龒=
      runtimeClassName: fwxnLh
      schedulerName: J
      schedulingGates:
      - name: amoH
      - name: 6N
      securityContext:
        fsGroup: -3303406895627459600
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -1458003432895942100
        runAsNonRoot: true
        runAsUser: -5536728191982958000
        supplementalGroups:
        - -4522827934488287000
        - 3586674186732541000
        - -8562529629626633000
        sysctls:
        - name: 7Vxd8P
          value: noP2jX
        - name: X
          value: Q6yMaZdR
      serviceAccountName: Ml
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: Wue
      terminationGracePeriodSeconds: 6277362132289052000
      tolerations:
      - effect: 粞b<觿愻NɢǷ賡¦:Ƨ聒
        key: BoAOCj1
        tolerationSeconds: 7651949633204226000
        value: oR
      - effect: 煸¥n
        key: xZUZ9oX
        operator: Éƨ伸1K舝
        tolerationSeconds: 8454353132979107000
        value: GseJ
      - effect: 鍗ɐ.y恼h瑄
        key: fCbg
        operator: 欄.EßȈ骁
        tolerationSeconds: -3695161036555460600
        value: WgeZzwA
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: AAtLJGf
      - name: vCIXV
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    b: QMv9sM6xG
  creationTimestamp: null
  labels:
    Vs8tyk3nrH: X
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kam5
    app.kubernetes.io/version: v2.3.8-24.3.6
    c1ch6r: sk7vUnRJ
    helm.sh/chart: operator-v2.3.8-24.3.6
    o7: kFLRHJ8kS
  name: t08KC6rLj4Z-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      Vs8tyk3nrH: X
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kam5
      app.kubernetes.io/version: v2.3.8-24.3.6
      c1ch6r: sk7vUnRJ
      helm.sh/chart: operator-v2.3.8-24.3.6
      o7: kFLRHJ8kS
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: rPim
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-041.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: eYU
    health:
      healthProbeBindAddress: z
    kind: RSErp4X
    leaderElection:
      leaderElect: true
      resourceName: Z1mNhQH
    metrics:
      bindAddress: LT
    webhook:
      port: 434
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA-additional-controllers
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - nodes
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dLmCJ99UDA
subjects:
- kind: ServiceAccount
  name: ttC
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA-additional-controllers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dLmCJ99UDA-additional-controllers
subjects:
- kind: ServiceAccount
  name: ttC
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA-additional-controllers
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dLmCJ99UDA-election-role
subjects:
- kind: ServiceAccount
  name: ttC
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dLmCJ99UDA
subjects:
- kind: ServiceAccount
  name: ttC
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA-additional-controllers
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dLmCJ99UDA-additional-controllers
subjects:
- kind: ServiceAccount
  name: ttC
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: ATIdy9
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA
  namespace: default
spec:
  replicas: 539215686
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: ATIdy9
  strategy:
    rollingUpdate:
      maxSurge: 584533562
      maxUnavailable: 287449819
    type: ðfƛ湉
  template:
    metadata:
      annotations:
        UnIG3mv: Kz
        nZr8PzgXXzU: xt2TI
      creationTimestamp: null
      labels:
        JzJGu: JCV5O
        LTu: vl
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: ATIdy9
        "n": c9
        u7bSOm: cC8sDS8
    spec:
      activeDeadlineSeconds: 343223886725035200
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: HSFMdumsq
                operator: Ĕ寋½I伋ɦŢ`帚:憸ʡ+Ǽ
                values:
                - ""
                - iOoBM0
              - key: b1BDK
                operator: /Kè菴莄傮ɠ惾ƈE
                values:
                - 4JviXX
                - JsC
            weight: -1075886949
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: JZZIrRZMyZMe
                operator: ļ炙啤Aɢ無
                values:
                - FvkW67BnRq
              - key: qmG
                operator: 喳ʯ剧ƕ忸-zÙǟ%>
                values:
                - j2R3M
                - hMEU
                - 5UaS
              matchFields:
              - key: ILxOcPKQ
                operator: +鹊ÒÇ^ʩȩɇȬɁăű
                values:
                - 7U
                - h1gvP
              - key: 00ypQ
                operator: 潴ǳ惁ē敧Ûȩ#
                values:
                - ""
              - key: pI87LE
                operator: 权槣ǜɢǪ\{ƶ熫ǈ狈ʎ
            - matchExpressions:
              - key: 8WYuwNs
                operator: 糑'Ț黣nI媘ǩK浲隐泹9
                values:
                - 0DcE4oN
                - fwa
                - 9Cc447gm
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: AVC
                  operator: 傡N臃炌睯掣+扜ȋȇ历Ěģsȇ
                - key: qmxKSA2
                  operator: j
                  values:
                  - dpt4JF
                - key: 4VUME
                  operator: P=踯讃nɦ
                  values:
                  - ng7UhGY
                  - HrCHhobTgn1l
                  - 4vn
                matchLabels:
                  "": l8T
                  HHLld: O
                  cnrqr: P8nZli9
              matchLabelKeys:
              - f0bH4
              - jWB7g6
              - L0r8L
              namespaceSelector:
                matchLabels:
                  GeFFWOnlvR: oEDoq
              topologyKey: mHDqv
            weight: -2078847718
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: VG
                  operator: 睙梍
                  values:
                  - UFcFApg
                  - 0HHY5m
                  - 6F
                - key: j
                  operator: ñ珙Ƙ耨įU
                  values:
                  - EarXI2s6
                - key: SmhxyDwjQ
                  operator: ""
                  values:
                  - ""
                  - QlnRAN
                  - rV
                matchLabels:
                  BdL3yNDHg: jKrhvg
                  jRg: kQ
                  mu0og6: Hu4
              matchLabelKeys:
              - Qti
              - CB2uQGGTdU
              mismatchLabelKeys:
              - TKB
              namespaceSelector:
                matchExpressions:
                - key: PyY
                  operator: 粴
                matchLabels:
                  a7wOI: VHEKkT
                  zkP: 6FrE1Q
              namespaces:
              - wEcnOtMRSR9
              - VXad
              - x
              topologyKey: a3RwL
            weight: 8935598
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: su1
                  operator: Ɇɷȣ碧嬞.諭ʭȍiǦ粊ň$ʚ
                  values:
                  - Su6wIC4
                  - Y0siGq
                - key: LI9ex
                  operator: 筳陌ýW儬+憕贂6<椯Ǻ
                  values:
                  - ""
                - key: 4Q8H
                  operator: ʨ瑗ijʬ!%芉aʣvŮ]
                  values:
                  - CfbCs
                  - ""
                  - zwmrT
                matchLabels:
                  qSGApnD4ip: mQdXTr
              matchLabelKeys:
              - AyIO
              - sM1DxqhXiP
              - XCKUbBe
              mismatchLabelKeys:
              - g
              namespaceSelector: {}
              namespaces:
              - LP5r4ThY
              topologyKey: Lcw0hO1
            weight: 1038634642
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: MZ
                  operator: w纹埩闺4匭玄薙Ɍ6追µ]ɿȞɇÆ貵煘
                  values:
                  - N1a1
                - key: Oga3
                  operator: ʭyÝĉž
                  values:
                  - xFemY
                  - KYTuaak
                  - ""
              mismatchLabelKeys:
              - ""
              - wqAGL
              namespaceSelector:
                matchLabels:
                  ISGu: iQbRzEDFp
                  lACmJKu: ZVjdv13
              namespaces:
              - qbcq
              - dBhT
              - KOlh
              topologyKey: ""
            weight: -1045387182
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: OPg6ir
                operator: f0]o;t
              - key: yMp
                operator: 儦è侜鸫篞ă
                values:
                - rVktV
              matchLabels:
                ThjprgQnQ: OHK3C
            mismatchLabelKeys:
            - JKPVG0NSVz
            - PUeMFvo
            - 3lSo
            namespaceSelector:
              matchExpressions:
              - key: 57Z3C
                operator: _ƿ騅6Ë紼o將n矌/iĮ州阤ÄǠÊ
                values:
                - Qr78do8c
            namespaces:
            - slTFoFbSw
            - HCKCKD3T
            topologyKey: i
          - labelSelector:
              matchLabels:
                21CTLF: LYAus
                RlnML: ""
            matchLabelKeys:
            - CvT
            - oCw
            - pVA37X
            namespaceSelector:
              matchExpressions:
              - key: Jca
                operator: 閁ǜVc~(胿Ư
                values:
                - vmfMfrEWhRX
              matchLabels:
                qa: BkHd
            namespaces:
            - V6Bg0bes
            - FH
            - ""
            topologyKey: GUQi4
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=K
        - jq37e
        command:
        - /manager
        env: []
        image: Olq:X
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 798
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 312
          periodSeconds: 14
          successThreshold: 170
          terminationGracePeriodSeconds: 596
          timeoutSeconds: 148
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 845
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 71
          periodSeconds: 217
          successThreshold: 397
          terminationGracePeriodSeconds: 816
          timeoutSeconds: 444
        resources:
          limits:
            cpu: "325"
            memory: "235"
          requests:
            cpu: "369"
            memory: "494"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        nameservers:
        - "34"
        - 2GXfHq
        searches:
        - ""
        - ""
      dnsPolicy: Z管ʯȋ厘ʒĸ趃H爠[
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - q
        ip: "4"
      hostUsers: true
      hostname: jMB
      imagePullSecrets:
      - name: aXkh
      - name: 4ud6kgVwv
      initContainers: []
      nodeName: okmdY
      nodeSelector:
        Ya: nenKzfYu
        hTzjlT: 6endG97tJ
        nPRTz: YDua
        swBkpYQ: Ot9
      preemptionPolicy: 緀ǋ/搜Aʢy尿ĿJ
      priority: -876807169
      priorityClassName: stxrwOkC
      readinessGates:
      - conditionType: ɛ产'夹渳uk/屋ɦ(
      - conditionType: 螊j
      restartPolicy: ǒ綧Ǉ(¤閹孊ǚ0磩婀谊笰1$屘
      runtimeClassName: gNJ
      schedulerName: 2Zi
      schedulingGates:
      - name: L
      securityContext:
        fsGroup: 5651385294292094000
        fsGroupChangePolicy: Always
        runAsGroup: -945106715671247200
        runAsNonRoot: false
        runAsUser: -8924625094629118000
        supplementalGroups:
        - -625871999789495000
        - 5073997621943202000
        - -2582129587677231600
        sysctls:
        - name: by
          value: tDkLnEzq
      serviceAccountName: yNv
      setHostnameAsFQDN: false
      subdomain: 6Ke2TY3
      terminationGracePeriodSeconds: 7674869702488048000
      tolerations:
      - effect: 裥Ǐ[byP罝ș迚!Ȱ
        key: ao
        operator: ŕ瓹ƖbƟvŃ3"ť'嶮õ§苰f5顗
        tolerationSeconds: 3452689405398166000
        value: uC3s
      volumes: []
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    5M5X: Fi
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ATIdy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dLmCJ99UDA-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      5M5X: Fi
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ATIdy9
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: ttC
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-042.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: qwcbM
    health:
      healthProbeBindAddress: 9eBm
    kind: GTUKBoasPTOjg
    leaderElection:
      leaderElect: false
      resourceName: PnSDJ
    metrics:
      bindAddress: H7lNfCTp2mq
    webhook:
      port: 344
kind: ConfigMap
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf-additional-controllers
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - nodes
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: I5FRf
subjects:
- kind: ServiceAccount
  name: jPVwE
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf-additional-controllers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: I5FRf-additional-controllers
subjects:
- kind: ServiceAccount
  name: jPVwE
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf-additional-controllers
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: I5FRf-election-role
subjects:
- kind: ServiceAccount
  name: jPVwE
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: I5FRf
subjects:
- kind: ServiceAccount
  name: jPVwE
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf-additional-controllers
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: I5FRf-additional-controllers
subjects:
- kind: ServiceAccount
  name: jPVwE
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: A
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf
  namespace: default
spec:
  replicas: 549278956
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: A
  strategy:
    rollingUpdate:
      maxSurge: 1689383301
      maxUnavailable: 1098097625
    type: ćʅbUɗ敏斎Ī迊ĊD7剏Ĺɸ
  template:
    metadata:
      annotations:
        5cGuav: aM5RZ
      creationTimestamp: null
      labels:
        A6HkU3mb: xwSfZ
        EIfXnY: AexS
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: A
        dvR: Nckdy
        rnqNVm: xIG2K0M
    spec:
      activeDeadlineSeconds: 6872421515153581000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: 4ZFHy
                operator: '%o低誥ǌĈĥ錴嬧ɛǌȆ較'
              - key: AMl
                operator: )ŉ馼
                values:
                - BvcW9Ja7
              matchFields:
              - key: DfbH1Awc0QT
                operator: dF
            weight: 909331927
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: t6
                operator: G爿4fŉɧʡ!ɏìüj辵螴厧yȅ
                values:
                - T
                - ZH
              - key: tXVIKk
                operator: ;浕ȢÒ
                values:
                - RTT6Nm4zhCN
                - 9HLOidlES
              - key: I7UL2
                operator: ""
              matchFields:
              - key: Lr8
                operator: ɺ撚Ĭɂʎs
                values:
                - OIVd5OS
                - Qc6g
                - 1XIc
            - matchExpressions:
              - key: ggTWeRK
                operator: ȍɽ呛Ɔw鿀Qɷʣǟ
                values:
                - da5pVG3t
                - E4u
              - key: K5n
                operator: kóAǇň
                values:
                - ce3mv
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: zg
                  operator: vɦ
                  values:
                  - w
                  - 5owH4f
                - key: WdAjIF9p
                  operator: ñɰ鮢ƹĉ熤L揫亙Hʃ?Ǧ聯
                  values:
                  - KJg3Q
                  - Hw0N
                  - Mnb8ROAovg
                - key: E16qfI
                  operator: 寋惷
                  values:
                  - mdy3dY43
                  - bxX43oZ
                matchLabels:
                  1iHzWVY: Jd
                  3Bee1lG2: CIIlv3
                  pRg9FY: Eer
              matchLabelKeys:
              - ecr192mw
              - 0u
              mismatchLabelKeys:
              - 6JFMRW2
              - Hzjd
              namespaceSelector:
                matchExpressions:
                - key: SRey
                  operator: MÇå/吹`ó樞Cǅ`&O
                  values:
                  - tA4e
                  - JRzD0WRo
                - key: kYddD
                  operator: ǟ珉澶N®;喙悞ɬ梈
                  values:
                  - rJdy6
                  - i8tLPusJ
                  - SE7d
              namespaces:
              - fpnECS
              - rg0U77aT
              topologyKey: rqPrJwS9xipmY
            weight: 656669195
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: zKxUjqeNkMHtHa
                operator: ƖfDÔđ駧鹏ȡ瓃Å鿶~砬7璒Ȼùđ/
              - key: 2UC6G3flN
                operator: ǨBĤ頍ȉSʀ
                values:
                - idmpoggw
                - jMM
                - iK41t0
              - key: XBjviy
                operator: 媿敺ɼw*鷠忴NdTʋł銃剧hŭ拟卹橒
                values:
                - P3r
              matchLabels:
                vAH6rHN: bgcsCU
            matchLabelKeys:
            - t21PZsV
            mismatchLabelKeys:
            - Sr2N8
            namespaceSelector:
              matchLabels:
                "": 4PInDY
                h8wrsqi: glrI
            namespaces:
            - 7OR8
            - Ybh1w
            - TRbSPCklhjK
            topologyKey: O2ba
          - labelSelector:
              matchExpressions:
              - key: J4vV
                operator: ZXu]癃È沍*撼ʎDa
                values:
                - "13"
                - y5BjZIb
                - cY0Vo
              - key: fG4HuQ
                operator: ʌƊ{
              - key: seowVkne
                operator: ƫŰTʊ>
              matchLabels:
                Tf8Bxx: sIePnH
                ubqHQp: ""
            matchLabelKeys:
            - cOI
            - wdrXqVaY
            - Cokj
            mismatchLabelKeys:
            - x4
            - ""
            namespaceSelector:
              matchExpressions:
              - key: hTL
                operator: '>zƝQJ弹婭帨戭f択'
                values:
                - Pum
              matchLabels:
                4Up: jnembUf
                Ce0b4sh8VvJ: 6MaNR4J68uc
                factQ: 7VNNAK
            topologyKey: SjPGY
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: HZi
                  operator: TiŎș8´c¿ʨÏ\ȩ\Ȁ麼娜宪
                  values:
                  - Dk4HRW
                matchLabels:
                  9EclKqI74rL: wRb
                  D3Chh: ""
                  H4BwLJG: dJ
              mismatchLabelKeys:
              - 5Td8
              - fnltz0d
              namespaceSelector:
                matchExpressions:
                - key: TwBLu8
                  operator: ;换埜!髣Cğ]ƴ縁ĕ潣!糠玚
                  values:
                  - ia2n6Y0WV
                  - 6EM
                  - 7p
                - key: XvT
                  operator: ©碁縆U珧ʯɯ牜Ȧfz0咤
                  values:
                  - i
                - key: mq
                  operator: ""
                matchLabels:
                  wWdY6: YCW9
              namespaces:
              - "80"
              - 1Lnh
              - KJ
              topologyKey: BJ6p
            weight: -1960666384
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: WQRVg5
                  operator: 桍p拈Ŀy[y鈙叢辌
                  values:
                  - G
                  - efNF
                  - ppPSVkQ
                - key: CyVE
                  operator: ""
                  values:
                  - 1NN31
                - key: PXGeD2
                  operator: ""
                  values:
                  - xxtkSlE
                  - r
                  - jOM4Q
                matchLabels:
                  V: wQC
                  tN: iVigc
              mismatchLabelKeys:
              - 0hsMtHDM
              - yriC
              namespaceSelector:
                matchExpressions:
                - key: cIn7tzt
                  operator: ""
                  values:
                  - xu1
                  - 4q
                  - JAZo
                - key: 0z5h
                  operator: Ʈ+痘鍽ŖƊÂqɿ+
                  values:
                  - fWmt
                  - tHbTK1pl9u5
              namespaces:
              - AvrT3
              topologyKey: 0mQMyp
            weight: -1370107543
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: 2xa
                operator: TK-/ƨ鷡Ȭ裻欟ǞpʊųɁ
              - key: oREhN
                operator: .yɻ篻抰鈩Kȩ~2
                values:
                - yRDRk4
                - fXJYF2M0
                - R1pJKNnzRiym
              - key: 1HO
                operator: ""
              matchLabels:
                hWS: RBXk
                s7: ""
                y14u7ee8: ""
            matchLabelKeys:
            - Opbacm
            - up61Mphtb
            mismatchLabelKeys:
            - gq
            namespaceSelector:
              matchLabels:
                JX: Y4oR
                v75: MTQc
            namespaces:
            - ""
            - GCYcSMd
            - "2"
            topologyKey: K
          - labelSelector:
              matchExpressions:
              - key: 9mIVwt
                operator: ǅâȿíeUJÙ慿萡捽ʌ潠u^
              matchLabels:
                Nbcf: siQdU
                Z: WdJ8PN
                mKTc8MGq: A
            matchLabelKeys:
            - mJGM
            mismatchLabelKeys:
            - C7
            - 2fvYt7
            namespaceSelector:
              matchExpressions:
              - key: k
                operator: Ĉö&侳
                values:
                - hlPa
                - BEwx
                - OGJL
              matchLabels:
                6dD2x: Buuv
                9cS: KI
                w: fh05lkL
            namespaces:
            - h
            - KtB
            topologyKey: yC4Y9szbtyRH
          - labelSelector:
              matchExpressions:
              - key: FSfWPk
                operator: 麧
              - key: Zi
                operator: '}ǜŬ鉗ɶɍ顗NǼƉ#闑(:唳Ugȗ'
                values:
                - ynwTLHe
                - RBM
                - CRQ1
              matchLabels:
                bkLT4Tkln7XX: w
                zPt1f: gU73eYOAjg
            namespaceSelector:
              matchExpressions:
              - key: QmKsO1UKEa
                operator: )驻ƹ擖涹ė8ǭ煛¶諝
              matchLabels:
                Rxd1p0n: y52tozGuZ
                UUS: CSnIZGq
                b5: JQCe
            topologyKey: xg
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=10rTK
        - Fpr
        - bQ4Xdn
        command:
        - /manager
        env: []
        image: VX7rtbd:VPI
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 953
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 551
          periodSeconds: 111
          successThreshold: 958
          terminationGracePeriodSeconds: 17
          timeoutSeconds: 938
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 178
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 903
          periodSeconds: 491
          successThreshold: 68
          terminationGracePeriodSeconds: 105
          timeoutSeconds: 698
        resources:
          limits:
            cpu: "896"
            memory: "477"
          requests:
            cpu: "411"
            memory: "65"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        nameservers:
        - g9
        options:
        - name: D0xhMfcPbv
          value: n4
        - name: wq
          value: N5vx
        - name: GxY
          value: Q5sm
        searches:
        - Nsx
        - omRlK395
        - O4e7Oi9QaO
      dnsPolicy: łÏxÚ7焹ìūűȊvɁ
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - ip: DDMbcJE
      hostIPC: true
      hostNetwork: true
      hostPID: true
      hostUsers: true
      hostname: cw
      imagePullSecrets:
      - name: Ji32eCG
      initContainers: []
      nodeName: 8xm5qy
      nodeSelector:
        KIjke3ItE: UFkX6
        P7WsBHi: CuuJsnyAKkT0x
        ikazX: nALV
        lrER1v7: TA
      preemptionPolicy: E懁闩/ňś
      priority: 703159166
      priorityClassName: Mgn1EG
      readinessGates:
      - conditionType: _
      - conditionType: $熷h2瑿赏灗vȗqUŝƲf覑鸂=h咴
      - conditionType: Ŀ
      restartPolicy: ǒ锔%>ǆ醬 ɆƔ×ȕ;yÃN幣BƂw
      runtimeClassName: pcE
      schedulerName: bFrK85
      securityContext:
        fsGroup: 2980526123398523400
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 1717253414127171600
        runAsNonRoot: false
        runAsUser: -2542658499850500600
        supplementalGroups:
        - 8611476070349896000
        - -2096030859437496800
        - 57930524811109340
        sysctls:
        - name: F3B
          value: T86Cac
      serviceAccountName: rrpOv
      setHostnameAsFQDN: false
      subdomain: Mni
      terminationGracePeriodSeconds: 6911531097165868000
      tolerations:
      - effect: )娝Ì盭.¢ɷƲƔđNIʙ爰嶘Kɑ纏ɠ
        key: EQDLsOTb
        operator: 鳪²Ň踁鈷śQC ~ʕ膹
        tolerationSeconds: 261600404303321120
        value: 9voI
      - effect: \ǌ,ʡ檄龉}啈嬚沝m
        key: iwpjbTD
        operator: ES|øąȵ蒒OǪtZȓ霸笭U蛫ŦǱ
        tolerationSeconds: 8951817649970730000
        value: tTOkjI
      - effect: ĕKªbƓƙAȸ鬮Z,湢eF驆
        key: 1BCP
        operator: Ʌ45ʤǽ伀ɻǄK`伴#3脐5
        tolerationSeconds: -6963744936651421000
        value: qpG
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: zfq9YSwZ7zP
            operator: '''ņ5Ɗg舅怌ɯ覲ʅ坸櫾+ĉ沤Ś闀+'
            values:
            - RIZuQ
          matchLabels:
            1ndv7BA: 9fKQa
            l15kkLH: I4VRP6HUUi
            yCdGsa1aQ: vDdtd
        maxSkew: -158618891
        minDomains: -190913918
        nodeAffinityPolicy: 嬦蜱腊D鰺忪洉ņǾ畍x!ƾ8t
        nodeTaintsPolicy: aɏ癒0MsʘD牻[Ŭ跱ľƕ伱
        topologyKey: hzSQ6
        whenUnsatisfiable: 播sś梇垫幵ȮE}<蘄P珶a鸨枰æ0(
      - labelSelector:
          matchExpressions:
          - key: G
            operator: 觮1:$Ǣ§Į犓
            values:
            - MLGzE1lw
            - 0E
          - key: 5mblb
            operator: 赒爧"诗臗磭ĳ農
            values:
            - pBB9Q
            - Edx54
            - zaU
          matchLabels:
            Anv: p3VxU
        matchLabelKeys:
        - o27dE
        maxSkew: -1846977581
        minDomains: -1845114183
        nodeAffinityPolicy: LŽŗƄ梏包hɜ^ȅU资銝śM狃狔6
        nodeTaintsPolicy: 溰"鯮倁6
        topologyKey: D
        whenUnsatisfiable: 紒_尘LɼO槆
      volumes:
      - name: noEL0
      - name: v
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    j: cfo02
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: A
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    vAU3IVb: K0a
    x: c
  name: I5FRf-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: A
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
      vAU3IVb: K0a
      x: c
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: jPVwE
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-043.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    PMp9J: ObRXDGAb
    Z0EUj9: 9nCl
  creationTimestamp: null
  labels:
    JSQeek3: yjWsGmb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Kha
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: VPQGI1R
    health:
      healthProbeBindAddress: vAjfZRDH
    kind: Rkv
    leaderElection:
      leaderElect: true
      resourceName: F4TBMLVmSO
    metrics:
      bindAddress: vskNAaGG
    webhook:
      port: 411
kind: ConfigMap
metadata:
  annotations:
    MqMu: Z751YFdX
    jK4Tz: nRtRZ9
  creationTimestamp: null
  labels:
    JSQeek3: yjWsGmb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 3Xj6U-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    MqMu: Z751YFdX
    jK4Tz: nRtRZ9
  creationTimestamp: null
  labels:
    JSQeek3: yjWsGmb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 3Xj6U-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: operator
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    MqMu: Z751YFdX
    jK4Tz: nRtRZ9
  creationTimestamp: null
  labels:
    JSQeek3: yjWsGmb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 3Xj6U
  namespace: default
spec:
  replicas: 602892202
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: operator
  strategy:
    rollingUpdate:
      maxSurge: 1254637227
      maxUnavailable: 1181960699
    type: ƴ旾皧ư¸5浢ȶʧ廥RÍƔ
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        LAJ: qbyZ
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: operator
        qgpZEn: tSA
    spec:
      activeDeadlineSeconds: 8122815581103249000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: QFA9
                  operator: V乯衉>:Ó韈Rƴ扫Ȧ鉴9.ǯ
                  values:
                  - IYjKm1G
                  - "N"
                - key: 7C
                  operator: ¢ʓĈ嚗ɉ
                  values:
                  - s2mkuOpFFV
                  - PACPko5E
                  - rgdqj6pU0Inh
                - key: J4
                  operator: á
                  values:
                  - E
                matchLabels:
                  CS2kjF: KchW
                  pUSJC2a: sJheWOAo
                  xy: 1w3MKNN7
              matchLabelKeys:
              - qRbX
              - ZeggQf
              mismatchLabelKeys:
              - n97uA
              - hg4J0bG4
              - lYX
              namespaceSelector:
                matchExpressions:
                - key: C1wCSxIG
                  operator: À惚
                  values:
                  - 4fTqzN
                  - bDaABZFS
                  - K6KpN6
                - key: I
                  operator: 獯渉亹糉
                  values:
                  - HcB
                  - tvZ
                - key: iRexk6dySuY0
                  operator: 0>
                  values:
                  - bVe
              topologyKey: lOxekkaX
            weight: 1165570909
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: rgZ
                operator: =fɼ齨Ăǉ(
                values:
                - y34T
                - jU
              matchLabels:
                ihMjREr: T
            matchLabelKeys:
            - nloa
            - ghiw
            - a4UE2VX
            mismatchLabelKeys:
            - kC1ibUKRH3G
            - J38D
            namespaceSelector:
              matchExpressions:
              - key: asNY
                operator: '*Ȥ'
                values:
                - aO
              - key: pG9kE7iM
                operator: <蚬緄栮0
                values:
                - Zu
                - cKEm1S
                - jmF8Fy3TX
              matchLabels:
                0S0sOoL: WJ
                HoF8N: GuarN0Tk
            namespaces:
            - mPyaOX
            - ""
            topologyKey: S4Uou5cVA0X
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: vj9hQ
                  operator: ì<bưĪʫkÅú$閟ȜȄ5ʓ侚
                - key: yR
                  operator: 噔/溈Ȕ餢:薞Aȩ1ǒ趔
                  values:
                  - 4PJNuQ
                  - wvHR
                  - rbE
                - key: oGaR
                  operator: 圫鞕
                matchLabels:
                  WGH87IsIVoeG: dN
                  YuVJVT: Qc
              matchLabelKeys:
              - F3aqck
              mismatchLabelKeys:
              - xKeAq
              - zCvjckQ
              namespaceSelector: {}
              topologyKey: lPv
            weight: -1702528230
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: feJ
                  operator: t
                - key: pS
                  operator: 湴
                matchLabels:
                  HI5ktPhD: a1SQDS
                  Uuxu: pZAxA
              mismatchLabelKeys:
              - q
              namespaceSelector:
                matchExpressions:
                - key: rujB
                  operator: '#Ɖjſ*刳U/允'
                  values:
                  - 64B81
                  - zoYy
                - key: aL
                  operator: ǁ
                  values:
                  - v
                  - htQs0BAnc
                  - 3LvoGyKfX
                - key: F4GwAYGWx7
                  operator: ɡ%
                  values:
                  - lDS9f
                  - Ee
              namespaces:
              - ""
              - BhLqYB
              topologyKey: xUllvcX
            weight: 1453314335
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: IAjTO
                  operator: ʨ*³NȮĪ
                  values:
                  - jg4TYe
                  - plbH
                - key: USV
                  operator: ɫŇ虰z"Ȏd糟W'U樣
                  values:
                  - Kb
                  - ItfWTh
                  - ""
                matchLabels:
                  "": iJ
                  OhHUtFAA: jLGE
              mismatchLabelKeys:
              - TETAB
              - U6E2
              namespaceSelector:
                matchExpressions:
                - key: 5H4Z
                  operator: 竴攃ɗ姻
              namespaces:
              - yiMa
              topologyKey: "y"
            weight: 1910822951
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: eIb5SNoV
                operator: Ö濼謁sƬŷe{烔謷氀MĜ勊
                values:
                - QkPI
              matchLabels:
                VU049: Rorp
            matchLabelKeys:
            - 8ryd
            - 2Sv3Go
            namespaceSelector:
              matchExpressions:
              - key: qt4zDVfcv1M
                operator: 鑦HäĻ碁Oř唘jszɵu彎摣Ʒĭ
                values:
                - t5n
                - StXj
                - KNjg0K57
              - key: p
                operator: 'ǹ #藘{'
              - key: PsfTPYv
                operator: ȬŊǎ嫡讁ǽƂ陁DYÎżǔ
              matchLabels:
                "0": 8E
                KYqtfBe: Ok0nA
                StVaPFHeP: RxgX
            namespaces:
            - ABqXgFp
            - X0oi
            topologyKey: BzsO
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=D3sVjB0WumuG
        - J
        - k
        - VRWdl
        command:
        - /manager
        env: []
        image: 5SfzkB5M1vx:l0yDQ3G
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 74
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 990
          periodSeconds: 912
          successThreshold: 160
          terminationGracePeriodSeconds: 811
          timeoutSeconds: 476
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 230
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 804
          periodSeconds: 916
          successThreshold: 843
          terminationGracePeriodSeconds: 580
          timeoutSeconds: 497
        resources:
          limits:
            cpu: "861"
            memory: "661"
          requests:
            cpu: "384"
            memory: "965"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        nameservers:
        - Xm
        - E37UIu
        - rV5yhf
        options:
        - name: "99"
          value: shMTP
        - name: "Y"
          value: ""
        - name: 70Spp
          value: uof6
        searches:
        - tx19
        - xJo2beA
        - pNVFP7lF
      dnsPolicy: ÿvw7ǀ罃Rjō¨耥¨ɹy
      ephemeralContainers: null
      hostUsers: false
      hostname: 3Ai8
      imagePullSecrets:
      - name: q4fc
      initContainers: []
      nodeName: gUAJJj
      nodeSelector:
        0lToYN: k
        4f7: qeb6Y
        BJKxbsL: EfDQVC
        N0w: fLKdl
        Zuiy: E1KTdB
      preemptionPolicy: ǈ³壋ǀķ榒ńȀ`淛Gǁ剏ɟ眽/
      priority: -1125266446
      priorityClassName: bXhUvoV
      resourceClaims:
      - name: XF1vGoDG
        source:
          resourceClaimName: lnew63G
          resourceClaimTemplateName: w3zIH
      restartPolicy: 聏1fù%x驳嗭ʣ书慩ʧ濞re
      runtimeClassName: iQHa834L
      schedulerName: uw
      schedulingGates:
      - name: A
      - name: ""
      - name: HHxPxJ2iB
      securityContext:
        fsGroup: 7853553256834582000
        fsGroupChangePolicy: Always
        runAsGroup: 3194592838098393600
        runAsNonRoot: false
        runAsUser: -7852088851716734000
        supplementalGroups:
        - 7785795388449790000
        - 8982362548962840000
        sysctls:
        - name: 4eNB
          value: 2FE4S7
        - name: CYf9C
          value: "2"
      serviceAccountName: U23EWlk8o
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: I9j
      terminationGracePeriodSeconds: 3295314272577011000
      tolerations:
      - effect: k·谗bǤM驞º2~R竡氹ɭ#隬ɤȏƤ
        key: Gy75w
        operator: Ȇ鈅Xȿ舘蒜同Ahɞ謽«¬ǹb
        tolerationSeconds: 5869534363035133000
        value: pdI
      - effect: nÃĕ
        key: Wu
        tolerationSeconds: 9004911171915272000
        value: 1jz8L
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: qoxFmDb4
            operator: A9ņ§橭^NǗİ紐!.寓ʕY蜤zĞ
            values:
            - 0sX8cegHkY
          - key: "65"
            operator: 6~C籷ɪO
            values:
            - 3b
            - Up00
            - qHqYUNS2
          matchLabels:
            0gSX: e1
            6aaa: CxDriKBo
            r: f5wsmqy
        matchLabelKeys:
        - BiQZF
        - qkIqN
        maxSkew: -678056172
        minDomains: -468801039
        nodeAffinityPolicy: 瑝Q岻ĉ贀瀺Ư
        nodeTaintsPolicy: Nūɵ饬厎9)_
        topologyKey: knkpf
        whenUnsatisfiable: e
      - labelSelector:
          matchExpressions:
          - key: ""
            operator: ʄ½Íȼh§Ȼ滵^焃į
            values:
            - Qil
            - F
          matchLabels:
            SCEI6N: Fj8
            kwn: y3QvJ
            vATnQ: Go6gR
        matchLabelKeys:
        - 54WBS5Q0
        - de
        maxSkew: 1536594719
        minDomains: -1736587834
        nodeAffinityPolicy: XȫO#伔ǠX嬷m7/ĴX
        nodeTaintsPolicy: ȱwȣ瞓掁ɩ搻w徍ļ
        topologyKey: aeW7l
        whenUnsatisfiable: ǊI碑於;`FǍɗƗ
      - labelSelector:
          matchExpressions:
          - key: SO
            operator: yb鑘ć踺jƋȴ怞Ų
          matchLabels:
            Vkzj: g0XGHOVnX
            cucZINr: EBNKVLLPxm7
        matchLabelKeys:
        - 8C8u
        - O09
        - nAyt
        maxSkew: -1678657999
        minDomains: -304289986
        nodeAffinityPolicy: 訥钹r魪å谄廣3荬糡閇I(Àw訒
        nodeTaintsPolicy: 縿Î唞奅'²溰逓Ɵá骋h$ŝ燃惩j
        topologyKey: tZIrG9
        whenUnsatisfiable: 燨ȱK磽X砵YɊȅ斞Ľ
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: Did3
      - name: SvnDHs
      - name: ciwpJb
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: Kha
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-044.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: LnxQzO
    health:
      healthProbeBindAddress: gnm6
    kind: "0"
    leaderElection:
      leaderElect: false
      resourceName: YrO
    metrics:
      bindAddress: ""
    webhook:
      port: 30
kind: ConfigMap
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: Uu
subjects:
- kind: ServiceAccount
  name: 5rSJNtq
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Uu-election-role
subjects:
- kind: ServiceAccount
  name: 5rSJNtq
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Uu
subjects:
- kind: ServiceAccount
  name: 5rSJNtq
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Uu-rpk-bundle
subjects:
- kind: ServiceAccount
  name: 5rSJNtq
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 23c
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu
  namespace: default
spec:
  replicas: 1209638646
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 23c
  strategy:
    rollingUpdate:
      maxSurge: 155367976
      maxUnavailable: 770524833
    type: ÿǃ#鋣g殗ʫ2×#¡`ʟʨz1G
  template:
    metadata:
      annotations:
        "": Grjik
        B1QF: SQ
        OMEr6: C1knmAAyQCXpcDf
        mC: 4hfJ23hb7r
      creationTimestamp: null
      labels:
        "": tFD9
        1RuLd: wJ1AXL4ze
        S6sckJa: ""
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 23c
        z: xHaG
    spec:
      activeDeadlineSeconds: 3165258512367659500
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: TRp
                operator: ""
                values:
                - 184Uj2
                - 8dM0A
              - key: ""
                operator: 鶚,ɫɵAƠɪ垲矽z
                values:
                - 1KXrfXkp
              matchFields:
              - key: "93"
                operator: 瑑ćCȉ
            weight: 809956849
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: 6og1X
                operator: 多­荊想橜籁认È,ŷ婣鮙\棴鋖濎¬ʇ
                values:
                - 0jRFHb3s5ei
                - BTC6Afikqi
              - key: Z4Yl
                operator: ɖN%v0ŉƕ椸ɖţ
              - key: B
                operator: ;颇蹳xɈ`嘁
                values:
                - eh4W5REd
                - bRM
                - UV
              matchFields:
              - key: ZEh
                operator: +n弃Ǘ\逃鰊Ȼ狀)èŋm琱
                values:
                - qQ6yWzy
                - m47olf77F
              - key: Fr
                operator: 歃)ĩÙº畊ɸ钖伡m?n讂Ǖ
                values:
                - 9cG2NJV
            - matchExpressions:
              - key: g1A39W4y39
                operator: ʥ捆
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: Vnx9Rn4
                  operator: Ő鲅m
                  values:
                  - I
                  - gg2ia
                  - L
                - key: mNOEg
                  operator: c鸺|類氌v鈄Q
                - key: Tu
                  operator: ȧƛŷ6\薀匶駔Å
                  values:
                  - 135D
                  - KKGbZ
                matchLabels:
                  CLq: NaN
                  QIthxS: ""
              matchLabelKeys:
              - 65P
              - oR
              - x
              mismatchLabelKeys:
              - ecxdEFCstL
              namespaceSelector: {}
              namespaces:
              - 5JSbj
              topologyKey: OJwzrVa6
            weight: 692148083
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: ejEz
                operator: 积辍N¼訆
                values:
                - yqvEc
              - key: OelUVJgsY
                operator: į線Ì
                values:
                - VirQ
                - c
              - key: Cm0ufCnFE9W
                operator: 摒("輸ńŁƬ彖ɟ%M晠ʚ妧ǁǾȵ誌媰
                values:
                - SvQ3
            matchLabelKeys:
            - iW
            - NtDAmh5v9
            mismatchLabelKeys:
            - Y4
            namespaceSelector:
              matchExpressions:
              - key: zy0l
                operator: :y鱻ý捒凬篗;噲Ú
              - key: LWbO6EhrE
                operator: Ɩ沰煐ŖÈì靑鎦炴 蟃Îj
                values:
                - xA9Df5W
                - 9Jm648nEUhbI
              - key: mSc84ZZP6
                operator: 笘谒苃ɮv娹ƞßɯÚʨv龴/ȩ饮摁楷
                values:
                - 5h
            namespaces:
            - I58
            topologyKey: FKH
          - labelSelector:
              matchExpressions:
              - key: 6yg
                operator: Ó::撲鰡ƍʝ"旤<},俶
              - key: X
                operator: ʈĕxǙ[ȖT犙nȳʃ饺瓸ɽ壵.X`@
                values:
                - JvKbV
              - key: LNZA
                operator: ŵ
              matchLabels:
                JO: IQ0
                SrdlZr: lrjJ7
                eL6WdPUY: Eyx3JmBVFr
            mismatchLabelKeys:
            - CMnb35E
            namespaceSelector:
              matchExpressions:
              - key: ""
                operator: '[ȕP塘Ħ嶶掓ɨ-w³-Oǔ'
              matchLabels:
                ASW: nmRLr
                EZCp: z9BRhMd
                xm1s: FRoSa
            namespaces:
            - uvmLNeiG
            - iR
            topologyKey: PSmU0Mme
          - labelSelector:
              matchLabels:
                5L265Ag2E: ""
                spAOu: p8W
            matchLabelKeys:
            - a1CrkObRdybAF
            mismatchLabelKeys:
            - ht
            - GEByb
            namespaceSelector:
              matchExpressions:
              - key: G40LQJDXtKr
                operator: Ùƙ#铵.#ʑ潨Ėŝ
                values:
                - b
              matchLabels:
                gBt0BxO: gSO
            namespaces:
            - dNeEaKW
            - 6yeV
            - Pyjtu2
            topologyKey: M8r3l8Bii
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  A4Cx1maa: k63E9Q
                  JR: tid1Vpng
                  qd6: tlc
              matchLabelKeys:
              - ""
              mismatchLabelKeys:
              - mNJ
              namespaceSelector:
                matchExpressions:
                - key: "7"
                  operator: 哦}ǕŲƦ攗^蒔&µ牧ŌZȒMh瑛硁ʭ
                matchLabels:
                  "": vxDjawP
                  8qdx7: "n"
                  IesIxy: WJawK
              namespaces:
              - yy
              - POrioQ
              topologyKey: ho
            weight: -769897408
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  T: a01QaJ
                  rf3rMd: GwIiKN
              matchLabelKeys:
              - jmtWeQa
              - 6gmkV5TH2
              mismatchLabelKeys:
              - hZzni
              - l7BEn
              - ""
              namespaceSelector:
                matchExpressions:
                - key: IkEw
                  operator: Ū#IQʖǵņXǜ闺b@憒,擙
                - key: oQYSMK2fP4n
                  operator: 繟e钘ƀǣ*N狀淅殧k+
                  values:
                  - PnV
                  - C9rk0r
                  - Q3eq6Ca
                - key: lxh9G8i
                  operator: 缓
              namespaces:
              - SLI9Hp
              - XgDnNd3u
              topologyKey: MMS9s
            weight: 909895950
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  "": KCjawf
                  dfOkCy2W: Oas
                  gdGiH0ekt7a: IPFk7MakB
              namespaceSelector:
                matchExpressions:
                - key: Y0wX5t6
                  operator: ×ȑ²ǕơG
                  values:
                  - SVr
                - key: h1FvdjxBXO
                  operator: 慶邓0ǥč,ɣ
                  values:
                  - kzgFo
                  - AAhQY
                  - yvWMuaA
                matchLabels:
                  0fkZJMQ: kNLvyrj
                  1qezu5S: mic
                  JMV5Ge9rdcu: 4zO0E
              topologyKey: JfWI
            weight: 1078042792
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: 0ZF28lTP5fq
                operator: ""
                values:
                - kq
                - cD
              - key: i
                operator: 霰7Ưɲ
              - key: EXfAfpkq
                operator: ɔǪéLU.香Ę+玍釯Ǝų
                values:
                - KtZp
                - CbH
              matchLabels:
                G9H: Z1HgSq
                cpc5cowD7: 2An
                vPqwAhkx: SxUYiJ
            matchLabelKeys:
            - QQb
            - Hs9kkqh
            namespaceSelector:
              matchLabels:
                PvaD: v
            namespaces:
            - 3RXr
            topologyKey: Lryyk1
          - labelSelector:
              matchExpressions:
              - key: OpmkkEyqyzUM
                operator: Sʯ1NT忦Ǟ廿麠恱晫Ý欯i粣駦ɓ餠婝
              - key: C793
                operator: '}庯i伺J舍邏h|徎灦;舼_ɡ譂'
                values:
                - "5"
              - key: AURpWhhY3Y
                operator: ""
                values:
                - k0GdW
                - 6Xqv
            matchLabelKeys:
            - CIT2bl
            - Ga
            namespaceSelector:
              matchLabels:
                5fXxxDxg0: 2rkVP
                Bw5: Zr
            namespaces:
            - vSv
            topologyKey: 3hPm09
          - labelSelector:
              matchExpressions:
              - key: 1JRkgo
                operator: 楡嚏b坋q¿GE騶尧ǜžɇŋ¨愗8
                values:
                - K5bWW
              - key: ""
                operator: 陿縌饈ȍ¢翨窉駐綺 b豫殁
                values:
                - AU0CQ
            matchLabelKeys:
            - j3
            - AUWfb7
            mismatchLabelKeys:
            - S00lJY
            namespaceSelector:
              matchExpressions:
              - key: "4"
                operator: 遛岮Bɜv鴷
              - key: xC
                operator: 詷m监邫
                values:
                - gQ6X7yCA
            namespaces:
            - QDCkdv4P4
            topologyKey: Xj2y161
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=
        command:
        - /manager
        env: []
        image: a7e7:QiVn05LHP7O
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 562
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 357
          periodSeconds: 107
          successThreshold: 581
          terminationGracePeriodSeconds: 405
          timeoutSeconds: 720
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 52
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 811
          periodSeconds: 451
          successThreshold: 493
          terminationGracePeriodSeconds: 633
          timeoutSeconds: 366
        resources:
          limits:
            cpu: "620"
            memory: "832"
          requests:
            cpu: "182"
            memory: "670"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        nameservers:
        - fjX4eE
        options:
        - name: 7xPi
          value: ql
        - name: wIKOfEGE5
          value: bomE
        searches:
        - 9bh
        - Edy7Sv
        - jFkg
      dnsPolicy: a篎,紗SʒƄȐ@ɦ佷ʂ
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - eTfk1jHv
        ip: BDiN
      hostIPC: true
      hostUsers: true
      hostname: fv
      imagePullSecrets:
      - name: deBnU
      - name: eE2yJ4fx
      - {}
      initContainers: []
      nodeName: 8GtD
      nodeSelector:
        "": Q
        e9aINtO8: 95eVNPL
      preemptionPolicy: )oņFî谟Ũ,¯´臙趑[A蟏
      priority: 761787384
      priorityClassName: R
      readinessGates:
      - conditionType: ɢzHůU熚Z袙鏸ǫ泆+偛
      - conditionType: ʙɇŏLb>R菝ǔ
      - conditionType: )ĥ
      resourceClaims:
      - name: zs0z
        source:
          resourceClaimName: p9zC
          resourceClaimTemplateName: uo
      - name: Uh
        source:
          resourceClaimName: atUvNnIAP
          resourceClaimTemplateName: B4
      - name: Cwm5
        source:
          resourceClaimName: oWkrFP
          resourceClaimTemplateName: cMl
      restartPolicy: 倀尶Eʂ»EvǣǕ"銏轻OÞʍ顃g^柚
      runtimeClassName: zfdSRp
      schedulerName: z
      schedulingGates:
      - name: QYXY
      - name: I
      securityContext:
        fsGroup: 6810058302486106000
        fsGroupChangePolicy: Always
        runAsGroup: -4632546854526170000
        runAsNonRoot: true
        runAsUser: 5327409515334876000
        supplementalGroups:
        - 3764293082951256000
        - 2051046491540931300
        - 5729763965168114000
      serviceAccountName: vDmiZ
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: SRdjniq7
      terminationGracePeriodSeconds: 7746510581024413000
      tolerations:
      - effect: xů~貈Y撍暾悝厯鲜酮´əí7ȉL
        key: Dx6JvLeW
        operator: 哇ÏĔv啼ɓ齋!渴祝6ƭzLȻ,摯+
        tolerationSeconds: -5860159725938606000
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: 4yar
            operator: 家狌V渮ʧANɸ郱娞H
            values:
            - Ha5v
            - T2Xw
          - key: wmVm
            operator: nY
          - key: MlTi
            operator: ËÁa渀易{!ÃÍɳƣŗƑ1ɱ漶獦fƣ
            values:
            - ""
            - DrV
          matchLabels:
            5G9tK0D6h: "27"
            d0S: abaz
        matchLabelKeys:
        - lvgl
        maxSkew: -219149065
        minDomains: -1853068091
        nodeAffinityPolicy: 擤Ǥ箱¼暿倮豳=Ǌţ埤ZMdȼY裔
        nodeTaintsPolicy: c狣候sŜ亭讜`p躭SƞO
        topologyKey: qCFaIX
        whenUnsatisfiable: ČHǱh%å
      - labelSelector:
          matchLabels:
            aTDLv8: D3s
            vjhtc1LP: o9Ge
        matchLabelKeys:
        - yGI
        - i3SbNrjwUfZ4
        maxSkew: -2032787523
        minDomains: 547987185
        nodeAffinityPolicy: X銛罇WȐ纾屰儭%ƛ@
        nodeTaintsPolicy: /?秕wO墏jlȝ隄兎鴗e3¸ʔƘlÇ
        topologyKey: lI9
        whenUnsatisfiable: ʀ?G纴$
      - labelSelector:
          matchExpressions:
          - key: RjAsRn7k2Hn
            operator: 0汰aʝș
            values:
            - 9zoyg
            - IRoGF
          - key: G7CN
            operator: '>gİ喴旬d榣锼杒ɾʞ'
          matchLabels:
            Bar7Nf: NSbIUdqe7
            VjF: 5p8x
        matchLabelKeys:
        - H2
        maxSkew: 1105402615
        minDomains: 123739480
        nodeAffinityPolicy: 邲Ý蕍Ȅ+ʩ缴T桰瓑_
        nodeTaintsPolicy: 挡&mć#Tǀ演Ô怞揙
        topologyKey: T4wz
        whenUnsatisfiable: Œ1
      volumes:
      - name: 7wEL0
      - name: EeMIH
      - name: iQoV
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    zdPL: 3ZqroY
  creationTimestamp: null
  labels:
    2Q3: 4eG3k4Q
    3iy: cFa
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 23c
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Uu-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      2Q3: 4eG3k4Q
      3iy: cFa
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: 23c
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 5rSJNtq
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-045.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    I6z: bgcjS
    MNMEwkPV: kzM36
  creationTimestamp: null
  labels:
    85G: Wn5f
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WgoV
    app.kubernetes.io/version: v2.3.8-24.3.6
    aqO3ub: Ai5ntG
    helm.sh/chart: operator-v2.3.8-24.3.6
    povH0tOlni: A
  name: 4X8m6P
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 6dSnL0
    health:
      healthProbeBindAddress: YzK
    kind: SfFaB
    leaderElection:
      leaderElect: false
      resourceName: Bsqi1dYsyB
    metrics:
      bindAddress: SdeHtyNx
    webhook:
      port: 273
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    85G: Wn5f
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WgoV
    app.kubernetes.io/version: v2.3.8-24.3.6
    aqO3ub: Ai5ntG
    helm.sh/chart: operator-v2.3.8-24.3.6
    povH0tOlni: A
  name: oyGLBa-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    85G: Wn5f
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WgoV
    app.kubernetes.io/version: v2.3.8-24.3.6
    aqO3ub: Ai5ntG
    helm.sh/chart: operator-v2.3.8-24.3.6
    povH0tOlni: A
  name: oyGLBa-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: WgoV
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    85G: Wn5f
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WgoV
    app.kubernetes.io/version: v2.3.8-24.3.6
    aqO3ub: Ai5ntG
    helm.sh/chart: operator-v2.3.8-24.3.6
    povH0tOlni: A
  name: oyGLBa
  namespace: default
spec:
  replicas: -1515947856
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: WgoV
  strategy:
    rollingUpdate:
      maxSurge: 1993687357
      maxUnavailable: 757517014
    type: Ɋ溑@ǆxű詹%ƀȵí楣槓范渃¶
  template:
    metadata:
      annotations:
        1cScccu1h: sLgh2HF3m
        E4ZGN8: T8TOnqMBR
      creationTimestamp: null
      labels:
        79hvt2: 28iW1
        Lkak: pKGcr
        T: H4QynactGw4
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: WgoV
    spec:
      activeDeadlineSeconds: 8517436021481636000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: 0O
                operator: 鶥ʧŷ袸粶Ƚ悊|úY櫶襄ɨ牚ƤƔ聍
                values:
                - OOmD
                - az0yMAah
                - JOK
              - key: q2
                operator: Ǫęŷŀ珣搐廒ÔälĽU慃-Ɔ恺+
                values:
                - yIY
                - jRVE
                - AwosxJOY
              matchFields:
              - key: GyT0dGW
                operator: 怌h机Ǖ瓋Ūxk&9wy還昖i鳃ǔ
                values:
                - DsPogS
                - R9gB
                - RIJl
            weight: -766748941
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: 8uvMjiWzBOQ
                  operator: EǮ8戬Ɇ
              mismatchLabelKeys:
              - Hp6PSgn
              - RniyheU
              - i
              namespaceSelector:
                matchExpressions:
                - key: 19LFz
                  operator: )騙BQ毺tĽ瑭髱ĭ嬫箵}窈胟倨UØ
                  values:
                  - rxluT
                  - RzP8AR
                  - lhiDXnx
                - key: psSVb
                  operator: ɷ畁ȒrL
                  values:
                  - GdwgPG
                - key: 1ek
                  operator: 嬳冈
                  values:
                  - SZ5Fye
                  - x83KbQOK
                  - O8pMP1V
              namespaces:
              - H
              - eU90s
              topologyKey: 5zdJ
            weight: 1160992652
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  "": qXdYU
              mismatchLabelKeys:
              - ""
              - zs
              - flicu
              namespaceSelector:
                matchExpressions:
                - key: gt
                  operator: ƉŤMĕz
                  values:
                  - Sd2TsQc
                  - Xl
                - key: BJ4V172F
                  operator: $
                - key: 7tYy8Ud
                  operator: ŀ鳼Ȥ歨轎w倉禍ǵ#ɝ
                  values:
                  - FJa3D1I
                  - s7Mvyt
              namespaces:
              - amOSuy
              topologyKey: pNLZLnwSv
            weight: 1465456140
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: F
                operator: ȩ灂ȼéȱr貴
                values:
                - QQI
                - HF4
              - key: OqYys1j8g
                operator: ƪ芮n
                values:
                - QlhDKhQ5v
                - KBh4ig8
                - fjV
              - key: LPTVNVCd
                operator: j脭`8燅c蹋箤(瘓à
                values:
                - hlrmr
              matchLabels:
                7N6FV: 7Hc
                f0: 8ssGzW
                m8dwrDdQI: ""
            namespaceSelector:
              matchExpressions:
              - key: WRys
                operator: 6Ź8
                values:
                - iV
                - qvSMb
              - key: 9Bpe0q
                operator: 駉j屍ɓ?ȯ!:v齮痔桜黚
              - key: ZNq7ak2
                operator: ǩ碈<
                values:
                - 4ZG
              matchLabels:
                0qSfKGhTN: 0JNv
                i4e3e: co7rR
            namespaces:
            - "1"
            - f4CR
            - pUEkTki
            topologyKey: X
          - labelSelector:
              matchExpressions:
              - key: bdiq
                operator: 蟨
              matchLabels:
                1jZJHLH9: wx
                KyT: bgLxSsl
                NvtPki5: ojLhlK
            matchLabelKeys:
            - nO
            - rG7BYxiHa7
            - 7cGar
            mismatchLabelKeys:
            - uCmBQg6Vs
            - Z8QQGLGHO
            namespaceSelector:
              matchExpressions:
              - key: NsHeHH
                operator: 祢腗蚗
                values:
                - AlA
                - xq0B5
                - 1ND
              - key: Dm5XrYF
                operator: '%ã肩ʫL样İğ'
              - key: xdF
                operator: Xd尕鿁]掍繛瓷&緈垙<ȩT
                values:
                - okAfu
                - vXtIJgVn
                - 24Hqw
              matchLabels:
                tXQm: JxUq
            topologyKey: VHrX6
          - labelSelector:
              matchExpressions:
              - key: rr9UE5yiv
                operator: 沸a)Ȥɘȗ*f虖>Ȉ\跘摃梡M1
              - key: jSSPM
                operator: 坨孀
              - key: CExbI
                operator: 鋺唱鱖Ú*
                values:
                - O
                - Vu
                - lgQ
              matchLabels:
                RX: mRN
            matchLabelKeys:
            - xFOyA6OD8
            - zmc
            mismatchLabelKeys:
            - 7ZMxa7okydGf
            - xAt12Lr
            namespaceSelector:
              matchExpressions:
              - key: Yq9fjxN8
                operator: 崊dʭʓ
                values:
                - ""
                - ""
                - k6pAQ
              matchLabels:
                Ax: 1c
            namespaces:
            - sN1S
            - BpRRtw
            topologyKey: QeF7HWto
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  qlNhu7K: ZRmvQy
              mismatchLabelKeys:
              - dArXnCa
              - FH
              - pGd15wlred
              namespaceSelector:
                matchExpressions:
                - key: tY
                  operator: 渶Ď[泣(蛏p縼蓂
                  values:
                  - VWw8
                  - NVso
                  - 0B27
                - key: 6mA
                  operator: 傈厇kĶ竓Ș趫祄昙嵥(j噲$陫窎
                  values:
                  - e6i62Q
                  - ""
              topologyKey: Xfi30Zca
            weight: 1975781303
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: VLjkGhf
                  operator: ""
                  values:
                  - YhLghmxw
                  - xuThL
                - key: B
                  operator: ť攇桡呟D颛訞Yzɾ冉t(幬f岥CZ
                  values:
                  - GMQupJ
                  - BJOurJ
                - key: wHF3y
                  operator: S
                  values:
                  - 3Mdt
                  - aBCk6J
              mismatchLabelKeys:
              - UlXD
              namespaceSelector:
                matchExpressions:
                - key: gXhZQJx4
                  operator: oǿ
                  values:
                  - VbrAa
                  - BwkxO
                - key: OaCAe8va5
                  operator: 驼Þ簿--ŮF)CĕctɮÄȊǦɐļe
                - key: P1HlUyRJ
                  operator: 賽!e\>ĺÿ璒ȆƳ濤ŃÐHG儚Zǘ椘
                  values:
                  - kRXLx
                  - jXS3fY
              topologyKey: pXtyl
            weight: -395468765
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  jCGF: nH
                  wz: mRZPcj
              matchLabelKeys:
              - FodjS0RYf
              - 2UxT3
              mismatchLabelKeys:
              - BAb
              - Fpu
              namespaceSelector: {}
              namespaces:
              - hl
              topologyKey: DT7d
            weight: -1720224527
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                YY8v: L
                f: JcpM1b
            namespaceSelector:
              matchLabels:
                0WihS: xl
                sZh: ld9ncR
                u: 1dM
            namespaces:
            - mqqAiz4gX
            - ""
            topologyKey: hl6IEOj
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=YQXlr
        - KeFi
        - dfONW9
        - 9znBOn
        command:
        - /manager
        env: []
        image: Nt:H
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 122
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 598
          periodSeconds: 192
          successThreshold: 163
          terminationGracePeriodSeconds: 602
          timeoutSeconds: 792
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 376
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 576
          periodSeconds: 929
          successThreshold: 628
          terminationGracePeriodSeconds: 234
          timeoutSeconds: 833
        resources:
          limits:
            cpu: "70"
            memory: "179"
          requests:
            cpu: "361"
            memory: "304"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        nameservers:
        - uu5wuW
        - Bol9J
        searches:
        - BVejU6FkQ
        - hti
        - UA
      dnsPolicy: )öǅ*厧ȣ}眭
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - 1CLOeowAxb
        - CxZs
        ip: eiUTF
      hostIPC: true
      hostNetwork: true
      hostPID: true
      hostUsers: true
      hostname: AeGl2y
      imagePullSecrets:
      - name: yhMJMJnb8
      - name: cgEZxLt
      initContainers: []
      nodeName: LLpUiEAZCZ
      nodeSelector:
        TLl0PZ6OTN: vkbv8W
        ZdErK: 6iw
        iUwg: Wu
      preemptionPolicy: 蠘Y¬ĺ忒"鶈j宬I岺<Ǌ韍銏~ȕ
      priority: 258864602
      priorityClassName: "N"
      restartPolicy: 輰爭'4鍽
      runtimeClassName: W
      schedulerName: iwfxQaVdWarPz
      securityContext:
        fsGroup: -2148455437780501000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 4397321133833196000
        runAsNonRoot: false
        runAsUser: 741314432643626500
        supplementalGroups:
        - -601783420272022700
        - 8053103445269503000
        - -3944851009563354600
        sysctls:
        - name: ""
          value: C7Usd
      serviceAccountName: 7Dq
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: S3
      terminationGracePeriodSeconds: -7320009787630770000
      tolerations:
      - effect: '&鏅ɷ1ɯĵ>r'
        key: nz
        operator: ɺǆċĐĳxɕ
        tolerationSeconds: -4015282094144227000
        value: YUCnlhz
      - effect: 塼
        key: B7pZHa
        operator: '!Ǎ?環Ȩ奠įȩəȚ,ɵ讞$<懒'
        tolerationSeconds: -74957164183154200
        value: 6M6E
      - key: t
        operator: z嗴z奈閶ąŨ卉椸ɫǢ\ũc`ƍƉ
        tolerationSeconds: 1380891834235558700
        value: 1Gyq
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: hFda
            operator: ŲtHƪG`ɥ枻殜õ6
          - key: vv3h0dGP1
            operator: 鐴ŀ?蔀ȿ嶮m襉
        matchLabelKeys:
        - fqGXSlw
        maxSkew: -1479045130
        minDomains: -1439264948
        nodeAffinityPolicy: ȷ%ȵƲc睊
        nodeTaintsPolicy: ʂ.Ĭ齭sȤé籔~ñ'k`Ȣɗ烐ɟėƹ
        topologyKey: CEXN
        whenUnsatisfiable: 夨屣鯞Ì蜿ÿ嘒J慯瀉Ƅǆ篨Q;
      - labelSelector:
          matchLabels:
            NnS6: OT8S6Cn4f
            aNLpsJD: BTSGW
            dajfmOJC: 2jrw0cOu
        maxSkew: 1099055978
        minDomains: 1592864027
        nodeAffinityPolicy: =-鲲q雷ʌ>Ç橕} V,
        nodeTaintsPolicy: '|åɥ#9甽¼ŝVZ'
        topologyKey: hb4mcC
        whenUnsatisfiable: /ɼɇâE
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: EbmP3
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 4X8m6P
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-046.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    uKiV: x73f
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 0tSU
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Wmx1ORHBT
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: zd
    health:
      healthProbeBindAddress: uyO
    kind: 5xDLZq
    leaderElection:
      leaderElect: false
      resourceName: WfnOlt
    metrics:
      bindAddress: 7H
    webhook:
      port: 256
kind: ConfigMap
metadata:
  annotations:
    5PCqmrcu: 9Mh2cYD
    7ioUdNK: ZfqZZ
    ka: lnxR4
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 0tSU
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kO-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    5PCqmrcu: 9Mh2cYD
    7ioUdNK: ZfqZZ
    ka: lnxR4
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 0tSU
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kO-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 0tSU
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    5PCqmrcu: 9Mh2cYD
    7ioUdNK: ZfqZZ
    ka: lnxR4
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 0tSU
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: kO
  namespace: default
spec:
  replicas: 1544247573
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 0tSU
  strategy:
    rollingUpdate:
      maxSurge: 1997166204
      maxUnavailable: 1274979507
    type: ^萀彼=ĎŉØ皙Îk!Ë婽甊t
  template:
    metadata:
      annotations:
        "4": z
        32D: xxW
      creationTimestamp: null
      labels:
        G: ""
        ZAHH: LAa
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 0tSU
        m2vh: oO5
        uY9r: vT
    spec:
      activeDeadlineSeconds: 7867988885961322000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: EBm0OWl
                operator: 沫ȤňĭĖ校¤?6r驕ȵRʢ潞饜
                values:
                - S4cLQgY
              - key: sCTFAdg
                operator: 疙Ȁȣ\鬹亁2讉ŏ/舴Mŕ熵
                values:
                - HG4QpF0
                - 0V8fa5AEhda2
                - hruUdDl
              - key: UjSH41
                operator: Ů\z[$)ĢǷ瞗ƥ廅退Ȁ輜崀ʬ
                values:
                - Oo52C
                - ""
              matchFields:
              - key: oY
                operator: ɶmƽư
                values:
                - myfWkL
                - BWE9sBVy
              - key: AzGq
                operator: 瀇廓bľ嘹>如a襤殪櫕ȉ岯ŭ
                values:
                - SYsJeo
            weight: 132079138
          - preference:
              matchExpressions:
              - key: Ufd
                operator: VĵƣÎ钕ċ
              - key: 03Z
                operator: Ǭɱò圦劮,2凷]}=icű枾
                values:
                - 6aEkz
                - g
                - 8ZjMt
              - key: ""
                operator: ſȭpP籼ĵ紬癝r糘轔ƪ4祹狫酃鐺FJ
                values:
                - BGV7q
                - jRq
                - RDP
            weight: 1820515791
          - preference:
              matchExpressions:
              - key: myIMD
                operator: e檎鮓菅輨,餙娌uǱ])
                values:
                - wh
                - qWF
              - key: 8p
                operator: ǔW凛
                values:
                - Bl1GI1
                - HL3vm
                - Z8V0QG
              matchFields:
              - key: WaxY80
                operator: ŝǁő鏪ƽɇe7?隧×
                values:
                - jcVXe
            weight: -1898189568
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: rDAprk
                operator: bo»t鵞Ƈ噼&qKƬ}甼Ō晏
                values:
                - m7JIapRHROvtI
                - 18d
              matchFields:
              - key: wFjOx
                operator: 5廈k猃w}漄胎ŶǮ唻蒫婈
              - key: QAGmuJVyKO
                operator: .梸T铘ʆ愂踋"欛逍Ʃ+ƽ栃噤瑖]
                values:
                - M7Leap
                - p2NqUfPV
                - FCag
            - matchExpressions:
              - key: udITb
                operator: 監呣礝+n与鑕醥ȅ
              - key: sk4O9J7cQ
                operator: 9"遽Ǵ輱ļI5ʘȤ
                values:
                - Mq
                - I
            - matchExpressions:
              - key: Z2xbNz8p
                operator: '"WCȰĳɍ綻玟夑Ƙ鸍ń'
                values:
                - Ug1UmNiXuz0
              - key: x
                operator: Hɻ0ĩ mʒäĬ6枵ǎ^Hɭ鄈
              - key: UV
                operator: lŶ耯^穟7Úȹ
                values:
                - lAk8S
                - tO0
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: ""
                operator: 煴ÿ戥霪gĿ 嚜_攄Gņ樧爊ʂ墋Ƹ絥
                values:
                - GHJP8Igv
                - SDXg
              - key: 5N
                operator: ^S>ŢS枥Cƣ
                values:
                - qbpuhVEI
                - i4Q4A
                - RDwvkFcBvQ
            matchLabelKeys:
            - og7qAhNC
            - "5e20"
            - bEX
            mismatchLabelKeys:
            - o
            namespaceSelector:
              matchExpressions:
              - key: XyijfaQ
                operator: ""
                values:
                - G3nFB5
                - a
              matchLabels:
                mxuSXpI0k4: seiahuvm4L
            namespaces:
            - XQ
            topologyKey: 3oq9eC
          - labelSelector:
              matchLabels:
                "": ""
                cXVby5hPwzPn: P6RAP
            matchLabelKeys:
            - v5eoGst8Hr
            - Xj0Nc
            - Ihw
            namespaceSelector: {}
            namespaces:
            - CGm3YgV
            topologyKey: HHPI
          - labelSelector:
              matchExpressions:
              - key: utfqZ
                operator: 髓Ȥ礁K{絗&ǩ!
                values:
                - Wxx2rK6o2
              matchLabels:
                hN: UaT5N
            matchLabelKeys:
            - j
            - MnyZgn
            - UKzSg
            mismatchLabelKeys:
            - wI
            - eXzzW
            - 4j
            namespaceSelector:
              matchLabels:
                IeMGidnmo9B: YDlPq
                bg: 9cIn5Ks
                oupUqZeV: gzujQsGP
            namespaces:
            - cPfJ
            - yuXuqa4X
            topologyKey: Cjufs1
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                L: VP85h6f
                Qu2W7dr: 8ucp3d
            matchLabelKeys:
            - ulYtMY
            - i2lqCh
            mismatchLabelKeys:
            - sffvIzro
            namespaceSelector:
              matchLabels:
                MIc1oN: 4U
                jwXjp: OG
                t: z
            topologyKey: vE
          - labelSelector:
              matchExpressions:
              - key: xt8
                operator: 忟朤qƍĮCZ甠ƣ
                values:
                - 8DGjvW
                - oFw
                - vXZL7uR
              - key: vHxM
                operator: ɳƑ$迗湵菑S:Ȝ鉡'
                values:
                - gDstcfI
              - key: NqEX
                operator: ħ膰#!b'!鿼ɤ塪鶞+>Ȱ
                values:
                - jT7ab
                - owLaAs
              matchLabels:
                7dyEycCK6F: Ztaj6abb
                V: 4Zh83hs
                VKb: LCJK
            matchLabelKeys:
            - C
            namespaceSelector:
              matchLabels:
                0ncmeEqz: hCLQVxX
                bkdGD1B: A0zLz
                e8O4P: Mq6K414H5n
            namespaces:
            - YY7H
            - Iz
            - xyEH
            topologyKey: n28JY
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=TwQtVGrOeJf
        command:
        - /manager
        env: []
        image: MRDUBfo4:go
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 590
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 662
          periodSeconds: 137
          successThreshold: 971
          terminationGracePeriodSeconds: 814
          timeoutSeconds: 640
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 718
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 320
          periodSeconds: 745
          successThreshold: 714
          terminationGracePeriodSeconds: 610
          timeoutSeconds: 345
        resources:
          limits:
            cpu: "1"
            memory: "427"
          requests:
            cpu: "108"
            memory: "560"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        nameservers:
        - MlS
        searches:
        - 7ddU
        - eAY3
      dnsPolicy: 咧嘳
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - k9SgM2Y
        - 8NB1
        ip: hjmC4gcl2
      - hostnames:
        - Ic3
        ip: wJMhEo9e
      - hostnames:
        - Efc8FX
        - oV3GlgAF
        ip: ZsRszsDK
      hostIPC: true
      hostNetwork: true
      hostPID: true
      hostUsers: true
      hostname: DaO
      imagePullSecrets:
      - name: ggPp
      - name: ORs
      initContainers: []
      nodeName: XnaQGp
      nodeSelector:
        8Xhhvc: QeJV
        G: 4oZHp
      preemptionPolicy: ?ʚȹ欦DcYǰ;[LhÕ?長Ǫ凣
      priority: 431927033
      priorityClassName: 6C98
      readinessGates:
      - conditionType: 散4畲T媧q裾浸
      resourceClaims:
      - name: 6S9WJH2
        source:
          resourceClaimName: aNL
          resourceClaimTemplateName: BwUfdJHni
      - name: hALKj9sZ
        source:
          resourceClaimName: 9OEwKRMp
          resourceClaimTemplateName: UGZtX
      restartPolicy: ɊÝ,û~iƂ
      runtimeClassName: AQss2
      schedulerName: U728d
      schedulingGates:
      - name: AbeA6
      securityContext:
        fsGroup: 5860725421596689000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -6792494876590631000
        runAsNonRoot: false
        runAsUser: 3376299592244123600
        supplementalGroups:
        - 1010093601451592800
        - -5028736228493234000
        - 1947408406497262000
        sysctls:
        - name: "500"
          value: D
        - name: n5Op
          value: 3o3
      serviceAccountName: gA2BiKxgw
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: LxuMm
      terminationGracePeriodSeconds: 3482153433229272000
      tolerations:
      - effect: ÿǓȻ\浮从铏ŀ牰
        key: Tm3Fr
        operator: 抄
        tolerationSeconds: -186331534445053250
        value: "7"
      - effect: ƐŦǀ竓挾
        key: gy
        tolerationSeconds: 4883906869684912000
        value: jIxNJO
      - effect: 邈Ž鍞砎撑Ȓ櫵選7歺ƻ偫Öɺ奘Ŝį
        key: lu7PaAvSZD
        operator: 唡団ɢ9煪-ƴǽ堎ȵ+勾Ɣ咯ɉɪț,翭
        tolerationSeconds: -6189008985546581000
        value: gSexIRiNQoyW
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            1lZGp: q
            L: y9
            Nlj5: TN2o
        matchLabelKeys:
        - xquV
        maxSkew: 1561733678
        minDomains: -1000334657
        nodeAffinityPolicy: 囖Ʉʫ香==戔Lúw
        nodeTaintsPolicy: ǇôzRįĳ癮Ŗž黕
        topologyKey: "91"
        whenUnsatisfiable: ɜ妒ʢĲ嶇习>Ǌ>ä
      - labelSelector: {}
        matchLabelKeys:
        - Q
        - bmTYzW
        maxSkew: -1940779004
        minDomains: 589570672
        nodeAffinityPolicy: 鐂瓀UȮǂƔ
        nodeTaintsPolicy: 眝g攠+菕Ɠ%#Ƒj亼ŉ荭淓舥
        topologyKey: jAIPAdyB6Pi
        whenUnsatisfiable: Z.鳉ȃ靃z'
      - labelSelector: {}
        matchLabelKeys:
        - kZIVnYJog
        - rF1bA
        - Gljl
        maxSkew: 1700406858
        minDomains: 1941371014
        nodeAffinityPolicy: 顐Oʌ枚P`鴱Ǿ¡b画[丏
        nodeTaintsPolicy: 傮UÚ媵ʏ泮ȝ皱ĻȡƩǪ0FŃ彩筹
        topologyKey: V
        whenUnsatisfiable: 旔8>Ǡ&z+}睂筢´È-ʗǋ'
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: Wmx1ORHBT
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-047.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: PBU
    health:
      healthProbeBindAddress: BUZg6I
    kind: Wh
    leaderElection:
      leaderElect: true
      resourceName: fj4jpKo
    metrics:
      bindAddress: GX
    webhook:
      port: 430
kind: ConfigMap
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d-additional-controllers
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - nodes
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oL1SSfzH9d
subjects:
- kind: ServiceAccount
  name: i7DA
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d-additional-controllers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oL1SSfzH9d-additional-controllers
subjects:
- kind: ServiceAccount
  name: i7DA
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d-additional-controllers
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: oL1SSfzH9d-election-role
subjects:
- kind: ServiceAccount
  name: i7DA
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: oL1SSfzH9d
subjects:
- kind: ServiceAccount
  name: i7DA
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d-additional-controllers
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: oL1SSfzH9d-additional-controllers
subjects:
- kind: ServiceAccount
  name: i7DA
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: kF
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    Ko0pmEw: 59Cu
    Q: 3fQgP
  creationTimestamp: null
  labels:
    5ga: L6kCMw6j
    NImdN7q5tNW: UPT
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oL1SSfzH9d
  namespace: default
spec:
  replicas: 1441832588
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: kF
  strategy:
    rollingUpdate:
      maxSurge: 1051307328
      maxUnavailable: 1045370553
    type: ɶ柢£?
  template:
    metadata:
      annotations:
        EmRu: Cn59
        fz7c: 4sdKfo2FSqT3
        kar: ""
        yP57wD: jIUAEX
      creationTimestamp: null
      labels:
        In: ZiPrGmN75Tu
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: kF
        iEwo: Ft
        pRkD9: 47qmsTI
    spec:
      activeDeadlineSeconds: -4123803089407925000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: uNe5
                operator: 寕B胇KƎP昿蹅xſɨ殙
              - key: YVd
                operator: C奤Ă5賊
                values:
                - 7E
                - u
              - key: opJFYnB7Oym
                operator: G礛ĸƫP©ėŬ%ʚt0:陳塈
              matchFields:
              - key: 9j
                operator: 扃竑
                values:
                - H
                - 8cCddDMoGdpi
            weight: 2013915680
          - preference:
              matchExpressions:
              - key: BYLN
                operator: 2l犞`遊芖W盆ʨuƯ¹+
              - key: Qq
                operator: 殨舢佾Ň聰®秤X蠁?藒
                values:
                - HhFN
              - key: MjC
                operator: 脔#Ĝ
                values:
                - N0KzTseOI
                - cMHSBXX
              matchFields:
              - key: TSi8
                operator: ŕſgP~Ń臻
              - key: rcknFBaHyDP45WA
                operator: 酮|ƏƲį&v紩ǚ
                values:
                - 0vw1
                - YWAHGw
              - key: t
                operator: 鷴Q袪棺ȋɒ=ƍs©ʮ
                values:
                - 1kbmhJI
                - 1Df8mJ
                - ""
            weight: 2113734231
          - preference:
              matchExpressions:
              - key: zhZ4
                operator: 齶|!_Ħ簤o苽灉6N瀏
                values:
                - 3mlYM
                - MVC
              matchFields:
              - key: xXQfz
                operator: å靕瞇柩G踛ƺ歶鉒¨į垿X腽hɌ
              - key: EyuL8GS
                operator: Gʜǧ筋奋仟渴c竅z
                values:
                - NihX
                - kdg
            weight: -650476903
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  0K: "3"
                  PnX1n: VNWxqQ
                  qKjP: 8WGM
              mismatchLabelKeys:
              - 0dU
              namespaceSelector:
                matchExpressions:
                - key: 5X
                  operator: 幠棝觑篜馡{偺
                  values:
                  - ""
                  - 0VGL6
                matchLabels:
                  8m: oEjDoUs8x9
                  eba: ""
                  zG653VFi: A2swcnry2jkF
              namespaces:
              - 0ilU4SAQV
              - 5Znq9gw
              topologyKey: PYzBcM
            weight: -468083968
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: aOc
                operator: ƅ愧5wƃĺɈ噊壀Ǎ
                values:
                - YThMfcaTTz
                - sKxo
                - ZXVhGfVM
              - key: eW02zLj
                operator: id`谲韇废ɲəɱ攑ĉ纲Th¹G­
              matchLabels:
                39tnFaL: ""
                y8CN4o: WtEKfMv7OhOv
            mismatchLabelKeys:
            - 8WDiqfpCo
            namespaceSelector:
              matchExpressions:
              - key: xY
                operator: 召ʓ猚
                values:
                - zR
                - BXMmL7
              - key: FpQP8y
                operator: n-ƣ矚g蚡儲
                values:
                - zDobj
            namespaces:
            - heDwYBP
            topologyKey: o2pbqTyEl
          - labelSelector:
              matchExpressions:
              - key: ehzhQVU
                operator: 葦²l翑]碊Ɲ罠鶉w
            matchLabelKeys:
            - TgFaoq
            - TJXyJq
            - NK
            mismatchLabelKeys:
            - QaJSjgb
            namespaceSelector:
              matchExpressions:
              - key: AUGEkl
                operator: 倂}Ƚʂ5{仓pĪ貄pi!簪抪ƺ@ǯ鎜
                values:
                - AYFJF
                - xcn7Gk
              - key: stkUV7w3
                operator: Ć¶Ǟ旷\D耚蟑谵*,厡î遭LȆx砹
                values:
                - A6j
                - 9nO
                - 9IW
              - key: rowgqxqxNp
                operator: ""
              matchLabels:
                ii3ZoO: zWkor
                w0SKNtC5: DmW8
                wnY: dL2UKYnI4D4
            namespaces:
            - 4BZD
            - c4X
            - MtZfDn
            topologyKey: S0g7
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  7t9hx6U8fzL5: ljsPMMc9m8k
              matchLabelKeys:
              - Vo
              mismatchLabelKeys:
              - 7SEFY
              namespaceSelector:
                matchExpressions:
                - key: Yd4IO
                  operator: K臘.ɧŀX欦E靪c+
                  values:
                  - L3iB
                  - fzg50
                - key: q
                  operator: 束悴麏ƻùȍr甉湥轿Ƀ眇Ȓ]
                  values:
                  - MDYLRwRJ
                  - tAjQSw
                  - B9FPwACM
                matchLabels:
                  Fnvzaszq: kKnao0GuRJ9c
                  qKJts1U: tvVc
              topologyKey: GNCj
            weight: 2125033831
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: FSvFAd
                operator: 飠
                values:
                - WA9PQ
                - b
              - key: 5eB
                operator: ɉć慁堏Ʀ譭QV梋澧ʥL)貃Ŕ径
                values:
                - sX
              matchLabels:
                43Q9: I
                OMljwWVc4wj: hfb
            matchLabelKeys:
            - UX
            - q8aLUI1X4M
            mismatchLabelKeys:
            - Rf
            - J
            namespaceSelector:
              matchExpressions:
              - key: wwtXWqFD1s
                operator: 噽哔
                values:
                - zB04
                - MRA6dRrptwWdKp
              - key: 8m6H
                operator: 窐>ƪƣ昮锍韀
              - key: jSyWsYQs
                operator: ""
                values:
                - Bbzpnr
                - AHvuf
              matchLabels:
                L0BN: PJspte3L
                s1P0m: H
            namespaces:
            - KzdgBbfV
            - QIjkC
            topologyKey: 6oJCw
          - labelSelector:
              matchLabels:
                he: oH
            matchLabelKeys:
            - 74HUO
            mismatchLabelKeys:
            - 71vZS
            - P4Qgh
            namespaceSelector:
              matchLabels:
                0f: Xc
                1ZHpPW2U: U4lDglo
                ZoXhuUOn: DwFq91
            namespaces:
            - ep3ro
            topologyKey: WpA
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=EFXhBX
        - 5O
        command:
        - /manager
        env: []
        image: KbWqGz:pneZv
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 723
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 831
          periodSeconds: 576
          successThreshold: 866
          terminationGracePeriodSeconds: 590
          timeoutSeconds: 303
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 618
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 489
          periodSeconds: 407
          successThreshold: 175
          terminationGracePeriodSeconds: 128
          timeoutSeconds: 388
        resources:
          limits:
            cpu: "276"
            memory: "533"
          requests:
            cpu: "944"
            memory: "133"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        nameservers:
        - XQQvkKFB7z
        - vqb
        options:
        - name: rA
          value: V3
        - name: "6"
          value: UxotQ
      dnsPolicy: 4ƔȟE}燸榘Ÿ?ƥ/貜
      ephemeralContainers: null
      hostIPC: true
      hostUsers: false
      hostname: wn3zlZ7
      imagePullSecrets:
      - name: v
      - name: hHQDwu7N5Q
      - name: VbZ
      initContainers: []
      nodeName: 0Ee5S
      nodeSelector:
        8uxdh8Ut6xs: e6X8c22BMIrKkd
        aygiD: ""
        bBdu: IpXHwGw
      preemptionPolicy: 渻
      priority: -1143446041
      readinessGates:
      - conditionType: 乴谽bč忕
      - conditionType: 璇>Ŗ
      restartPolicy: Ǆû4闠
      runtimeClassName: mPt5FoX
      schedulerName: RT
      schedulingGates:
      - name: WZNHmy
      - name: koe3
      - name: T
      securityContext:
        fsGroup: 3425056346527125500
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -8843691012766103000
        runAsNonRoot: true
        runAsUser: 2040938350598920400
        supplementalGroups:
        - 4624815095572574000
        - -6622660602628227000
        - 6757111341335144000
        sysctls:
        - name: mTO7M
          value: Aa2a
        - name: Bnh29NCDOa
          value: ano
        - name: oKePh
          value: t
      serviceAccountName: "6"
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: C
      terminationGracePeriodSeconds: 6097461166688802000
      tolerations:
      - effect: 0V棔糀ÃŘ膆Š讏
        key: QbTou
        operator: ǞpȪŪ3煴ʋúɟ=ƙ:肍39Ŏ
        tolerationSeconds: 3316644788216531500
        value: A
      volumes:
      - name: W9
      - name: xuaa0
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: i7DA
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-048.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: hxBG
    health:
      healthProbeBindAddress: l
    kind: TJaGphLwcawiM
    leaderElection:
      leaderElect: false
      resourceName: YK
    metrics:
      bindAddress: RgXfRMqEJ
    webhook:
      port: 60
kind: ConfigMap
metadata:
  annotations:
    Hb: p6nsnNym
    XCiiUj: V9
    nfDuOzQO: w
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icwMYEubJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: qVYvaMYre-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Hb: p6nsnNym
    XCiiUj: V9
    nfDuOzQO: w
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icwMYEubJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: qVYvaMYre-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Hb: p6nsnNym
    XCiiUj: V9
    nfDuOzQO: w
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icwMYEubJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: qVYvaMYre
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    Hb: p6nsnNym
    XCiiUj: V9
    nfDuOzQO: w
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icwMYEubJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: qVYvaMYre
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: qVYvaMYre
subjects:
- kind: ServiceAccount
  name: Rsep9k
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Hb: p6nsnNym
    XCiiUj: V9
    nfDuOzQO: w
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icwMYEubJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: qVYvaMYre-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Hb: p6nsnNym
    XCiiUj: V9
    nfDuOzQO: w
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icwMYEubJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: qVYvaMYre
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Hb: p6nsnNym
    XCiiUj: V9
    nfDuOzQO: w
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icwMYEubJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: qVYvaMYre-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Hb: p6nsnNym
    XCiiUj: V9
    nfDuOzQO: w
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icwMYEubJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: qVYvaMYre-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: qVYvaMYre-election-role
subjects:
- kind: ServiceAccount
  name: Rsep9k
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Hb: p6nsnNym
    XCiiUj: V9
    nfDuOzQO: w
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icwMYEubJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: qVYvaMYre
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: qVYvaMYre
subjects:
- kind: ServiceAccount
  name: Rsep9k
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Hb: p6nsnNym
    XCiiUj: V9
    nfDuOzQO: w
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icwMYEubJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: qVYvaMYre-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: qVYvaMYre-rpk-bundle
subjects:
- kind: ServiceAccount
  name: Rsep9k
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Hb: p6nsnNym
    XCiiUj: V9
    nfDuOzQO: w
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icwMYEubJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: qVYvaMYre-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: icwMYEubJ
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    Hb: p6nsnNym
    XCiiUj: V9
    nfDuOzQO: w
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icwMYEubJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: qVYvaMYre
  namespace: default
spec:
  replicas: -1694564830
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: icwMYEubJ
  strategy:
    rollingUpdate:
      maxSurge: 888694814
      maxUnavailable: 1389219603
    type: 迂Ƹ/餳c¡
  template:
    metadata:
      annotations:
        Auj: ot87eXT
        H6JkGozv: 4eeJ7
        j3Pi4o: CtwRh
        kN1wtkKOq: WKhl
      creationTimestamp: null
      labels:
        7Z2: Z4
        K: kVOYzsH
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: icwMYEubJ
    spec:
      activeDeadlineSeconds: -1791496714744389400
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  QbG9Mk: npHb
              mismatchLabelKeys:
              - mTbMruAj
              - SG7QeK8RZrF
              - ouf2N0
              namespaceSelector:
                matchExpressions:
                - key: ""
                  operator: \&[ȟo閳ĆZƴ&}皎釷
                  values:
                  - zVf
                  - 5DYzYV2Q
                - key: gYu5z
                  operator: 虀柜
                  values:
                  - xnu3ILGkJZ09
                  - B3Suy
                  - 4ck
                - key: P5N
                  operator: ƶ1Ŀ®|ä9
                  values:
                  - 4GC6Q
                  - 0rMVdT
                matchLabels:
                  V: alTZGeuk
              topologyKey: cCi
            weight: -226612297
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: qLOd
                operator: ƾk瓳BhƩ綼虾^>¢n:EĿǉû
            matchLabelKeys:
            - dZY
            - bbge9qatP
            - NX2iY
            mismatchLabelKeys:
            - AZ9
            namespaceSelector:
              matchExpressions:
              - key: mKZCYX2u
                operator: cɸ塙5藎{ɆƓo傥Ɉ|8<
                values:
                - PqMTnsD0z
              matchLabels:
                fGW: G
            namespaces:
            - Y2VeTk1W
            - POPBzPK
            topologyKey: iIFXA
          - labelSelector:
              matchExpressions:
              - key: "7"
                operator: mY褏澖
                values:
                - E
                - xYwPiAiCprT6ee
              - key: g9Y4t
                operator: ȳk涀鐭霜ǋ,伻
              matchLabels:
                F: XE8rQzOU
                LmWDLqidh2P: c
                S9ZaVdhTISfa0H: 5HeZs
            matchLabelKeys:
            - feTG
            mismatchLabelKeys:
            - OnJd
            namespaceSelector:
              matchLabels:
                NYU: Y1hI
                OReo: m989
            namespaces:
            - P
            - bs9S40e
            topologyKey: HAdK
          - labelSelector:
              matchLabels:
                NtmDfUYK5aR9: ArWFo
            matchLabelKeys:
            - GQ
            - wUKa8j1
            mismatchLabelKeys:
            - gpS
            namespaceSelector:
              matchExpressions:
              - key: ot9Vun8V
                operator: '&棾晚ǜ_ɥ'
                values:
                - gt7
                - D0tuRDfaaqF
                - hKu8ertsz
              matchLabels:
                F: tdj28
                uCIzH4: K9Q7db
            topologyKey: xx97
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "90"
                  operator: ŋ4銭ʌ坵
                - key: Xj
                  operator: 裫艏Ǯ]A亽Ȁ¡Ǟɤ瀢Ųɼ^-T辇獽
                  values:
                  - DrKfkH
                  - kYVJgZ
                  - 9MM
                matchLabels:
                  ugbLL: nVJy
                  w: CFB
              mismatchLabelKeys:
              - mcZ
              - RV9XzP
              namespaceSelector:
                matchExpressions:
                - key: eq2jbvk
                  operator: Õ矷P傝蹵ƕ萭Z幋ĩ[
                  values:
                  - ydUzhj
                matchLabels:
                  gFSF1J: GMguIadtNB
                  jBrn: G0
                  mqyw: BCnj8zFPWK
              namespaces:
              - xUimbqiJ
              - Kb07r
              topologyKey: Il7A6
            weight: -699542974
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: Aza2yP8
                  operator: Q錫ģ縟ǖjŷ
                - key: Az
                  operator: ÜɪXĒŢ驡ɡ Á钶pj壃ÜÐ臑顩\
                matchLabels:
                  "7007": TE6la6A
                  TeOUnuuJ5e: lpO
                  gwqr: o1h
              matchLabelKeys:
              - W9ZHn
              - 1N1w5C4G4
              mismatchLabelKeys:
              - uJImFg
              namespaceSelector:
                matchExpressions:
                - key: CT
                  operator: ʚ农ǤC<攊'Ɍ譣磻ƤgF8{
                - key: "1"
                  operator: 驭!Ơ潂T敎矅PfĽș蕘ĦōVɣ笩
                matchLabels:
                  BIJvg1G6: TOt8R
              namespaces:
              - VsOXnAssX
              - 3fz9X
              - gT7
              topologyKey: iAPfX
            weight: -324721382
          - podAffinityTerm:
              labelSelector: {}
              matchLabelKeys:
              - S0
              - UdJIF59
              mismatchLabelKeys:
              - zwO
              - LH
              namespaceSelector:
                matchLabels:
                  vBxydG4: rGIqfhF6Bp
              namespaces:
              - RL7Ngl46f
              topologyKey: cshTSjrl
            weight: -1018167230
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: ari
                operator: 鮫n瀕b=Ʌ霂嶚|,YqBǛɴ
              - key: 8Ota
                operator: 許S屢%佱.
                values:
                - jCdObPq
                - b9gND
              matchLabels:
                "": HGh
                "4": CMlweQI
                NG50YChS: 93Ce
            mismatchLabelKeys:
            - IiLl
            - ybv
            namespaceSelector:
              matchExpressions:
              - key: j
                operator: '`Øȩ攌赸'
                values:
                - X
                - zfNjG1t
              - key: 5LWgCb
                operator: 澾澟9$qĔƈƞv
                values:
                - uN
            namespaces:
            - dn
            - 78z
            topologyKey: 2w
          - labelSelector:
              matchExpressions:
              - key: wdIB5
                operator: 聎鴦Ųē別ȏ倛雛
              - key: Pa7Fpf
                operator: kɌ.渚ņL|
                values:
                - Oiw
                - Rj8icGqThR
              - key: uCsZ8v
                operator: ""
                values:
                - MrkvV
                - vbro
                - Uf
              matchLabels:
                Jd0WgU: AycMdvt
                O: S9JugfEe
            matchLabelKeys:
            - rXOAQv
            - 059wt
            - nz
            mismatchLabelKeys:
            - ""
            - bfOFFW
            namespaceSelector:
              matchExpressions:
              - key: gS30
                operator: 诓1璠o%~
                values:
                - Di
            topologyKey: GQH
          - labelSelector:
              matchExpressions:
              - key: xCEW
                operator: )葍ĂX邞阯宏慯XG(龧嫣夶翕
                values:
                - 2snD
              - key: 8OsZ0YK
                operator: Ǯ袱伨'ȒƪȜ
              matchLabels:
                O: 4i1
                kqkgpct: UU6DrWWYr
            matchLabelKeys:
            - vUNl9fc
            - Lf27mQbT
            mismatchLabelKeys:
            - MEFRq6
            namespaceSelector:
              matchExpressions:
              - key: HF9S1iy
                operator: ƪă~盅ȼ旱耧
              matchLabels:
                zZ3txVU: zBJWGJruLY
            namespaces:
            - ""
            - 5Yiak
            - ZESlWGSU5sb
            topologyKey: AjlI34l
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=ozF
        command:
        - /manager
        env: []
        image: CPQ9Y6:qPbAyXLw
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 760
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 987
          periodSeconds: 962
          successThreshold: 312
          terminationGracePeriodSeconds: 608
          timeoutSeconds: 180
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 847
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 755
          periodSeconds: 40
          successThreshold: 15
          terminationGracePeriodSeconds: 751
          timeoutSeconds: 281
        resources:
          limits:
            cpu: "245"
            memory: "433"
          requests:
            cpu: "312"
            memory: "805"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts: []
      dnsConfig:
        nameservers:
        - OKrRLUXo1z
        options:
        - name: j9ThUG
          value: Vwy0cIZz0k
        - name: 4M
          value: gfAxn5R
        searches:
        - 8MBaXH
      dnsPolicy: 犤Ųħc瘖
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - 8Z
        - Qw
        - ""
        ip: b53FGnAG
      - ip: bOu
      hostNetwork: true
      hostUsers: true
      hostname: 7ZGs8
      imagePullSecrets:
      - name: I6Na86OnyBNx
      - name: "3"
      - name: J1RoqWBLo
      initContainers: []
      nodeName: GtzrBO
      nodeSelector:
        XD: c4GG
      preemptionPolicy: ËƨÐ襙娕XŤT7躊ȉ]蚾g
      priority: 1718744077
      priorityClassName: VG
      readinessGates:
      - conditionType: A骇ɶȻ1Ǫȟ摦趼R榸)
      - conditionType: 3µ鐰zɁ=
      resourceClaims:
      - name: F
        source:
          resourceClaimName: h5dQIT
          resourceClaimTemplateName: Qr4
      - name: mLOmJqVCjwrxV
        source:
          resourceClaimName: gAzDh2O
          resourceClaimTemplateName: QtL2daOp
      restartPolicy: 闂瀴]餵ǱQx幼Ȑa|Ⱦ{秴煴揓Ǣ!ǡ
      runtimeClassName: 5b4Eh
      schedulerName: u
      schedulingGates:
      - name: OQed6Yr9jyIj
      - name: KlVhqpr
      - name: 82PM
      securityContext:
        fsGroup: -4349798517018984400
        fsGroupChangePolicy: Always
        runAsGroup: 7312856401095131000
        runAsNonRoot: true
        runAsUser: 8704693581475557000
        supplementalGroups:
        - -401001079325091900
        sysctls:
        - name: n1tf
          value: 8u8Qs
      serviceAccountName: DHL7nEGLFqio
      setHostnameAsFQDN: false
      subdomain: Sxdzh
      terminationGracePeriodSeconds: -2850524812313792500
      tolerations:
      - effect: x裉,嗠ý檼nȓʎ甅p黛
        key: H9
        operator: '}'
        tolerationSeconds: 7651644094769316000
        value: gMwcGW5He
      - effect: ʫĔmĞ3ʦ瞷鉒紥憹_ª怸ŷ
        key: I9bF
        operator: 玗ʫ鍦Ĉ锫ȂƔȊ瀅Ǽʚ功ɫU帝圅8
        tolerationSeconds: -8913348716878803000
        value: 7o
      volumes:
      - name: ""
      - name: "1"
      - name: zEJeXFitCdV
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: Rsep9k
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-049.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tSPxL1Cf1HO9FjR
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: "2"
    health:
      healthProbeBindAddress: SO
    kind: jeQg
    leaderElection:
      leaderElect: true
      resourceName: aZI4XP9tX
    metrics:
      bindAddress: p0Zfh
    webhook:
      port: 156
kind: ConfigMap
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv-additional-controllers
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - nodes
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RxVwZrtkv
subjects:
- kind: ServiceAccount
  name: tSPxL1Cf1HO9FjR
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv-additional-controllers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RxVwZrtkv-additional-controllers
subjects:
- kind: ServiceAccount
  name: tSPxL1Cf1HO9FjR
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv-additional-controllers
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RxVwZrtkv-election-role
subjects:
- kind: ServiceAccount
  name: tSPxL1Cf1HO9FjR
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RxVwZrtkv
subjects:
- kind: ServiceAccount
  name: tSPxL1Cf1HO9FjR
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv-additional-controllers
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RxVwZrtkv-additional-controllers
subjects:
- kind: ServiceAccount
  name: tSPxL1Cf1HO9FjR
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: DFwU
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv
  namespace: default
spec:
  replicas: 776075670
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: DFwU
  strategy:
    rollingUpdate:
      maxSurge: 1327175499
      maxUnavailable: 1850944945
    type: ']ɟȲ扢ǆŀ勩Ć'
  template:
    metadata:
      annotations:
        ykKtt: uAAi
      creationTimestamp: null
      labels:
        VKJBbpRutKV64: Tgs4iTZGVDYkK
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: DFwU
    spec:
      activeDeadlineSeconds: 2278089967418417700
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: 15Gh
                operator: 馬磖țd;Őjá爥茄OȮ{ʩ"壛9}
              - key: iuiH
                operator: 揩;靱ȝÌ鐛*ŢT唘ä哸 Ƽ7-sr
                values:
                - Q3h
              - key: 8RWhACd
                operator: 皧f鋴W闔疷鑢賑
                values:
                - xwE9wrooJYT
              matchFields:
              - key: HqfBvM
                operator: Īĩ^ʮɋ湒Ću淹ķ窿ď襪ŕ堗,鎵ʌ
                values:
                - DWD
            weight: 932855426
          - preference:
              matchExpressions:
              - key: U56
                operator: ""
              - key: fF9Y1wJawGXfb
                operator: 鮩O2誠Ƨþ髂/誮n鵁Ȕ
                values:
                - T7sK
              matchFields:
              - key: PQg
                operator: 衟斊趝#ȚBĢj%朷Ơ=鷠呜
                values:
                - 5a2U
                - vYc4
                - 0E
            weight: -102914742
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchFields:
              - key: Yu
                operator: ƺ
                values:
                - "2"
                - bwMjX
              - key: Y6Hr
                operator: 陯ĸȏǵɦñ橧Ħz骩腦Ȋ
                values:
                - e0lj
              - key: uHQb
                operator: ɶȽƪ患ʬ传魁訋=¹Ȁ弈"ɒ箈&ɂ麨
                values:
                - Nuz
                - DGPIO6kZuK
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: pVXB
                  operator: /虣鯮F毥w姪;ʟ競tI液
                - key: AI
                  operator: e
                  values:
                  - 13FGcVyxCH2G
                matchLabels:
                  UrhEPuS: a
                  kueXjOKN: xC
                  tjIlJv: v3PQ1
              namespaceSelector:
                matchLabels:
                  OvNA57r8: u8V8CwS
                  PMN5sFJ: Huuo9FR3p
                  xuRslX: lr
              namespaces:
              - Z
              topologyKey: k9Dr
            weight: -677997772
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  KcurMxaxV: gQvm
              matchLabelKeys:
              - pEwCyEQF
              - l0E
              mismatchLabelKeys:
              - uOWE
              - cSzL
              namespaceSelector:
                matchExpressions:
                - key: 13Hyc4Zk
                  operator: 幣¢Ƒ弾Öi]ʎŲǺǩǊ糡T
                  values:
                  - W22wD
                  - ""
                - key: KnY
                  operator: Ţ癖鍽Ȏ飖^Ɂ¾_蕈EŁƋ頡穌ɼ鑎
                  values:
                  - FFcIpld8Do
                matchLabels:
                  2CSk: FcWN
                  OKc: I0
                  vIe9lCH: 1B
              topologyKey: 58qkCgr
            weight: -1031576769
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  V8K: nIFBNGQ5
                  Wqxq: i8
                  llpoo8xNIVV: GDA1
              matchLabelKeys:
              - p
              - 950XH
              mismatchLabelKeys:
              - 4NrzjIs
              namespaceSelector:
                matchExpressions:
                - key: J
                  operator: Ǳ_ĸɃď餃r功2ɓƜČ
                  values:
                  - PYzIeoB
                  - 59c0baFR0De
                matchLabels:
                  77I: 8pwL
              namespaces:
              - nza
              topologyKey: NCaF7r
            weight: -1497610672
          - podAffinityTerm:
              labelSelector: {}
              matchLabelKeys:
              - YITmAQC
              - 8FiOp
              mismatchLabelKeys:
              - GVXcM
              namespaceSelector:
                matchExpressions:
                - key: kte
                  operator: iW釢
                  values:
                  - JzubwaL8
                matchLabels:
                  MMIBy: SSDsSZGDXhV
              namespaces:
              - sEm3G
              - oq
              topologyKey: q
            weight: 77365845
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: g85
                  operator: 龍
                  values:
                  - dLpu0ZWapA5tU
                  - oPqTHoY
                  - 4vtv
                - key: s
                  operator: 皟ȆBC琥.*悏ĉZŶ
                  values:
                  - ""
                - key: DR9qdEc
                  operator: Y鯿CÌ#_抛ȹL
                  values:
                  - VWQ
                  - bVtuGpDd
                  - 3t
              matchLabelKeys:
              - MzvfR
              - SwlZSvD
              - y266T0HBMRNLUh
              namespaceSelector:
                matchExpressions:
                - key: 0qmXCQZQnl
                  operator: 9鼽Ġ+ɰ*贷ɀ念
                  values:
                  - OHp3H
                  - 3g
                - key: xdJrO
                  operator: ɥA匨 :k
                  values:
                  - 0168yqU
                  - EWVbM
                  - 6A8
                - key: ""
                  operator: 摕
                  values:
                  - X1KB
                  - jrcowx
                matchLabels:
                  I7R1DVHubys: ""
                  tNG: ""
              namespaces:
              - fcxim
              topologyKey: X9
            weight: -1794490661
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                AYvNb1: J5
                THtfyqu0Z: gZsbQMMYY
                tOe: L2q3mNmm8
            matchLabelKeys:
            - BOCkn
            - Dpxw
            - 4Oh
            mismatchLabelKeys:
            - OBkJICrllYH
            - XwIo
            - T1M5AHcvI
            namespaceSelector:
              matchExpressions:
              - key: uKOg00q
                operator: ƮƯ膨枚vƬBe,ǫ憿[ħ埒ȗ9
                values:
                - yjuBCK2
                - puA5JnDm
                - pb
              matchLabels:
                "": rJ5Yr
            namespaces:
            - YAlxsI
            - ""
            topologyKey: X
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=bVWCG
        - 6ArBn
        - zve
        command:
        - /manager
        env: []
        image: U4heCUyQYeE:CyopzJ
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 438
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 607
          periodSeconds: 231
          successThreshold: 254
          terminationGracePeriodSeconds: 69
          timeoutSeconds: 371
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 308
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 158
          periodSeconds: 674
          successThreshold: 957
          terminationGracePeriodSeconds: 647
          timeoutSeconds: 773
        resources:
          limits:
            cpu: "70"
            memory: "847"
          requests:
            cpu: "337"
            memory: "364"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      dnsConfig:
        options:
        - name: HHHVB5Q
          value: "8"
        - name: NEYIw9Ky
          value: cq4m
        - name: hbRxYS5v0h
          value: Nb
      dnsPolicy: a粽_Nǽ$2爿圷ó曌0
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - "6"
        - 2KGJ
        ip: YiykWtfuD
      - hostnames:
        - Tu2d82bz
        - UNm2WGvd
        ip: pedLX
      hostNetwork: true
      hostUsers: false
      hostname: LU
      imagePullSecrets:
      - name: tzmKb2w
      initContainers: []
      nodeName: hg
      nodeSelector:
        "": K8WFYsf5a
        1GlN3Q7: vY4abw
        "8": 41bR
        iV1Tv4: tA
        rivMfqV: BR
      preemptionPolicy: =%ɵV糘砊ʤ$Ɵ撇Ǽpį柘
      priority: 197745233
      priorityClassName: fnjH
      readinessGates:
      - conditionType: Vǰ
      restartPolicy: ʟs烵
      runtimeClassName: OLc
      schedulerName: AleqDOyBh
      schedulingGates:
      - name: FIBu
      securityContext:
        fsGroup: -1038967961494618500
        fsGroupChangePolicy: Always
        runAsGroup: 7947011129488217000
        runAsNonRoot: false
        runAsUser: 478576484240270200
        supplementalGroups:
        - 587654813381564000
        - 2391151309579290000
      serviceAccountName: "n"
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: 8pUyWb
      terminationGracePeriodSeconds: -1755150528265436400
      tolerations:
      - effect: r
        key: Dqs
        operator: 澚毸仪伍旍ʣ匭隃ǋ龝k吓.
        tolerationSeconds: 6842016513609661000
        value: mpVsu
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: 9g2
            operator: 5*奁{Ǉe娈ġɦʕ鐠©~ġƣd蒫
            values:
            - Q
            - yOrKqPET
            - wjd
          matchLabels:
            4lQ8AdhbM: v3aT
            "39": LN2piV
            IFs: 9jy
        maxSkew: -2007469080
        minDomains: -1864064833
        nodeAffinityPolicy: '''聶Ŏ2'
        nodeTaintsPolicy: 摓塨yĨC短
        topologyKey: VfR74HH
        whenUnsatisfiable: Ȕ
      - labelSelector:
          matchExpressions:
          - key: RAsNLC
            operator: ļ荖·ʖ
            values:
            - oEptsf7n
          matchLabels:
            U: kMS
            padcK: ja2sd
        maxSkew: 1886823748
        minDomains: 486819042
        nodeAffinityPolicy: PLʈ\
        nodeTaintsPolicy: ãɑȇ]Ȭ
        topologyKey: oTK
        whenUnsatisfiable: 83š"萃筒蝌ǬŚ殿詜þ脈
      - labelSelector:
          matchExpressions:
          - key: Fx78b
            operator: 瑟齆Ő>ĔǺ框ʋL*ĳ焲4啺
            values:
            - LbgOed
            - Y1UvH
            - yMoKiUsh
          matchLabels:
            Yrmm31: 1ey3BdW
            cljX: jTs8glnxr8
        matchLabelKeys:
        - hH
        maxSkew: -439943541
        minDomains: -937218896
        nodeAffinityPolicy: ""
        nodeTaintsPolicy: -颼Ɣ总b%*+9»ƣ焗Ǎ
        topologyKey: ws2m1
        whenUnsatisfiable: ȇ麄巬ʘ8袹"Û繋ȭCĿ錍ʤȢȖ
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: A8
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    Tett6RPd3GK0SY: SS0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DFwU
    app.kubernetes.io/version: v2.3.8-24.3.6
    fuVZ: gcPCqrc0l
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RxVwZrtkv-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: DFwU
      app.kubernetes.io/version: v2.3.8-24.3.6
      fuVZ: gcPCqrc0l
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: tSPxL1Cf1HO9FjR
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-050.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RAyK
subjects:
- kind: ServiceAccount
  name: RAyK
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RAyK-election-role
subjects:
- kind: ServiceAccount
  name: RAyK
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RAyK
subjects:
- kind: ServiceAccount
  name: RAyK
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RAyK-rpk-bundle
subjects:
- kind: ServiceAccount
  name: RAyK
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 6iZG
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 6iZG-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 6iZG
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 6iZG
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 6iZG
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: AzmZ3dTJs:WHh
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 954
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 209
          periodSeconds: 143
          successThreshold: 577
          terminationGracePeriodSeconds: 639
          timeoutSeconds: 240
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 573
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 467
          periodSeconds: 570
          successThreshold: 39
          terminationGracePeriodSeconds: 871
          timeoutSeconds: 484
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: RAyK
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: ɘ訇
        key: zZq
        operator: '!鈸ɍĠ隦酋ʏá訊u'
        value: SVKC
      - effect: ']峖ũř/àɔ撶JƣʯǤ6E筒6ȇi'
        key: 5UvyO3
        operator: uHȧ姍鶉
        value: Ej8o78T
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: ""
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - 6iZG-webhook-service.default.svc
  - 6iZG-webhook-service.default.svc.eQX8VRA0Q
  issuerRef:
    kind: Issuer
    name: RAyK-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: ""
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 6iZG
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: RAyK-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: RAyK-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 6iZG-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: RAyK-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 6iZG-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: RAyK
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-051.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tyx5W
subjects:
- kind: ServiceAccount
  name: tyx5W
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tyx5W-election-role
subjects:
- kind: ServiceAccount
  name: tyx5W
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tyx5W
subjects:
- kind: ServiceAccount
  name: tyx5W
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tyx5W-rpk-bundle
subjects:
- kind: ServiceAccount
  name: tyx5W
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: hsmvzpSm
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: hsmvzpSm-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: hsmvzpSm
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: hsmvzpSm
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: hsmvzpSm
    spec:
      activeDeadlineSeconds: -3568968370034163000
      affinity:
        podAntiAffinity: {}
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - l4dHBtic0cX0cs7
        - ""
        command:
        - /manager
        env: []
        image: mM7lGw9fmKx:K
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 654
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 266
          periodSeconds: 67
          successThreshold: 587
          terminationGracePeriodSeconds: 834
          timeoutSeconds: 543
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 226
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 189
          periodSeconds: 648
          successThreshold: 100
          terminationGracePeriodSeconds: 90
          timeoutSeconds: 281
        resources:
          limits:
            cpu: "642"
            memory: "573"
          requests:
            cpu: "351"
            memory: "829"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsPolicy: xť]\ĕȨ宂鄈
      ephemeralContainers: null
      hostIPC: true
      hostname: thPFaybO
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      preemptionPolicy: (ƸĠȸx垩骳
      priorityClassName: hYrZm
      readinessGates:
      - conditionType: 徱窭ǋ
      - conditionType: ""
      restartPolicy: 咸¤沭騁xp;蔖菞Ĩʣ
      runtimeClassName: 94jSzI68RgM
      schedulerName: DwYnpi9khB9k
      securityContext:
        runAsUser: 65532
      serviceAccountName: c9k
      subdomain: 38i
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: 2ecI
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - hsmvzpSm-webhook-service.default.svc
  - hsmvzpSm-webhook-service.default.svc.S
  issuerRef:
    kind: Issuer
    name: tyx5W-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: 2ecI
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hsmvzpSm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: tyx5W-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: tyx5W-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: hsmvzpSm-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: tyx5W-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: hsmvzpSm-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: tyx5W
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-052.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fEL2
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 89IgS
subjects:
- kind: ServiceAccount
  name: fEL2
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 89IgS-election-role
subjects:
- kind: ServiceAccount
  name: fEL2
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 89IgS
subjects:
- kind: ServiceAccount
  name: fEL2
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 89IgS-rpk-bundle
subjects:
- kind: ServiceAccount
  name: fEL2
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: njC0cLDExDA
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: njC0cLDExDA-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: njC0cLDExDA
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: njC0cLDExDA
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        "": 82Xww0
        2J1XQz: 9Ke
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: njC0cLDExDA
    spec:
      activeDeadlineSeconds: 7346256592642930000
      affinity:
        podAffinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 840
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 219
          periodSeconds: 674
          successThreshold: 446
          terminationGracePeriodSeconds: 494
          timeoutSeconds: 935
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 498
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 16
          periodSeconds: 432
          successThreshold: 888
          terminationGracePeriodSeconds: 82
          timeoutSeconds: 233
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig: {}
      dnsPolicy: 刲ʑ|ʖl狉J
      enableServiceLinks: true
      ephemeralContainers: null
      hostname: 0R1Ydin
      imagePullSecrets: []
      initContainers: []
      nodeName: DeOJp
      nodeSelector: {}
      priority: 1281798407
      priorityClassName: Q3Tz
      readinessGates:
      - conditionType: ~3ź黙}忮ǒȰyÛǕ
      - conditionType: 猭WɏƎŊ°粅Z銘椢拘N0Ǜ2ǚĺ
      - conditionType: 阱睰(ʩ
      restartPolicy: Ƙ莱;ɐ偂手墾GĜF憟磒ƶ埖嘫ē藕ç%
      runtimeClassName: CcMVUvC
      schedulerName: Fext4lbhp2RbU
      securityContext:
        fsGroupChangePolicy: Always
        runAsGroup: -3142309644442217000
        runAsUser: 3888375852294945000
      serviceAccountName: Xz0J
      shareProcessNamespace: true
      subdomain: Y0JYo
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: "5"
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - njC0cLDExDA-webhook-service.default.svc
  - njC0cLDExDA-webhook-service.default.svc.mED
  issuerRef:
    kind: Issuer
    name: 89IgS-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: "5"
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: njC0cLDExDA
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 89IgS-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 89IgS-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: njC0cLDExDA-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 89IgS-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: njC0cLDExDA-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: fEL2
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-053.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fRjXK1u0
subjects:
- kind: ServiceAccount
  name: fRjXK1u0
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fRjXK1u0-election-role
subjects:
- kind: ServiceAccount
  name: fRjXK1u0
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fRjXK1u0
subjects:
- kind: ServiceAccount
  name: fRjXK1u0
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fRjXK1u0-rpk-bundle
subjects:
- kind: ServiceAccount
  name: fRjXK1u0
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Re
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Re-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Re
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: Re
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: Re
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 957
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 615
          periodSeconds: 728
          successThreshold: 46
          terminationGracePeriodSeconds: 882
          timeoutSeconds: 321
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 162
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 221
          periodSeconds: 239
          successThreshold: 438
          terminationGracePeriodSeconds: 290
          timeoutSeconds: 121
        resources:
          limits:
            cpu: "243"
            memory: "99"
          requests:
            cpu: "91"
            memory: "106"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: fRjXK1u0
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: ktQ0dZ
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - Re-webhook-service.default.svc
  - Re-webhook-service.default.svc.I
  issuerRef:
    kind: Issuer
    name: fRjXK1u0-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: ktQ0dZ
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    aG4: btgx7ZmcV
    gwBKGQjyw: XzUFAE
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Re
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fRjXK1u0-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: fRjXK1u0-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: Re-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: fRjXK1u0-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: Re-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: fRjXK1u0
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-054.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 2jUS
subjects:
- kind: ServiceAccount
  name: 2jUS
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 2jUS-election-role
subjects:
- kind: ServiceAccount
  name: 2jUS
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 2jUS
subjects:
- kind: ServiceAccount
  name: 2jUS
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 2jUS-rpk-bundle
subjects:
- kind: ServiceAccount
  name: 2jUS
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: eMNuQ
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: eMNuQ-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: eMNuQ
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: eMNuQ
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: eMNuQ
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: zCQ:NnFVx
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 332
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 423
          periodSeconds: 374
          successThreshold: 76
          terminationGracePeriodSeconds: 975
          timeoutSeconds: 736
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 220
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 469
          successThreshold: 7
          terminationGracePeriodSeconds: 703
          timeoutSeconds: 671
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets:
      - name: eNCbsc
      - name: JNdAyNz
      - name: 5Q3VQMDN
      initContainers: []
      nodeSelector:
        44yymqi2: eNsx
      securityContext:
        runAsUser: 65532
      serviceAccountName: 2jUS
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: í瑓Ū
        key: R8tjx
        operator: ħƁ粭贘ɂ幃í瑓<Œpʧňʧ5秷"Ƨ/
        tolerationSeconds: 3264495343725739500
        value: d89px
      - effect: 痭\i
        key: FtLH68
        operator: '%'
        tolerationSeconds: 4269468755441473000
        value: ygpVX
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: wA
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - eMNuQ-webhook-service.default.svc
  - eMNuQ-webhook-service.default.svc.LW
  issuerRef:
    kind: Issuer
    name: 2jUS-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: wA
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    ybiJQZ: Ga
  creationTimestamp: null
  labels:
    1c0jr: ImaKzYy
    afd: Q9L
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: eMNuQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2jUS-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 2jUS-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: eMNuQ-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 2jUS-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: eMNuQ-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 2jUS
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-055.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: WM
subjects:
- kind: ServiceAccount
  name: WM
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: WM-election-role
subjects:
- kind: ServiceAccount
  name: WM
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: WM
subjects:
- kind: ServiceAccount
  name: WM
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: WM-rpk-bundle
subjects:
- kind: ServiceAccount
  name: WM
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: hJkIJY5Y
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: hJkIJY5Y-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: hJkIJY5Y
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM
  namespace: default
spec:
  replicas: 910858327
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: hJkIJY5Y
  strategy:
    type: 耥顅öƲ=MŰ5;ǗAȵɴı|Ǯ
  template:
    metadata:
      annotations:
        HA: itGE
        J: EB
        qA1Kj3: Rty
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: hJkIJY5Y
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - D4rks
        - p7p
        - 1kSb
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 214
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 56
          periodSeconds: 467
          successThreshold: 245
          terminationGracePeriodSeconds: 189
          timeoutSeconds: 515
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 268
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 427
          periodSeconds: 720
          successThreshold: 277
          terminationGracePeriodSeconds: 221
          timeoutSeconds: 87
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector:
        7gLg: w
        p9vPF2WR: ""
      securityContext:
        runAsUser: 65532
      serviceAccountName: WM
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: OYJbb
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - hJkIJY5Y-webhook-service.default.svc
  - hJkIJY5Y-webhook-service.default.svc.wRGH
  issuerRef:
    kind: Issuer
    name: WM-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: OYJbb
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hJkIJY5Y
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    kP0Mu: tnINl
  name: WM-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: WM-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: hJkIJY5Y-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: WM-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: hJkIJY5Y-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: WM
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-056.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: X2us
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-X2us
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: EbwFoQ3p
    health:
      healthProbeBindAddress: d6q
    kind: 7r
    leaderElection:
      leaderElect: true
      resourceName: FEqz5a3Cku
    metrics:
      bindAddress: LM
    webhook:
      port: 218
kind: ConfigMap
metadata:
  annotations:
    SCGcyFgoJx: Gp6
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: X2us
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-X2us-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    SCGcyFgoJx: Gp6
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: X2us
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-X2us-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: X2us
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    SCGcyFgoJx: Gp6
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: X2us
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X2us-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: X2us
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    SCGcyFgoJx: Gp6
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: X2us
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-X2us
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: X2us
  strategy:
    type: .éĸ
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        LiMB: JSDH
        SSwyvabPaXn: DVXkf
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: X2us
        oCw: NTKwbx4
    spec:
      activeDeadlineSeconds: -5132082406686871000
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  5dvfw9: mOesiUHmdc
                  IwMzkyTNvFz4: Wrj7
              mismatchLabelKeys:
              - 8gXFN
              - TpO
              topologyKey: jO5PPSt
            weight: 1697436510
          - podAffinityTerm:
              mismatchLabelKeys:
              - iXxDdowWo
              - LWq4t1m
              - nFTixP0
              topologyKey: vNKXC1Lh
            weight: 1528484004
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ""
                  operator: 鴶诬硔Ɓ(
                  values:
                  - 5J7usX
                  - QIY
                - key: VxHc1
                  operator: 栾pe睹迂Ȓpk1[ƶ¨彊
              mismatchLabelKeys:
              - O2cy
              - m
              namespaceSelector: {}
              topologyKey: X
            weight: 37722091
          requiredDuringSchedulingIgnoredDuringExecution:
          - namespaceSelector: {}
            namespaces:
            - Hsi1kM56ggat
            topologyKey: 169EWQ
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 155
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 922
          periodSeconds: 620
          successThreshold: 571
          terminationGracePeriodSeconds: 873
          timeoutSeconds: 852
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 283
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 642
          periodSeconds: 527
          successThreshold: 958
          terminationGracePeriodSeconds: 117
          timeoutSeconds: 54
        resources:
          limits:
            cpu: "833"
            memory: "805"
          requests:
            cpu: "954"
            memory: "410"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsPolicy: 旃9乚ɸ蓔2嘷!
      ephemeralContainers: null
      hostPID: true
      hostUsers: true
      hostname: hEf
      imagePullSecrets: []
      initContainers: []
      nodeName: 0CPLJfQO
      nodeSelector: {}
      priorityClassName: sr
      restartPolicy: K蘰綹,鳕
      runtimeClassName: tXvm9TFY
      schedulerName: OS1b
      schedulingGates:
      - name: 1G
      - name: R8
      - name: Cpc3yiAApl
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: false
        runAsUser: 65532
      serviceAccountName: 0QSN3Cc
      subdomain: 5Ex
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: Hf
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    SCGcyFgoJx: Gp6
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: X2us
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - X2us-webhook-service.default.svc
  - X2us-webhook-service.default.svc.
  issuerRef:
    kind: Issuer
    name: operator-X2us-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: Hf
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    SCGcyFgoJx: Gp6
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: X2us
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-X2us-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: operator-X2us-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: X2us-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: operator-X2us-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: X2us-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: operator-X2us
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-057.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    GFJWcympe: pAUQva
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BdJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jE0q9M4zk: 1A
  name: n0qMA4h57I5
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations:
    7rP00: GPBGHypSmn8lV
    FuOQyLeQ: lBFlu10wLN
  creationTimestamp: null
  labels:
    GFJWcympe: pAUQva
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BdJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jE0q9M4zk: 1A
  name: pEvEye-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    7rP00: GPBGHypSmn8lV
    FuOQyLeQ: lBFlu10wLN
  creationTimestamp: null
  labels:
    GFJWcympe: pAUQva
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BdJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jE0q9M4zk: 1A
  name: pEvEye-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: BdJ
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    7rP00: GPBGHypSmn8lV
    FuOQyLeQ: lBFlu10wLN
  creationTimestamp: null
  labels:
    GFJWcympe: pAUQva
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BdJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jE0q9M4zk: 1A
  name: BdJ-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: BdJ
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    7rP00: GPBGHypSmn8lV
    FuOQyLeQ: lBFlu10wLN
  creationTimestamp: null
  labels:
    GFJWcympe: pAUQva
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BdJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jE0q9M4zk: 1A
  name: pEvEye
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: BdJ
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        Jja2z: AMUJ2Hk
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: BdJ
        nn5: SwX
    spec:
      affinity:
        nodeAffinity: {}
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: zAe4N
        podAntiAffinity: {}
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - JOd
        - JV6w
        command:
        - /manager
        env: []
        image: ma3F:Jug9nLx
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 271
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 332
          periodSeconds: 695
          successThreshold: 473
          terminationGracePeriodSeconds: 834
          timeoutSeconds: 882
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 706
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 868
          periodSeconds: 235
          successThreshold: 64
          terminationGracePeriodSeconds: 683
          timeoutSeconds: 403
        resources:
          limits:
            cpu: "932"
            memory: "329"
          requests:
            cpu: "392"
            memory: "833"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig: {}
      dnsPolicy: ±訇邓/釉Ï捓ʐ
      ephemeralContainers: null
      hostAliases:
      - ip: MJS3n
      - hostnames:
        - F6D8
        - e5ENx6fE
        - m875H
        ip: hOaK3Z7
      - ip: hfHpqW
      hostIPC: true
      hostUsers: true
      hostname: NfgrE
      imagePullSecrets:
      - name: WWFoP
      - name: WsYnXzso01
      - name: IX6v
      initContainers: []
      nodeName: t
      nodeSelector:
        wfiRdUFg: bR3B
      priority: 651429941
      priorityClassName: 1hFL
      restartPolicy: ȭZ*藗ćɢ晨+ʆ;櫾ċZȡȷ媔Þ桾
      runtimeClassName: nIMeT
      schedulerName: d6EME
      schedulingGates:
      - name: 5kc2
      securityContext:
        fsGroup: 2635739868325116400
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: false
        runAsUser: -7079131959713203000
        sysctls:
        - name: vecwhX3pb
          value: oP2z67g
      serviceAccountName: xRu
      subdomain: tFiX
      terminationGracePeriodSeconds: 7833815452667532000
      tolerations: []
      topologySpreadConstraints:
      - labelSelector: {}
        matchLabelKeys:
        - AflVlO484I
        - wl2BxC
        maxSkew: 1303641541
        minDomains: 507684309
        nodeAffinityPolicy: GȆƚ-豏ɾɃ誔wʫ赜型ɂ
        topologyKey: QC
        whenUnsatisfiable: Č楨ũ忶獓ɮ+襊埂-ě
      - maxSkew: -255504187
        minDomains: 1629532814
        nodeAffinityPolicy: 抹Ɯʫ;屯k­c应
        topologyKey: He
        whenUnsatisfiable: õS<]²玤闂刉:ǚ婲jʝĭ緉
      - matchLabelKeys:
        - w3IYvD
        - jgMvIuL4
        - LEWtvIa
        maxSkew: 1344485537
        minDomains: 1746487916
        nodeAffinityPolicy: ħĻf
        topologyKey: 6pT
        whenUnsatisfiable: V療争
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: M8yk
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    7rP00: GPBGHypSmn8lV
    FuOQyLeQ: lBFlu10wLN
  creationTimestamp: null
  labels:
    GFJWcympe: pAUQva
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BdJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jE0q9M4zk: 1A
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - BdJ-webhook-service.default.svc
  - BdJ-webhook-service.default.svc.zd
  issuerRef:
    kind: Issuer
    name: pEvEye-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: M8yk
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    7rP00: GPBGHypSmn8lV
    FuOQyLeQ: lBFlu10wLN
  creationTimestamp: null
  labels:
    GFJWcympe: pAUQva
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BdJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jE0q9M4zk: 1A
  name: pEvEye-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: pEvEye-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: BdJ-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    7rP00: GPBGHypSmn8lV
    FuOQyLeQ: lBFlu10wLN
  creationTimestamp: null
  labels:
    GFJWcympe: pAUQva
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: BdJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jE0q9M4zk: 1A
  name: pEvEye-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      GFJWcympe: pAUQva
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: BdJ
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
      jE0q9M4zk: 1A
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: pEvEye-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: BdJ-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: n0qMA4h57I5
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-058.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2PyZZ8ZNsM
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nLM2irjC
subjects:
- kind: ServiceAccount
  name: 2PyZZ8ZNsM
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nLM2irjC-election-role
subjects:
- kind: ServiceAccount
  name: 2PyZZ8ZNsM
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nLM2irjC
subjects:
- kind: ServiceAccount
  name: 2PyZZ8ZNsM
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nLM2irjC-rpk-bundle
subjects:
- kind: ServiceAccount
  name: 2PyZZ8ZNsM
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: fgsJm
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: fgsJm-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: fgsJm
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: fgsJm
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        93Zq: XIlI
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: fgsJm
        fx3sz6: "38"
    spec:
      activeDeadlineSeconds: 7810061853687495000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: idWmcYq6IZQH:vnJvYTYU8
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 932
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 423
          periodSeconds: 730
          successThreshold: 714
          terminationGracePeriodSeconds: 936
          timeoutSeconds: 192
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 872
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 101
          periodSeconds: 189
          successThreshold: 63
          terminationGracePeriodSeconds: 758
          timeoutSeconds: 675
        resources:
          limits:
            cpu: "905"
            memory: "563"
          requests:
            cpu: "163"
            memory: "88"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsPolicy: 荧ʇǊ亍/-ʇƬQ{Ǯ/
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - dSV1wJ
        - CC
        ip: Gxz
      - ip: SrzM
      - hostnames:
        - 5yiJs
        - AOv
        ip: m9tJ
      hostPID: true
      imagePullSecrets: []
      initContainers: []
      nodeName: HkTWCvk
      nodeSelector:
        oEluSh: TQJ6t8emxOMQg
        pX: LGnS
      priority: -390065565
      priorityClassName: 6TvoBD
      resourceClaims:
      - name: tOnffFc3
        source:
          resourceClaimName: coR
          resourceClaimTemplateName: dNZ
      - name: Y9poS
        source:
          resourceClaimName: FrcV0
          resourceClaimTemplateName: T
      restartPolicy: 'x鲡ÜY鄍故:'
      runtimeClassName: ty2TXT
      schedulerName: JK0BTM
      schedulingGates:
      - name: RSTS
      securityContext:
        runAsUser: 65532
      serviceAccountName: fQmYz
      subdomain: Qt
      terminationGracePeriodSeconds: 9217582102908294000
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: 3y3R
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - fgsJm-webhook-service.default.svc
  - fgsJm-webhook-service.default.svc.OWImEb
  issuerRef:
    kind: Issuer
    name: nLM2irjC-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: 3y3R
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: fgsJm
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nLM2irjC-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: nLM2irjC-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: fgsJm-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: nLM2irjC-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: fgsJm-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 2PyZZ8ZNsM
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-059.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    F: 2wq
    Vcp6O5a1Q: 5Dgl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PiQzKZrHGl
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: l2
    health:
      healthProbeBindAddress: pR
    kind: P1nZUB
    leaderElection:
      leaderElect: true
      resourceName: qMple
    metrics:
      bindAddress: 31mM
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: X374QF3AYX
subjects:
- kind: ServiceAccount
  name: PiQzKZrHGl
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: X374QF3AYX-election-role
subjects:
- kind: ServiceAccount
  name: PiQzKZrHGl
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: X374QF3AYX
subjects:
- kind: ServiceAccount
  name: PiQzKZrHGl
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: X374QF3AYX-rpk-bundle
subjects:
- kind: ServiceAccount
  name: PiQzKZrHGl
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: zUC
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: zUC-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: zUC
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX
  namespace: default
spec:
  replicas: 738560762
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: zUC
  strategy:
    rollingUpdate:
      maxSurge: 697560028
      maxUnavailable: 946395942
    type: '&+貱0ʬ,Ǐ'
  template:
    metadata:
      annotations:
        R: cue4iXwcB
        Y4XIpDcNK: g6MHOhm
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: zUC
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 941
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 378
          periodSeconds: 953
          successThreshold: 95
          terminationGracePeriodSeconds: 100
          timeoutSeconds: 207
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 297
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 644
          periodSeconds: 638
          successThreshold: 951
          terminationGracePeriodSeconds: 932
          timeoutSeconds: 305
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: PiQzKZrHGl
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: Fk
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - zUC-webhook-service.default.svc
  - zUC-webhook-service.default.svc.tP3Ji
  issuerRef:
    kind: Issuer
    name: X374QF3AYX-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: Fk
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: X374QF3AYX-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: zUC-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zUC
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: X374QF3AYX-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: zUC
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: X374QF3AYX-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: zUC-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: PiQzKZrHGl
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-060.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    z: "1"
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Fzbi9OkP
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: Zw5Q6jqaoy
    health:
      healthProbeBindAddress: qhc
    kind: ""
    leaderElection:
      leaderElect: false
      resourceName: TV4wZ7Ut
    metrics:
      bindAddress: mjhcN
    webhook:
      port: 257
kind: ConfigMap
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: G
subjects:
- kind: ServiceAccount
  name: Fzbi9OkP
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: G-election-role
subjects:
- kind: ServiceAccount
  name: Fzbi9OkP
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: G
subjects:
- kind: ServiceAccount
  name: Fzbi9OkP
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: G-rpk-bundle
subjects:
- kind: ServiceAccount
  name: Fzbi9OkP
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 8V1wVzO
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 8V1wVzO-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 8V1wVzO
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G
  namespace: default
spec:
  replicas: -1286924151
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 8V1wVzO
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        CoIt: Hip0tNLH
        SWcPP8duqV: NoCR
        "y": gaFmFF
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 8V1wVzO
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference: {}
            weight: 877903035
          - preference:
              matchExpressions:
              - key: auHzoPu
                operator: 燃qȉ÷鑆
                values:
                - 6gr8
                - fX9
              matchFields:
              - key: CQw
                operator: MçɌ伌磾歗耛
                values:
                - dEaa
              - key: Ubm
                operator: m`橐鬅ʢ盏;Ȃb
              - key: 0D
                operator: ȖÒǃ剠'Qf佛鸻柹6D钗糯íǩMw2
            weight: 1545337051
          - preference:
              matchFields:
              - key: P5O1
                operator: \Ƈ焀愌lʠ²¸
                values:
                - GjDqqGL0
                - ttgHCT
                - JhZ12
            weight: 86425671
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchFields:
              - key: Tk
                operator: ƹ隞剻ƥ
              - key: zwAQ
                operator: '#'
              - key: wG5QKmp
                operator: 凸Ɛ纊
                values:
                - uoqs4vJBU
                - VmihKE
                - SH
            - matchFields:
              - key: pB8ePm
                operator: ""
              - key: KVclk6J3u5
                operator: È姪 ÜɤÙ蝱步tī惏
                values:
                - pq5L9RO8
                - iE3Onta
              - key: "5"
                operator: '&e鉧N牧Ȏ迋缴Pȣ^'
                values:
                - ROrxgrNk9F
                - S0
                - gxD8rwSV
            - matchExpressions:
              - key: cIBa5wm8n
                operator: -ʖȾʧ0鯭ȓ
                values:
                - uLwxSr
                - tN2
              - key: ybXwTy
                operator: Űs觫¼ȇ
                values:
                - mkq2L
                - FThOx3
                - KvrS
              - key: zeEA
                operator: d2坍ďɌ%t'錧Ùïzfɉŗ®
                values:
                - RKcPya
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ""
                  operator: Ý霿Þ,a競纁気J]敿ǘ錥/遮ʝ
                - key: iIAK
                  operator: 糎òKj5.(ȍ糁ăB鮷~
                  values:
                  - f9Nl
                  - TG
                - key: o
                  operator: '*爜ó蜿Ǽpƒņ)Bɶ|oƞ痺B'
              mismatchLabelKeys:
              - f2PpXqY4S
              - j3KnrXbKf
              namespaceSelector:
                matchExpressions:
                - key: EG0uU
                  operator: 礪x2ʄƶM)RĤ喸粞e燡Ĺ瑏ȔPżO
                - key: LryrGH
                  operator: ' Oʑ'
                  values:
                  - NgD
                  - gF79Udx7
                  - znN
              namespaces:
              - ""
              - 91p
              topologyKey: ""
            weight: 249676732
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: H
                  operator: 掠HoƦAF
                - key: pzj5k
                  operator: 腐ȟ
                  values:
                  - kxS8IJ
                  - kE
                  - 7nBj
                - key: Ho
                  operator: ʥyIŽF镼桵57|ƍWďg訜
              matchLabelKeys:
              - "5"
              - WydLI
              namespaceSelector:
                matchLabels:
                  ZrOBwQQX: dnC
              topologyKey: AWn
            weight: -1363427772
          requiredDuringSchedulingIgnoredDuringExecution:
          - matchLabelKeys:
            - J4yP
            - jRVKfnd
            - aLGXXYXtNvS
            mismatchLabelKeys:
            - FrbUpKod
            - c4rUB
            - w0drDOwQ8VEV
            namespaceSelector:
              matchLabels:
                d6pDEFDy: KR2bs3
            topologyKey: GLNxA5
          - labelSelector:
              matchExpressions:
              - key: FwEIsmhFI
                operator: 輔ë碉剉
                values:
                - yq8M
                - VZO9Vg
                - Qj3KdAhLCM5
              - key: N5d3lMrBII
                operator: '|ǔeR.邈L簋Ā鉥ȹ'
              matchLabels:
                "": I7fhPK
                25kkA: X5M
            mismatchLabelKeys:
            - Mb4LbuExHD6
            - XAk
            namespaces:
            - O
            topologyKey: FHxii
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - 8TZ
        - c
        - cpUq
        command:
        - /manager
        env: []
        image: qbU:9mw
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 127
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 324
          periodSeconds: 27
          successThreshold: 265
          terminationGracePeriodSeconds: 459
          timeoutSeconds: 872
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 146
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 979
          periodSeconds: 599
          successThreshold: 375
          terminationGracePeriodSeconds: 47
          timeoutSeconds: 33
        resources:
          limits:
            cpu: "459"
            memory: "629"
          requests:
            cpu: "100"
            memory: "277"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets:
      - name: Qzv
      - name: 3TWwF
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: Fzbi9OkP
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: ĩŇ鸶埡E鬼b欈鬚ħ汣ĆBȟŉ
        key: 6Y
        operator: ĸN怔精畹 Ɲ
        tolerationSeconds: 3239167562437367000
        value: U4S5
      - effect: 韘銫.衳;aƣ榌懣(ɲ篥­9邊斤榽fŷ
        key: wMhDI
        operator: )HuȕL搩Iʇ\ŦZȋ[:镱Ǳ
        tolerationSeconds: -180540694248284540
        value: F0lt
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: ByyEUurwR
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - 8V1wVzO-webhook-service.default.svc
  - 8V1wVzO-webhook-service.default.svc.RBjyK1IISE
  issuerRef:
    kind: Issuer
    name: G-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: ByyEUurwR
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    Hp8LxD6: 9oZ3ip
    Jw: Jn
    lKmeE2: L
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8V1wVzO
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: G-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: G-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 8V1wVzO-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: G-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 8V1wVzO-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: Fzbi9OkP
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-061.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    m: IHPyB
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: Z20j25RfqSp
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: zBK9hkZ4
    health:
      healthProbeBindAddress: f3
    kind: jV
    leaderElection:
      leaderElect: true
      resourceName: CM4KfP
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 199
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tDaA
subjects:
- kind: ServiceAccount
  name: Z20j25RfqSp
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tDaA-election-role
subjects:
- kind: ServiceAccount
  name: Z20j25RfqSp
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tDaA
subjects:
- kind: ServiceAccount
  name: Z20j25RfqSp
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tDaA-rpk-bundle
subjects:
- kind: ServiceAccount
  name: Z20j25RfqSp
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: JhtIXu
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: JhtIXu-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: JhtIXu
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA
  namespace: default
spec:
  replicas: 692702430
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: JhtIXu
  strategy:
    rollingUpdate:
      maxSurge: 1272820202
      maxUnavailable: 1599763437
    type: p唧ţ逆ƒ4Ħ{'å
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        "": otm65
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: JhtIXu
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: 2g:GfYtT
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 877
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 442
          periodSeconds: 386
          successThreshold: 858
          terminationGracePeriodSeconds: 328
          timeoutSeconds: 697
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 430
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 666
          periodSeconds: 556
          successThreshold: 172
          terminationGracePeriodSeconds: 200
          timeoutSeconds: 194
        resources:
          limits:
            cpu: "769"
            memory: "582"
          requests:
            cpu: "988"
            memory: "839"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: Z20j25RfqSp
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: vT
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - JhtIXu-webhook-service.default.svc
  - JhtIXu-webhook-service.default.svc.v0W
  issuerRef:
    kind: Issuer
    name: tDaA-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: vT
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: tDaA-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: JhtIXu-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    AWBTKJBE3: lLUGUf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: JhtIXu
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jcF: qXntI
  name: tDaA-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      AWBTKJBE3: lLUGUf
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: JhtIXu
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
      jcF: qXntI
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: tDaA-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: JhtIXu-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: Z20j25RfqSp
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-062.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 5EOV
    health:
      healthProbeBindAddress: :8081
    kind: g65
    leaderElection:
      leaderElect: true
      resourceName: ut
    metrics:
      bindAddress: V1ZJHnc0
    webhook:
      port: 76
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 79ioSjMT8KG
subjects:
- kind: ServiceAccount
  name: 79ioSjMT8KG
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 79ioSjMT8KG-election-role
subjects:
- kind: ServiceAccount
  name: 79ioSjMT8KG
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 79ioSjMT8KG
subjects:
- kind: ServiceAccount
  name: 79ioSjMT8KG
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 79ioSjMT8KG-rpk-bundle
subjects:
- kind: ServiceAccount
  name: 79ioSjMT8KG
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: ZRaS
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: ZRaS-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: ZRaS
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG
  namespace: default
spec:
  replicas: 1349316373
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: ZRaS
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        yc: ""
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: ZRaS
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchFields:
              - key: 9xbOcnTn
                operator: 凥ǩk雐必3 ȏ0A邿u癮!­Ⱦ銂,
                values:
                - h
                - DTdeaN
            weight: -738772381
          - preference:
              matchExpressions:
              - key: lfpZtGAtSu
                operator: w俢m<轮V{3(閡彲¶pg<g蟅阎
              - key: 6g
                operator: '`Ĳ荪平Ë2'
                values:
                - 2w9qXs
                - ""
                - St0wng64tS
              matchFields:
              - key: gX2X7Wq
                operator: dHȵ玁墤貒SģƤ}偝ɡ
                values:
                - xHPfNUV
            weight: 501690732
          - preference:
              matchExpressions:
              - key: Gd6iPJmAY
                operator: ʤ埐
                values:
                - 7rl6KKcwE9mDy
                - JA
                - ANpJU
              - key: btfY
                operator: ɧÍȤ^钲s¡ÉƐ五当ʖ廫Sʣʮ@K価
              - key: sEEc
                operator: ǭȭɸ玔ʕĚ澢Ħȱǀ藥ȯȚk
                values:
                - hPMh
              matchFields:
              - key: Mr6O
                operator: ė鰵穘鴶
                values:
                - ckKeEPsvZ
                - ""
                - TbIws
            weight: 1594241661
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: 376H
                operator: ' ľhǔɵƯƟ<'
              - key: zFywQ6p
                operator: Ⱦ錋*葎烰iċ聥ɌSģQȘǀĜǼ柯鰄
                values:
                - BQ
                - 7RW
                - ZVwT6
            - matchExpressions:
              - key: v3VTr
                operator: '!"虺Q蒏²i'
              - key: Fn
                operator: 嶘螣0{猴ȓ(ʫ嵓矩Ǌȱ鸵
                values:
                - mI
                - Gn1
                - jti9
              - key: 6z
                operator: 涜{啠Ýyʀcɡ1硙ɤ<Á挃{Ȑ蒥瑯
              matchFields:
              - key: iVFQ
                operator: Ë3Y泌皧0ǎ
            - {}
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                77gx: JyRF5
                csQpp: Tt5foK
                y7P: g
            matchLabelKeys:
            - vqHpxA
            mismatchLabelKeys:
            - 1qs6o6
            namespaceSelector:
              matchExpressions:
              - key: geZAgN
                operator: cfǺ朣z{BÆć榷N鐚ą駘#(
                values:
                - cWiz
                - bkE8
            namespaces:
            - goHC
            topologyKey: "6"
          - labelSelector: {}
            matchLabelKeys:
            - H7f5NNF
            mismatchLabelKeys:
            - j0j
            - Iyeb38Q
            - rsV
            namespaceSelector:
              matchLabels:
                5zBYoF: "0"
                XcF: WFR4j
                nwyFSEZrlB: LnDql
            namespaces:
            - tr8
            - vTKefg
            topologyKey: lAnD
          - labelSelector:
              matchLabels:
                L1JcZe: 8di
            matchLabelKeys:
            - vU4oH6ZqKb
            namespaces:
            - hVrWX1j
            - I
            topologyKey: Og
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ZypuG
                  operator: ƱɊ彮Ƒ/萢Ǻş
                  values:
                  - ""
                  - EikNT
                  - T
                matchLabels:
                  ekiSOLjUEhV: bK
                  nIqw: HnTbW47
              matchLabelKeys:
              - ""
              mismatchLabelKeys:
              - DMGsMlwac
              namespaceSelector:
                matchLabels:
                  mprc7ZFsW: w0fwyvJO
              topologyKey: ER8I2
            weight: -1735741934
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: kFk9
                operator: ƑļW
                values:
                - 8GIlq
                - v
                - oE5H
              matchLabels:
                ww9X: n31J
            namespaces:
            - 1U5ckcd9Z6Qb
            topologyKey: ZtMCDcq
          - labelSelector:
              matchExpressions:
              - key: pF
                operator: ǩ鎜ŠŜȇ橱誀
                values:
                - rxZ3Ddj
                - rI
                - XB
            matchLabelKeys:
            - J5wPG
            namespaceSelector: {}
            namespaces:
            - HBS
            - ""
            topologyKey: 8A4g0vq
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 801
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 382
          periodSeconds: 580
          successThreshold: 693
          terminationGracePeriodSeconds: 540
          timeoutSeconds: 778
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 815
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 389
          periodSeconds: 322
          successThreshold: 622
          terminationGracePeriodSeconds: 754
          timeoutSeconds: 842
        resources:
          limits:
            cpu: "810"
            memory: "935"
          requests:
            cpu: "574"
            memory: "479"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets:
      - name: GI3C2
      initContainers: []
      nodeSelector:
        Yh: 05qY1de9iCbZmf
        zwf: HZboLIP
      securityContext:
        runAsUser: 65532
      serviceAccountName: 79ioSjMT8KG
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: 籚HȰy垓ģÛƫ倹:奩倫廚戦f
        key: l4
        operator: Ë雳ǰ蠘Nu堑[?pc';
        tolerationSeconds: 1274360854646177000
        value: rZ3DYm7D
      - effect: ɄBőEǚ/
        key: dZ
        operator: Õ燇薨
        tolerationSeconds: -6904634960455264000
        value: s27Ly0fqrJMy
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: ZZyA3J2
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - ZRaS-webhook-service.default.svc
  - ZRaS-webhook-service.default.svc.CsDkc
  issuerRef:
    kind: Issuer
    name: 79ioSjMT8KG-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: ZZyA3J2
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    L5oVQe9mXi: Ha5na1
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ZRaS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    j: Wmsdb
    uS: h6Fj
  name: 79ioSjMT8KG-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 79ioSjMT8KG-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: ZRaS-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 79ioSjMT8KG-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: ZRaS-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 79ioSjMT8KG
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-063.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 3DZm5C
    health:
      healthProbeBindAddress: wbS
    kind: lvSajc
    leaderElection:
      leaderElect: true
      resourceName: vJ0RPdGU
    metrics:
      bindAddress: vt
    webhook:
      port: 230
kind: ConfigMap
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 41nucs5
subjects:
- kind: ServiceAccount
  name: v1W
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 41nucs5-election-role
subjects:
- kind: ServiceAccount
  name: v1W
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 41nucs5
subjects:
- kind: ServiceAccount
  name: v1W
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 41nucs5-rpk-bundle
subjects:
- kind: ServiceAccount
  name: v1W
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: ibdE3
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: ibdE3-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: ibdE3
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: ibdE3
  strategy:
    rollingUpdate:
      maxSurge: 548350110
      maxUnavailable: 595639980
    type: ô
  template:
    metadata:
      annotations:
        9TI: qa3zs
        qC: qD
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: ibdE3
    spec:
      activeDeadlineSeconds: 8386641482634777000
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ""
                  operator: Ǹ摩k
                  values:
                  - 7jfm
                matchLabels:
                  tys6: mo
                  xFx: eu6WHaMscV
              namespaceSelector:
                matchExpressions:
                - key: TcBsN
                  operator: V7ƑuJ麣汅dH旛Ïǐ
                - key: UcxiOQZ
                  operator: 蛘燵ŴRȀ臙Pʭɘ
                  values:
                  - UILkq
                matchLabels:
                  048sU: 1TeuOLHG
                  PJsfU: PMe
                  Xn6: 4jFB
              topologyKey: kea
            weight: 543361615
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  9B7oDS2Dqg: 8Yc97J
                  zG0o: 9Z
              matchLabelKeys:
              - 6cEpAUN6kWw
              mismatchLabelKeys:
              - CU34P
              - Wn
              - rQ
              namespaceSelector: {}
              namespaces:
              - CaMbSAB
              - uQb
              topologyKey: AWLls4
            weight: -1697789399
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector: {}
              mismatchLabelKeys:
              - ENJkAXiE
              - yx08C1A2SdN2
              namespaces:
              - ""
              - 84rWC1iYJ
              topologyKey: ""
            weight: 711888824
          - podAffinityTerm:
              mismatchLabelKeys:
              - WHKsI
              - h9Q
              - 2Royoo4G
              namespaceSelector:
                matchExpressions:
                - key: sIWFm5b
                  operator: VĽĄǢŬ磥霷ĿʁůÕȎĐɦƪ趬Ÿ
                  values:
                  - ak97
                  - uvdvn
                - key: deEGeT
                  operator: T碔ǤsRwWcƓ电ƨɵɱ¶ǥT瑎孧
                  values:
                  - coh
                  - I
                  - zMLOg
                matchLabels:
                  HQDm: pnRnh
              topologyKey: gS
            weight: -1880150493
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - r4LII
        - m5622dBz6A
        command:
        - /manager
        env: []
        image: cd7qo:vJ7ET
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 226
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 129
          periodSeconds: 548
          successThreshold: 32
          terminationGracePeriodSeconds: 268
          timeoutSeconds: 725
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 313
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 97
          periodSeconds: 243
          successThreshold: 393
          terminationGracePeriodSeconds: 496
          timeoutSeconds: 135
        resources:
          limits:
            cpu: "667"
            memory: "5"
          requests:
            cpu: "4"
            memory: "963"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - IVuNkr4z
        - 9XLgNXI
      dnsPolicy: ņg滦趗ɚ阋Ɵ髬ɲ
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - RM
        ip: u
      - hostnames:
        - Fw
        ip: 5S384oi
      hostIPC: true
      hostPID: true
      hostUsers: true
      hostname: Hm51Efs9T8U
      imagePullSecrets: []
      initContainers: []
      nodeName: P9MAwp
      nodeSelector: {}
      preemptionPolicy: ǼBʔ麀Ş}Û
      readinessGates:
      - conditionType: 闲聪盏ɔ騹Ș馊黖4嘢^ĝ贍ȴǪ
      - conditionType: '}+眝,苗搋Ơ灢儌'
      - conditionType: Ș_晉Š
      resourceClaims:
      - name: SGle5FGb
        source:
          resourceClaimName: 2F07
          resourceClaimTemplateName: HcYMRZmN
      - name: cFoC3BLD
        source:
          resourceClaimName: H643vZRq
          resourceClaimTemplateName: kOVvWU
      restartPolicy: ɜG
      runtimeClassName: 0miTRRYKU
      schedulerName: p9Ab5RBA7
      schedulingGates:
      - name: 0D2o
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 842292908927240800
        runAsNonRoot: true
        runAsUser: 7838399609601566000
        sysctls:
        - name: jE2Fj5Z
          value: I
      serviceAccountName: LnINHd7GybLE
      subdomain: "0"
      terminationGracePeriodSeconds: -9216646974168798000
      tolerations:
      - effect: ɵfƲi脕Ʉ,4余-H
        key: Ib
        operator: ŃC従ë'fʐ畀炅ư穩熍M肓ÎƜ烍饫ɴ
        tolerationSeconds: 8474325013013203000
        value: cLIt
      - key: HrhC
        operator: D髆陁¯-aȩ
        tolerationSeconds: 7079392287063791000
        value: lcUzgeUg8
      - effect: ɴ?!楲Tāɬ氬<Ǎ垷Ņ疼
        key: e797a
        operator: Y箝ɗ耮猇韧Ceñɨ
        tolerationSeconds: 2796595789192197000
        value: AUvS2
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: s4js
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - ibdE3-webhook-service.default.svc
  - ibdE3-webhook-service.default.svc.H0M2WM
  issuerRef:
    kind: Issuer
    name: 41nucs5-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: s4js
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    nfk: A5hC
  creationTimestamp: null
  labels:
    aWCYcSH: IIt47c1D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibdE3
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    wig: gAae
  name: 41nucs5-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 41nucs5-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: ibdE3-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 41nucs5-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: ibdE3-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: v1W
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-064.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    Tv9mrE: QJOCh1aO
    jW: CZz80QZ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Ev1EfK
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: FD
    health:
      healthProbeBindAddress: :8081
    kind: MH5XDB
    leaderElection:
      leaderElect: true
      resourceName: 1tYL
    metrics:
      bindAddress: OhXadc
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: xtpIQu
subjects:
- kind: ServiceAccount
  name: Ev1EfK
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: xtpIQu-election-role
subjects:
- kind: ServiceAccount
  name: Ev1EfK
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: xtpIQu
subjects:
- kind: ServiceAccount
  name: Ev1EfK
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: xtpIQu-rpk-bundle
subjects:
- kind: ServiceAccount
  name: Ev1EfK
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Kcp
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Kcp-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Kcp
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu
  namespace: default
spec:
  replicas: -2095964652
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: Kcp
  strategy:
    type: ƕƎ尠Ǎõē娱
  template:
    metadata:
      annotations:
        "": w
        836x: oHBF
      creationTimestamp: null
      labels:
        Qh1IlK: xXLYxezYtH
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: Kcp
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: p6dslT6A68Q
                operator: µ鷙毪_ɶ哞膠ɘ覞ʛ%Qpk
                values:
                - 9S
                - hdwUzm
                - 7rplk5J
              - key: Yh8
                operator: S庘{ Y殶L­ț1践T辿$=.ʩ
              matchFields:
              - key: hzCRGFfiCv
                operator: x騱Ğ
              - key: Rzt3DL
                operator: 痑
                values:
                - "08"
              - key: 2to
                operator: ""
            - matchExpressions:
              - key: ZtM7
                operator: ʠɞǙ§vUc隄ʥ嘽雚宬4|"ǋ>
                values:
                - vRFviQGe0
                - zGZM
              - key: RMjmZnOkvvZc
                operator: (盆7Ƚ}鏴Ɉ)'Jeå蹷
                values:
                - Zvv16KE
              matchFields:
              - key: Vt2gIz0
                operator: '%'
            - matchExpressions:
              - key: CdoYQP
                operator: x割鳑)í噁
                values:
                - hHER8zu4
                - Ni
                - wSgMO
              matchFields:
              - key: 2mcWT
                operator: '>ģ扃 麷¹Ńĺ腣XǬȞAž幢掑Ä'
                values:
                - ULwogXx6z5
                - 9zP8p
                - q8
              - key: iZTM9Vm
                operator: -ǿ#毖齸倖瞍vWʞ:Ă^6徨
                values:
                - K5le06tD
        podAntiAffinity: {}
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - ""
        - QL9X
        command:
        - /manager
        env: []
        image: SCN:DF517x
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 941
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 763
          periodSeconds: 486
          successThreshold: 976
          terminationGracePeriodSeconds: 631
          timeoutSeconds: 593
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 96
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 110
          periodSeconds: 304
          successThreshold: 487
          terminationGracePeriodSeconds: 749
          timeoutSeconds: 268
        resources:
          limits:
            cpu: "678"
            memory: "136"
          requests:
            cpu: "25"
            memory: "887"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets:
      - name: Qi
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: Ev1EfK
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: 煲釠č5瓏{癧aǼ
        key: Y9U7
        operator: o筈辅űųʝ@鷻銩0
        tolerationSeconds: 2028340599953699800
        value: GoO
      - effect: »g_js羿O幯乽;戰嬹ËƔ{t4姛瓬
        operator: 9]ɞ丮¹DOłſɌ髽
        value: 1ikTXwf
      - effect: ʦ爢åS兲ƈʮƾ
        key: RUhE
        operator: Q芎帲@ɂ§[Ř:乶纱r
        tolerationSeconds: 7398301711804277000
        value: D
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: pkhQjFp
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - Kcp-webhook-service.default.svc
  - Kcp-webhook-service.default.svc.kVV
  issuerRef:
    kind: Issuer
    name: xtpIQu-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: pkhQjFp
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    HvdUM8c: xgMVqIkmZB
    Sy: 53p2w
    Zxp7: CdyC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Kcp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: xtpIQu-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: xtpIQu-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: Kcp-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: xtpIQu-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: Kcp-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: Ev1EfK
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-065.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 6cBdO4WXpPbYNd
    health:
      healthProbeBindAddress: :8081
    kind: 9m
    leaderElection:
      leaderElect: false
      resourceName: qAkskeq
    metrics:
      bindAddress: oEhm
    webhook:
      port: 223
kind: ConfigMap
metadata:
  annotations:
    Wcv: XlJt1il
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "78"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    yhRLU: bn88A
  name: CbM6ZNJQ-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Wcv: XlJt1il
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "78"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    yhRLU: bn88A
  name: CbM6ZNJQ-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: "78"
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Wcv: XlJt1il
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "78"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    yhRLU: bn88A
  name: 78-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: "78"
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    Wcv: XlJt1il
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "78"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    yhRLU: bn88A
  name: CbM6ZNJQ
  namespace: default
spec:
  replicas: -610531173
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: "78"
  strategy:
    rollingUpdate:
      maxSurge: 17395768
      maxUnavailable: 1807806628
    type: ʛ
  template:
    metadata:
      annotations:
        kINvq: mSXo
        qNT: 2P
      creationTimestamp: null
      labels:
        "": VLlyct
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: "78"
        lmGA: iZ
    spec:
      activeDeadlineSeconds: 8105160926795581000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: k2nz7
                operator: 鴗¥H型u塑ɑ[ȗaü^ǟR
                values:
                - S
                - SOs
                - e2
              - key: SN37
                operator: ),訨"ʠŻz戒5跥RĮÖȴ莳芅烥XZ
              - key: Usgg0wwYK
                operator: ı/|Ƶ
                values:
                - Shgrw
                - pcCanAQXkE6
              matchFields:
              - key: drX
                operator: k蜞挺FȤv両ðĔŉ豣@Ǚ挭靮陰Ų
              - key: HCR
                operator: 塊茡ǐsǬ斘ï:馭r铔沶
              - key: qAsqjfvzE5f
                operator: 'Iİ!.6Áʏ!ö&{福ɨǍnD迪:'
                values:
                - oZT0
                - wht6Bhi
            weight: 1926175553
          - preference:
              matchExpressions:
              - key: rz
                operator: Ǉzęʯs裂}bB
                values:
                - HnoETI0PMkx
                - RypJyp
                - Lf
              - key: 5qiexOXE
                operator: 叱
              matchFields:
              - key: VDH0hq
                operator: ǬG緧霞郪ɟȾ倹
                values:
                - 9gsy0k
            weight: 1413888902
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - {}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: EkrTV7nWi8Z
                operator: 炷韘ɡƀ嫉匵鼸]$藎 ɔ騬悹侰脯
                values:
                - NE33
              - key: Hup
                operator: ȑ_ɽ觀N琁Nƒ嗉珥ȳ眮[
              matchLabels:
                VKyGu: SeTv9
            matchLabelKeys:
            - eg33OtYq
            - p
            - LI5Hhjht
            mismatchLabelKeys:
            - KVBnSCT0MT
            namespaceSelector:
              matchExpressions:
              - key: dSPL07rZV
                operator: 6K寞Ĩ\NƅǑ
                values:
                - 4Uj
                - ""
                - FYHqO
              - key: KvBQTDxp1h
                operator: Ȗ
              - key: X9z5s03xxx3
                operator: žD?cƢôʕ騼%bx
                values:
                - Adkq
                - 3eP
            namespaces:
            - aduq
            topologyKey: 9RzUTpFi
          - labelSelector:
              matchExpressions:
              - key: "4"
                operator: c鸚Ľ酌ĕ玾rǵÄ
                values:
                - kYnbqv
                - ""
            matchLabelKeys:
            - vFJrs
            - hso
            - QKrj
            mismatchLabelKeys:
            - lB8SMB
            namespaces:
            - r02c
            topologyKey: xKaS
          - labelSelector:
              matchExpressions:
              - key: if
                operator: JŖ9ɴµ鑹/Ĳ焸Ħ£嚙āʫ[@[
                values:
                - M0hOLCK
                - u0
              - key: ZSjEKJsL3
                operator: v7現ů.ɔɸ垚黌雱袇
                values:
                - AT
                - Z0egr4aN6dv
              - key: tMsupB1xD
                operator: '}ž蘔Ǆ_ȿ瑾暿bMb¼'
              matchLabels:
                QgeIJ: Mn3X5l
                ZCnTNKJl: btJk3Jawl
                ygz: TD
            matchLabelKeys:
            - XH2n0G2w
            namespaceSelector:
              matchExpressions:
              - key: XubSMnhx
                operator: Ȱ啐kD裿/I駉
                values:
                - 8W6
              - key: 3f
                operator: ""
              - key: 3gugWW
                operator: 絁ílV¾z'@ʆ鎳m假竭嗓Ŭ5膔軸
                values:
                - 36yfO
            topologyKey: bi50gE3
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - Q9
        - JLCZc
        - c
        command:
        - /manager
        env: []
        image: :1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 304
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 302
          periodSeconds: 723
          successThreshold: 355
          terminationGracePeriodSeconds: 788
          timeoutSeconds: 861
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 620
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 459
          periodSeconds: 854
          successThreshold: 952
          terminationGracePeriodSeconds: 872
          timeoutSeconds: 356
        resources:
          limits:
            cpu: "615"
            memory: "532"
          requests:
            cpu: "418"
            memory: "17"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - QiG
        options:
        - name: pK4d7m
          value: W4K1f4IZaag
        searches:
        - 5w
        - t96y3H
      dnsPolicy: 堓)危沜ƭȵ`šǅbC
      ephemeralContainers: null
      hostAliases:
      - ip: lZ2v
      - ip: Oy73nSH
      hostIPC: true
      hostPID: true
      hostUsers: false
      hostname: RpdEt
      imagePullSecrets:
      - name: KRByA
      - name: 3rKSw
      initContainers: []
      nodeName: cK8kqsk3XW
      nodeSelector:
        8eySA6Mq: YE9kw
        Wz751pxdu: 49WYQ2U
        wzW4: fX
      preemptionPolicy: 學
      priority: -1208746674
      priorityClassName: rhail5Pt
      resourceClaims:
      - name: ""
        source:
          resourceClaimName: qmsa
          resourceClaimTemplateName: ihdZu
      restartPolicy: /=畝XįŨ鶓ɦ`Ǳē槯蒋Ō橥\Ɯŉ
      runtimeClassName: EdXVp2q2j
      schedulerName: JokA5C1
      securityContext:
        runAsUser: 65532
      serviceAccountName: GP
      setHostnameAsFQDN: false
      subdomain: Cf
      terminationGracePeriodSeconds: 524540695880788860
      tolerations:
      - effect: ȯtȕu恡Ï^珢堯ƍɕ>n浀
        key: aZZW3
        operator: ¬
        tolerationSeconds: 1736400152056944000
        value: dh5
      - effect: 爧囶Ę鯖HýĢ旴¶Ư仍ÏŹCǔǢƝÊ0
        key: aGmmwu
        operator: 礮Ls鱆CşD
        tolerationSeconds: -5598207332444537000
        value: x1MEp
      - effect: Õ檉Ȏſƹ霫冬8ȮL<ƫʇ!Ɖś曊ȪƸ
        key: kb
        operator: 禍Í}
        tolerationSeconds: -7540897080678534000
        value: hJ
      topologySpreadConstraints:
      - matchLabelKeys:
        - ""
        - hWekEfgyZee
        - rLF0UT
        maxSkew: 481101461
        nodeAffinityPolicy: 莭.厵K鐥ȼ
        nodeTaintsPolicy: x×ɷʘĞR
        topologyKey: 0p
        whenUnsatisfiable: 癯
      - labelSelector:
          matchLabels:
            ZL: Ou8yKgj
            dwi: cR11
        maxSkew: 750139390
        minDomains: 1215610347
        nodeAffinityPolicy: IǞ陣Ɯ致g璪Ȉŏo駗
        nodeTaintsPolicy: 初藂q:墄N
        topologyKey: WP4QXxrf
        whenUnsatisfiable: ǋČI蒓2Ċ檗毦I_\鶚5柴ŨhȖ
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: cuO
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    Wcv: XlJt1il
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "78"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    yhRLU: bn88A
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - 78-webhook-service.default.svc
  - 78-webhook-service.default.svc.5pvLBDJ
  issuerRef:
    kind: Issuer
    name: CbM6ZNJQ-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: cuO
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    Wcv: XlJt1il
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "78"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    yhRLU: bn88A
  name: CbM6ZNJQ-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: CbM6ZNJQ-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 78-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: CbM6ZNJQ-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 78-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: Qi
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-066.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    1qZ: ""
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 19ztDQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 4s
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: K9Pwc
    health:
      healthProbeBindAddress: Pk
    kind: Tfpa
    leaderElection:
      leaderElect: true
      resourceName: zgg
    metrics:
      bindAddress: Lzl8T1yaT1
    webhook:
      port: 379
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    1qZ: ""
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 19ztDQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oWZxG4ft6-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    1qZ: ""
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 19ztDQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oWZxG4ft6-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 19ztDQ
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    1qZ: ""
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 19ztDQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 19ztDQ-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 19ztDQ
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    1qZ: ""
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 19ztDQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oWZxG4ft6
  namespace: default
spec:
  replicas: 266253858
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 19ztDQ
  strategy:
    rollingUpdate:
      maxSurge: 344725018
      maxUnavailable: 538463142
    type: u職'鐠瀈殝J槉
  template:
    metadata:
      annotations:
        Kuup: 0RGT7k
        PuGCj: pBL8mQlrvD1wIq1I
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 19ztDQ
        eSIZX: ylvYxvF
        i: f
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: bCn
                operator: 鼃¤礏欕寕o>Ȼ«PĆ+m梞尗
              - key: NEloyYm
                operator: ʃñg4璓Õ偛萕M_潼蘜$糱ɶ拚傢sȗ
              - key: Zb1
                operator: 咂ŚǝI
                values:
                - sNUUx0
                - j8AEGgOD
                - Lnoj
            weight: 499737970
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: RY
                operator: kɑ憚誷醠ƅɓ澆簎ƫM4稃y良
                values:
                - iQQfAxq
                - z3CkqXav
              matchFields:
              - key: "3"
                operator: 鈛<_ȷ瞛Ʃ餇貨椢Ÿ猊F岤ƁɄ堙ǁk穽
                values:
                - nLyOiE
                - s5K8bkg
                - KjJZJkZ
            - matchExpressions:
              - key: C5NrGF7
                operator: ǳ=X练姬ǽ贂ƣ
              matchFields:
              - key: mbsDXueRj
                operator: '{ī?鏤TŀČ盞ȱƯ籒礽歔Ⱦq'
                values:
                - hKYLiv
                - WzlwjJ4w0
              - key: wVzT8MARQn
                operator: ǫZȡ嵔|
                values:
                - aQU
                - WmS
            - matchExpressions:
              - key: IrRyd
                operator: ""
                values:
                - j9
                - 4r
                - asVGT
              - key: gHnFgdtA
                operator: ųFÆȉ塊ľâ槏0qEƯ
                values:
                - JipRy1WN
                - tGQG
                - F1Kz3Rk
              - key: g
                operator: 缈ĶÂİ}棷戆鵷ʣ0I
                values:
                - xoXe2malhBmQ
                - bDLEDEUU
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ziVjVgVS1
                  operator: 龰笍hǲʢɜǟ揧ùɏ
                  values:
                  - s8
                - key: fUbqzS
                  operator: /6hȐĥûʒg妁菔炊(dkX
              matchLabelKeys:
              - jg
              - b
              - WtiMVCB
              mismatchLabelKeys:
              - fv0XiY
              - pCSbL
              namespaceSelector:
                matchExpressions:
                - key: 56so
                  operator: ċv鬉鸩ȤȵŞń暃Ȱe
                  values:
                  - i
                - key: ""
                  operator: ""
              namespaces:
              - BvcAeP
              - ""
              - v63k
              topologyKey: sZtGVIQui
            weight: -832216521
          - podAffinityTerm:
              mismatchLabelKeys:
              - CYt
              - v
              namespaceSelector:
                matchLabels:
                  ja: x
              namespaces:
              - kdbd4ONN8
              - mBsDIT3W
              - jek
              topologyKey: 8L
            weight: -1937454382
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: UWHmykY:47nK
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 624
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 221
          periodSeconds: 313
          successThreshold: 335
          terminationGracePeriodSeconds: 835
          timeoutSeconds: 649
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 733
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 728
          periodSeconds: 817
          successThreshold: 759
          terminationGracePeriodSeconds: 380
          timeoutSeconds: 497
        resources:
          limits:
            cpu: "305"
            memory: "992"
          requests:
            cpu: "838"
            memory: "463"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets:
      - name: T
      - name: nOg2mwF
      - name: i
      initContainers: []
      nodeSelector:
        pM: PqhP2g6Tgu
      securityContext:
        runAsUser: 65532
      serviceAccountName: 4s
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: dĲ/缱腀ʛ,Ô銉Ő
        key: HzSB
        operator: ř挻ĳu厅笀üǑ
        tolerationSeconds: -7103754535413956000
        value: T9rytQtkmkQ
      - effect: 琞痡4ï劀lĝĝW幩魋bêǇ
        key: LihyJ8V29
        operator: é韹ǵ*ø
        tolerationSeconds: -2267351823149110500
        value: N2sZniPW
      - effect: '"l敻ȓ'
        key: E
        operator: ĕ亓nÈţ`歠ȏws熻1ʆN蒔驈Ƀx
        tolerationSeconds: -411540980645837600
        value: uFHD2K
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: Wy5KjIn
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    1qZ: ""
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 19ztDQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - 19ztDQ-webhook-service.default.svc
  - 19ztDQ-webhook-service.default.svc.uM
  issuerRef:
    kind: Issuer
    name: oWZxG4ft6-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: Wy5KjIn
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    1qZ: ""
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 19ztDQ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: oWZxG4ft6-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: oWZxG4ft6-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 19ztDQ-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: oWZxG4ft6-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 19ztDQ-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 4s
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-067.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: k6
    health:
      healthProbeBindAddress: bo
    kind: tiT1t
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: E
    webhook:
      port: 242
kind: ConfigMap
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: PxBN
subjects:
- kind: ServiceAccount
  name: hqG9jAF
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: PxBN-election-role
subjects:
- kind: ServiceAccount
  name: hqG9jAF
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: PxBN
subjects:
- kind: ServiceAccount
  name: hqG9jAF
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: PxBN-rpk-bundle
subjects:
- kind: ServiceAccount
  name: hqG9jAF
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: axjCvWi
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: axjCvWi-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: axjCvWi
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN
  namespace: default
spec:
  replicas: -1982289334
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: axjCvWi
  strategy:
    rollingUpdate:
      maxSurge: 1568786111
      maxUnavailable: 430364916
    type: ǣ捕
  template:
    metadata:
      annotations:
        7LmO7fVg: QCIxppkhJ
        Yy: eZLU0
        nTqj1D0: u
      creationTimestamp: null
      labels:
        "3": nQZ978Pf
        9HNKACRCp: Wq6g
        YWgWYGNSgoEW: 46OXI
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: axjCvWi
    spec:
      activeDeadlineSeconds: 3041725903292901400
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: wRp3
                operator: 傤wsþ哨踻xƕ冘x鱊%
                values:
                - ""
                - b5g
              - key: 4tJXosqX
                operator: ʀ
              - key: Flx
                operator: sŌ藾Ŵ*ʄ鍛ƞ~ġOm錭÷Jɱ|
                values:
                - 6s
              matchFields:
              - key: TIC8i5C0IxFuH
                operator: 7]C偼W盔9Ȏ&ņ佗Vʝ蒥ǖ
                values:
                - SoZN
                - IEMENHh
              - key: mjoG
                operator: ÿ
                values:
                - 2tgpD
            weight: -197157498
          - preference: {}
            weight: 1014387204
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: E4oSEf8mL
                operator: ʐș/.湭嘶råĺ哥ʌcÈ劻鏹(羢j
              - key: yNsM
                operator: 埙³Á掌Ķ孝屺ʄ火r^ȶqƁ
              - key: "5"
                operator: '{Ɓ銬年ń'
            - {}
            - {}
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: eiDlj0T
                  operator: ȷzþ8Mu璲DƊŹwz
                  values:
                  - "y"
                  - ""
                  - 7o8
              mismatchLabelKeys:
              - 5O6E
              - e
              - y2D1
              namespaceSelector:
                matchExpressions:
                - key: jRyqPA
                  operator: ş獖Ǒ胐9蘩拺戦ʉS忲螺Q傓Ȉ
              namespaces:
              - fH2J2u
              topologyKey: ""
            weight: 1847247856
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: mNEX
                  operator: ɰ7ǯm
                  values:
                  - mrDNh
              matchLabelKeys:
              - 4vs2U8
              - Xpck
              namespaceSelector:
                matchExpressions:
                - key: Vaug52udNl
                  operator: ƄEǈ
                  values:
                  - iA2z
                  - AZL2acrB
                matchLabels:
                  1NiS5: lW2
                  HrdPjxielsLEQA2: VQaT
                  f: 1VgftZ03q
              namespaces:
              - fkOH
              - 0ciTxy
              - NfrvAO
              topologyKey: lbtNGOX
            weight: -1821939424
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: zhXdDw2g
                  operator: ""
                  values:
                  - fRD1mnH
                  - x6a
                  - IVVxA
                - key: CFTD3DnuC
                  operator: 茗嚯*槇妍ȐZ+q詻ƞ!罬ɿǅʓ
                  values:
                  - C
                matchLabels:
                  9r: pqIJ8L
                  Z9YxgpeprM: 7Mgpqn2
              matchLabelKeys:
              - iZ
              - ar
              mismatchLabelKeys:
              - ""
              - muZKSOH
              - LgEI
              namespaceSelector:
                matchExpressions:
                - key: zghTFptxP
                  operator: Ǟƛ颷z#Ƣ脒Ɍ%:ɠ飶³獃ƥìşn
                - key: WaY1G5jY
                  operator: 匍隼ú1ǚ]8帻蘋庹Đ')¡f尕s
                  values:
                  - 3Zcb9
                - key: ""
                  operator: ƕëɷʤH犆-趟|
                matchLabels:
                  L: wK9ecYzyVFT
              namespaces:
              - PEbhG2
              - il
              topologyKey: aXR
            weight: 2032418302
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  5qGp6SG: "95"
                  mEYK: M
                  pZp7Dnms: 2z23PO8YY
              matchLabelKeys:
              - "3"
              - jmHY8X8
              topologyKey: rr3EBfkMO
            weight: 712720701
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                B: cDSmpXzN
                Egu: tUl9KQp
                yr: wx
            namespaceSelector:
              matchExpressions:
              - key: 3BgtPvpmm
                operator: 楣áť抔镭]ň{畈Sƙɐʝȹ墠Ⱦ/
                values:
                - Z9
              matchLabels:
                NH3TD: rpvAxz3mom
                Za: UvrzQgvC2Ft
            topologyKey: YbKFvWIJ
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: kBJV23:boxAxRu
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 957
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 464
          periodSeconds: 489
          successThreshold: 209
          terminationGracePeriodSeconds: 584
          timeoutSeconds: 671
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 21
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 909
          periodSeconds: 439
          successThreshold: 126
          terminationGracePeriodSeconds: 392
          timeoutSeconds: 692
        resources:
          limits:
            cpu: "27"
            memory: "260"
          requests:
            cpu: "66"
            memory: "643"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - mXmDRel
        - "0"
        - ""
        options:
        - name: x4P
          value: BZIU
        - name: 6v53s
          value: "30"
        - name: K5fNJ
          value: p4y3xY
        searches:
        - 5Tz92V
        - W4XnFCMXuw
      dnsPolicy: ȫĥ\yƪ凉q撰-盳梑Ų鯂4悛ŭVŴł
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - ARm
        - 5mbeENc
        ip: HpEC
      - hostnames:
        - gVP
        - d3B
        - B1
        ip: 0Kvbz
      - hostnames:
        - RFtp
        - 5L
        - 6jJ0pQxwY
        ip: wmVMfSFk
      hostNetwork: true
      hostUsers: true
      hostname: nz
      imagePullSecrets:
      - name: MWx33gQ
      - {}
      - name: t2p
      initContainers: []
      nodeName: KGkN15
      nodeSelector:
        7nv8NF: 8bQE
        E1TRY: zn
      preemptionPolicy: ǣ]ɕCûmF
      priority: 1012712017
      priorityClassName: XRvFc
      readinessGates:
      - conditionType: ',鬝啪Ý'
      restartPolicy: ʏʟ0u[ǅŲȚ)呲火}b涱öƜɌ趥鿦
      runtimeClassName: vK17LmnrAJ
      schedulingGates:
      - name: D2h
      - name: dXaL8Qq
      - name: tGPE
      securityContext:
        fsGroup: 1945406407046873300
        fsGroupChangePolicy: Always
        runAsGroup: -5600140835378511000
        runAsNonRoot: false
        runAsUser: 3194905015790483500
        sysctls:
        - name: dbg
          value: Ux3p
        - name: DixIbluM
          value: RGtigIISV
        - name: tBE
          value: AC0jFpBZL
      serviceAccountName: NmN2
      setHostnameAsFQDN: true
      terminationGracePeriodSeconds: 3178304874460420000
      tolerations:
      - effect: '!ɀ卐ɍ/9諽8Ĕ^'
        key: 44gXm
        tolerationSeconds: 8277934016578035000
        value: anUSxHGOw9Y
      - effect: 判`Ǖɜ臘峪ǧ;D
        key: h
        operator: şǲcŒƇʝ売fǿȑ咤縪3Řv
        tolerationSeconds: 4280426830307880400
        value: L4ckl5Et
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: Rt7yVKtRrPNIxb
            operator: 綘ǗPw譯Ȩ浌貝oLVY#Â啜j窜恸
          - key: LHJo
            operator: Ȭ讅嬗捀下ǬŜ
            values:
            - lj7FiOLajQ
            - ONQ01y8
          - key: MsR
            operator: ""
            values:
            - RBYb2
        maxSkew: -1030960538
        minDomains: -429957677
        nodeAffinityPolicy: ʒ诣-
        nodeTaintsPolicy: ɀ僅
        topologyKey: nk
        whenUnsatisfiable: éɘ.R5鏝àå=澕
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: Gza
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - axjCvWi-webhook-service.default.svc
  - axjCvWi-webhook-service.default.svc.HgZvm
  issuerRef:
    kind: Issuer
    name: PxBN-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: Gza
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    "": knwqEfPVTu
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axjCvWi
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: PxBN-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: PxBN-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: axjCvWi-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: PxBN-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: axjCvWi-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: hqG9jAF
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-068.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: d7O64pqge
    health:
      healthProbeBindAddress: nqsbjJiH
    kind: vlqn1EfQw3x
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: ""
    webhook:
      port: 111
kind: ConfigMap
metadata:
  annotations:
    MXZN: GguW
    t: 64UZsJyzd0Fl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bNOJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    fYyBJj2Al: 00TYG
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: CFnO9s-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    MXZN: GguW
    t: 64UZsJyzd0Fl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bNOJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    fYyBJj2Al: 00TYG
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: CFnO9s-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: bNOJ
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    MXZN: GguW
    t: 64UZsJyzd0Fl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bNOJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    fYyBJj2Al: 00TYG
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: bNOJ-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: bNOJ
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    MXZN: GguW
    t: 64UZsJyzd0Fl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bNOJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    fYyBJj2Al: 00TYG
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: CFnO9s
  namespace: default
spec:
  replicas: 469365847
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: bNOJ
  strategy:
    rollingUpdate:
      maxSurge: 279731675
      maxUnavailable: 959318152
    type: ǺɹW%M搓
  template:
    metadata:
      annotations:
        1eBjL: 7dCt4IX
        ERZ5g: ""
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: bNOJ
        hZcnuz: RFVo8VHB4
        tZVMLHI1: 2e7fk
    spec:
      activeDeadlineSeconds: -1705312198462537700
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: i8
                operator: 鶨b驍ǾÂɈgʇ洟Y+ĐĲ秸
                values:
                - OsCE
                - Iq0KpC8b7
                - 9h
              - key: wd8p
                operator: l
                values:
                - QukCF
              - key: vDwZB
                operator: jK纮毄蝌
              matchFields:
              - key: 8Z
                operator: ''','
                values:
                - G1OUWwe
                - lr
                - nVwaLdM
              - key: 9bM6Ejx
                operator: \OŌi艠Ĵ萗:ɟ岔b珌4
                values:
                - Cx
            weight: 2123660020
          - preference:
              matchFields:
              - key: 1tw
                operator: É妡褂緮Ş蹤îX伌珹Ʒ糤Ş¿瑥Zə
                values:
                - qDFyAM4q
              - key: TRJrS2KBFsn
                operator: 蝞?4鯚
              - key: A9w0shIOe
                operator: FɨŸɆƼ咉Xyk皰]D¼
            weight: 1241138408
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: h9HCbqo
                operator: Ō[4两4 9罈廍ǄôʅǠq饀zh
              - key: UM
                operator: ɣ?恗.ĠƴYÂ即径"L
                values:
                - IiSf4OydHDi
                - ""
                - udaPvX
            - matchFields:
              - key: B
                operator: 泐Õ
                values:
                - Yg
                - z
                - 2aL
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: PHTg
                  operator: qU斠ǭ鄧Ȧ鬞I荎罜钢Ȓ徵ɺnt饨x4
                  values:
                  - Xxngg
                matchLabels:
                  E55M: 5XWJU
              mismatchLabelKeys:
              - A2pJfZLq
              namespaceSelector:
                matchExpressions:
                - key: tRzdVFPrUU
                  operator: '>?ºG奅''愠'
                - key: hYtE
                  operator: 'WŦ梏嵻ɵ@ʍ枭D4ż:'
              namespaces:
              - N3cup14cvV
              topologyKey: 4q7
            weight: 1803004877
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                PUqk: OOASm
                aVhG: G
                kCvGTHgW: QuKzd
            matchLabelKeys:
            - AemkoN
            - 14TGfGu7joP
            - 31KoX
            namespaceSelector:
              matchLabels:
                7zlC: xzrAfMezVw1
                EIlYy: sOG3m
                WEiyw52S4Ry: qqluP
            namespaces:
            - zrjMH
            - ""
            - rUf0pMp4
            topologyKey: ZrnvTR6hLJWm
          - labelSelector:
              matchExpressions:
              - key: 2o3JO
                operator: ɔ鼘JǰW
                values:
                - ZEIaf
                - W7zSM7
              - key: TtAoc
                operator: 屈ɜ凋諗Ù1辚=`0ǧ译暈:r
                values:
                - czEeFJr6rr
              - key: zDK
                operator: 櫲*ɗ1ǒU窚ƅ­
              matchLabels:
                6QR4V: q4
                al7wjCH: Diz9
                xTq: JXTV9Q
            matchLabelKeys:
            - nq24l
            - qnZWSZ
            - g
            namespaceSelector:
              matchExpressions:
              - key: xDoGIoFFP
                operator: '@頄ȫ;夈'
                values:
                - nWbBqNhHt
                - c8QL
              matchLabels:
                VJcC: qKz15NI
                mFF: pFS
                xStpVFZD3l: Ox4DD72
            namespaces:
            - jk
            - PcKpFF1
            topologyKey: qJ
          - labelSelector:
              matchExpressions:
              - key: SU4p0A35nW
                operator: ""
                values:
                - 9S8F
                - IdUcrwI
                - DB7y
              - key: KdXTw
                operator: 遟G笻m
                values:
                - MFPEmv
              - key: 1cqycMQPiR
                operator: ""
                values:
                - LzQr8kbU
            matchLabelKeys:
            - ""
            mismatchLabelKeys:
            - UlhGXW
            - WKdRue0e
            - LXBpBIJ
            namespaceSelector:
              matchExpressions:
              - key: uwWKVm
                operator: ɜX[莄噮ȝȄV檨ŏm
              matchLabels:
                ByZyC2j: ra
                qghvd4: hP3
            namespaces:
            - Uqd
            - 5z
            topologyKey: 2koIfv
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - dWzxr3xXRM
        - vEF
        - DAM
        command:
        - /manager
        env: []
        image: 7wdG0:HXXm
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 945
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 682
          periodSeconds: 459
          successThreshold: 594
          terminationGracePeriodSeconds: 298
          timeoutSeconds: 41
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 635
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 256
          periodSeconds: 813
          successThreshold: 356
          terminationGracePeriodSeconds: 275
          timeoutSeconds: 629
        resources:
          limits:
            cpu: "746"
            memory: "288"
          requests:
            cpu: "620"
            memory: "29"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - iJM
        - XDRoJ6YLA
        searches:
        - ""
      dnsPolicy: "y"
      ephemeralContainers: null
      hostPID: true
      hostUsers: true
      hostname: 6SYwau
      imagePullSecrets:
      - name: 1K
      - name: Oiv9Q40
      initContainers: []
      nodeName: CvCXOqSOde1
      nodeSelector:
        ZmT: ""
        imEN0Z1: nxrD
        zWlEzg: 08Lmn
      preemptionPolicy: 灸艟 Z嬡騱
      priority: -1528017339
      priorityClassName: rMxc6W
      readinessGates:
      - conditionType: ɏX黃Ȧ8Ui郜鎼i
      - conditionType: 筧ķ!欸Ⱦ掜7艭菁ȫ泡ǯ
      resourceClaims:
      - name: gnBb0HOM
        source:
          resourceClaimName: rwpsen
          resourceClaimTemplateName: aKx
      restartPolicy: 敊暈泾pD紌Ȓ愫Aʏ嚢6T
      runtimeClassName: ouiV
      schedulerName: mHTNvj
      schedulingGates:
      - name: F0TuqyX
      - name: Fh1
      - name: ""
      securityContext:
        fsGroup: 2245000337122880000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 384494554013477250
        runAsNonRoot: true
        runAsUser: 65532
      serviceAccountName: Ns
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: WKYlR
      terminationGracePeriodSeconds: -7008269543804538000
      tolerations:
      - effect: éȨ椬NūP±鞉煞ǟBE驒ȵȓìƳ蟖{
        key: k
        operator: ʖʞ輂Ĭ{Ǆȭ臼ƊG俅
        tolerationSeconds: 6233334905321045000
        value: jGlyr
      - effect: ɸƸľȼQVm{惁gȓ曂w1C
        key: TYCa
        operator: 薏!ȴŋ鰛
        tolerationSeconds: 6216053217729322000
        value: kKA74L
      - effect: SD'瞎P*缁
        key: me1
        operator: 寤
        tolerationSeconds: -2750578968371669500
        value: WyiR
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: AuC8Y61
            operator: '{瘰r爘*ǰ'
            values:
            - ttlC3AE
            - 1B
          - key: 5r
            operator: 脕z條*ɮfȩʖ
        matchLabelKeys:
        - WWjXY4KNR979
        maxSkew: -1184923908
        nodeAffinityPolicy: íĈǠ蟔
        nodeTaintsPolicy: ƹ儯丢*0発P
        topologyKey: EI
        whenUnsatisfiable: 妩Ǩʘ頨喁^ǌǜȅǚIw堄駬ɕ瞗C膵
      - labelSelector:
          matchExpressions:
          - key: OFRTlW
            operator: ĉhɽĦE
            values:
            - WZGO
            - f83Jp
          - key: EuhMF
            operator: ɋ&掱·a2¨
            values:
            - iNF0
            - IeElBaz
            - JcO
          matchLabels:
            lufNES: EWoWd0
        matchLabelKeys:
        - d
        - Q9mw8
        - kyBs1
        maxSkew: -1851729964
        minDomains: 90497520
        nodeAffinityPolicy: "N"
        nodeTaintsPolicy: 7瑾俎ȟTF賩Ĥ裑ƥÎǫ蹔填F"
        topologyKey: dFAI44X
        whenUnsatisfiable: ~淓焒&ŚZ様[tȭÏ,ųȭ
      - labelSelector:
          matchExpressions:
          - key: Qqyo1kCJ
            operator: 閆b睩ēW襌Z媖CS%ɮ衻Ğ'R
            values:
            - udM
          matchLabels:
            bh6Z: L7m
            j8WmMou: SCFrQIqK2ikBf
            oi: C5iE
        matchLabelKeys:
        - p7Op0mVOZ
        - WyCG15f
        maxSkew: -2008023906
        nodeAffinityPolicy: '&渊á E$叩>ãïʆ'
        nodeTaintsPolicy: 芞
        topologyKey: IPa5T
        whenUnsatisfiable: nČ俪辨u'Ł9Yė°竣]ć擯>b屠ƕ
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: j
      - name: Bo
      - name: IRrU6r
      - name: bKEcelo
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    MXZN: GguW
    t: 64UZsJyzd0Fl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bNOJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    fYyBJj2Al: 00TYG
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - bNOJ-webhook-service.default.svc
  - bNOJ-webhook-service.default.svc.NKh
  issuerRef:
    kind: Issuer
    name: CFnO9s-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: j
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    MXZN: GguW
    t: 64UZsJyzd0Fl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bNOJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    fYyBJj2Al: 00TYG
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: CFnO9s-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: CFnO9s-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: bNOJ-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    MXZN: GguW
    t: 64UZsJyzd0Fl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bNOJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    fYyBJj2Al: 00TYG
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: CFnO9s-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: bNOJ
      app.kubernetes.io/version: v2.3.8-24.3.6
      fYyBJj2Al: 00TYG
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: CFnO9s-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: bNOJ-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: CFnO9s
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-069.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    HQJtGQ: "4"
    J1VZibc: dy4OXHkP
  creationTimestamp: null
  labels:
    2RSj: YyoP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "N"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 9q
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations:
    EEjDa: KlmyGoaLD
    eK9S1me: d7Jx75gs
    x: WycC4D7Xr
  creationTimestamp: null
  labels:
    2RSj: YyoP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "N"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: zLyH-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    EEjDa: KlmyGoaLD
    eK9S1me: d7Jx75gs
    x: WycC4D7Xr
  creationTimestamp: null
  labels:
    2RSj: YyoP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "N"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: zLyH-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: "N"
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    EEjDa: KlmyGoaLD
    eK9S1me: d7Jx75gs
    x: WycC4D7Xr
  creationTimestamp: null
  labels:
    2RSj: YyoP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "N"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: N-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: "N"
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    EEjDa: KlmyGoaLD
    eK9S1me: d7Jx75gs
    x: WycC4D7Xr
  creationTimestamp: null
  labels:
    2RSj: YyoP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "N"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: zLyH
  namespace: default
spec:
  replicas: 465449617
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: "N"
  strategy:
    rollingUpdate:
      maxSurge: 1716441912
      maxUnavailable: 1988867546
    type: DoW梃Ǉ珇?÷ŧŷGcsʃ囀i跿v閚
  template:
    metadata:
      annotations:
        "": vJ
        QtG: Hi9KT5pHY
        Vb79: 42karr1J
      creationTimestamp: null
      labels:
        DLTGtucciFffWT: zpXmi
        PaXb: VwCnSE
        RFcNaS: Gx9GL
        Y9: my
        YEgVl: ""
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: "N"
    spec:
      activeDeadlineSeconds: 7704266910641800000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchFields:
              - key: ""
                operator: 鄺ƴƨ隋靿嫑苕駒Ķ梤
                values:
                - GIs
                - ""
                - csrvTLc3Op
              - key: PHMEf
                operator: 黄ɵ空ʪhȾ¸ÉǊİf垉qx{蘮Ƒ颓
                values:
                - Z9MoXeFiqyz
                - XcUIb
              - key: o1S1BSCoJHL
                operator: 蝊蛷Č勅ưä^i"鉤晄ƒĊ;
                values:
                - PgA7xsO
                - C
                - cL
            weight: 2065024832
          - preference:
              matchExpressions:
              - key: FdO
                operator: Ȗ*Ɓ
              - key: Ncs7mi96L6
                operator: 囮銕Ŋ霈ɼå筹Ɩfʕ磲6µ蓪颡淖
                values:
                - wV53KgeWARD
                - GF
                - jB31k
            weight: -208456974
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: uZsr
                operator: L錄X閵远ł
                values:
                - m8I3PZcF
            - matchExpressions:
              - key: yAt
                operator: Ⱦ乒Æ蠑ɡʑ4Ȫ矗?
                values:
                - q
              - key: qYW
                operator: \w
                values:
                - 2mo9LHD
                - wCFX
              matchFields:
              - key: UXs6xwxn3
                operator: kɸO\嵀竰9婍莥襮餐屇ɟzĖ蛫墰
                values:
                - C
                - 07NFVz1Lq
                - 2osAV9
            - matchExpressions:
              - key: KowC
                operator: ""
                values:
                - 9Lt5
                - AGiTVS
              - key: 7crCw
                operator: 懵
                values:
                - RzMiQ
              matchFields:
              - key: aiXn
                operator: 猯媫ɠ×锊H8ȳgūTĚĨ
              - key: ""
                operator: 詃ûŦ0琝灎ɼ
              - key: FjLA
                operator: 穤 噪&%ɮy龨騦罙Ư¯剩=(聬彰
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: kwjiJdVxd
                operator: ɨ烚鹳Ŝ陎)
                values:
                - "3"
              matchLabels:
                dcdgYC: Pv9sOER0M
            namespaceSelector:
              matchLabels:
                gL01: YoqqG
                yy: Eliiemq5
            namespaces:
            - QHas
            - KQG8q
            topologyKey: I
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - oxdTcKZmy5
        command:
        - /manager
        env: []
        image: xmIP4HeALlQ8:Vk
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 41
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 771
          periodSeconds: 259
          successThreshold: 775
          terminationGracePeriodSeconds: 289
          timeoutSeconds: 787
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 309
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 959
          periodSeconds: 499
          successThreshold: 424
          terminationGracePeriodSeconds: 603
          timeoutSeconds: 287
        resources:
          limits:
            cpu: "310"
            memory: "803"
          requests:
            cpu: "923"
            memory: "732"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - w
        - JIz
        - lZX2s
        options:
        - name: 298T9EO
          value: RX5p
      dnsPolicy: anº笓辝K*Ƞȫ劭
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - ip: "87"
      - hostnames:
        - LR
        - ztMTP
        ip: WXU1H
      - hostnames:
        - HK
        - HZog
        - ki
        ip: oy
      hostIPC: true
      hostNetwork: true
      hostUsers: true
      hostname: hfPH0
      imagePullSecrets:
      - name: hiSb
      initContainers: []
      nodeName: 5JBxXslIgCEb
      nodeSelector:
        62Uu: AFw4hagGF
        OPJh0: 9bWd
        SSr1IGR: ""
        cJO5: 3skt
      preemptionPolicy: ""
      priority: 1801948378
      priorityClassName: 0mynE
      readinessGates:
      - conditionType: À妔噜u塋ɽė¥
      - conditionType: 聾Ćý郘āŦ5Ȱȿ铷4欪蓥
      - conditionType: q
      restartPolicy: QɬV猇荎秖
      runtimeClassName: z3Fvzfv
      schedulerName: 7Ql5Wgrk
      securityContext:
        fsGroupChangePolicy: Always
        runAsGroup: -289679913673291100
        runAsNonRoot: true
        runAsUser: 3277457960714383400
        supplementalGroups:
        - 4004021037495296000
        - -7849641669981918000
        - -2841407942728574500
      serviceAccountName: dd823A
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: UIv
      terminationGracePeriodSeconds: -3127580359084209700
      tolerations:
      - effect: O6
        key: S94cTX5
        operator: ʘ~梧9絛R<Ǯ姺鵍薓ȄƆÜɃ擎Ǹ垴
        tolerationSeconds: 471416478218419140
        value: 9Hu
      - effect: :轚řYʟ
        key: pfuyWy
        operator: Ĥʗ
        tolerationSeconds: -5247169065928297000
        value: 5yiC
      - effect: Ȏ璝qɲD蘎,
        key: O1EWo
        operator: 況6ʡ鞶潃ț儼涘沬
        tolerationSeconds: 6277993023857373000
        value: l
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: s2nFJW
      - name: ""
      - name: PyZLCyzj
      - name: R
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    EEjDa: KlmyGoaLD
    eK9S1me: d7Jx75gs
    x: WycC4D7Xr
  creationTimestamp: null
  labels:
    2RSj: YyoP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "N"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - N-webhook-service.default.svc
  - N-webhook-service.default.svc.W4sbkdoCM
  issuerRef:
    kind: Issuer
    name: zLyH-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: s2nFJW
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    EEjDa: KlmyGoaLD
    eK9S1me: d7Jx75gs
    x: WycC4D7Xr
  creationTimestamp: null
  labels:
    2RSj: YyoP
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "N"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: zLyH-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: zLyH-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: N-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: zLyH-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: N-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 9q
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-070.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 9aGDc17j
    health:
      healthProbeBindAddress: ND
    kind: 9A80iCR
    leaderElection:
      leaderElect: false
      resourceName: 1pe6680
    metrics:
      bindAddress: KfUbSQ
    webhook:
      port: 358
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: m7Z5VmKktJ
subjects:
- kind: ServiceAccount
  name: 8QmVHY8X
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: m7Z5VmKktJ-election-role
subjects:
- kind: ServiceAccount
  name: 8QmVHY8X
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: m7Z5VmKktJ
subjects:
- kind: ServiceAccount
  name: 8QmVHY8X
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: m7Z5VmKktJ-rpk-bundle
subjects:
- kind: ServiceAccount
  name: 8QmVHY8X
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: nUS
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nUS-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: nUS
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ
  namespace: default
spec:
  replicas: -1022601339
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: nUS
  strategy:
    rollingUpdate:
      maxSurge: 1074023694
      maxUnavailable: 1190852902
    type: ɈļčŪ亵\娛Q讒惂Ȱʍ灎īzɉ|稥|
  template:
    metadata:
      annotations:
        He6ymbE: f4kMrSEEXyH
        z6: n4r
      creationTimestamp: null
      labels:
        "": eTAV6
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: nUS
        o7qWs: k1Qga
        vRShZ: AisxX
    spec:
      activeDeadlineSeconds: 3148841434328277000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: b
                operator: 3萁ʀV!jc!卺S懐ʖ瑆.
              - key: 5E
                operator: 籱巓/赒Ąʍ\Ƿ|踐ŋoǹi&蔘
                values:
                - JgIazb
              - key: wY0bLvbEknV
                operator: 损H盆嶠ʂäə\à顐Gʩ
              matchFields:
              - key: 5bvU6ftIWw
                operator: ʡġû£UŌx
                values:
                - ""
              - key: B3Bz
                operator: 芓ĔĖǁ;Ƴɥȅɍȇ=ɼ4W挌Ʒw3
                values:
                - GK0Dngy
                - SWb8LBy6r
              - key: 2ntc7T
                operator: Ë7Ġʕř己ʅɫ¿巶哛Ȩ
                values:
                - ""
                - Lhd3y
                - 2WSJMRmD6wRk
            weight: 1037587274
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: 4n86
                operator: DɊǟa爷%撧>絟+N筟] 芉讫檹
              - key: Xoarh
                operator: ŷƴȤƅ}}妔i雠蘎@
                values:
                - Rb1v7
                - Zo4G
                - BWSH
              - key: zEIj
                operator: _樆o幝ɖ塙愾?cǖs渾蔗虽犐ɱ&
                values:
                - t5ffVO
                - d
                - eENRWz
              matchFields:
              - key: aA1DR
                operator: '''釘EÒ畭w縝b瘺]鮾礊祂.iC蹖ɋz'
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: C2Dcam4GT
                  operator: 醩Ǔ珱XSō
                - key: GNnD
                  operator: 安1Ƅ屜ŻʀɡF蔬ƿ
                - key: ""
                  operator: Ö»9zȗ堢疻络懜sE
                  values:
                  - s4NtZaob
                matchLabels:
                  FAh: eJf
                  QIt1XLbk: ts
              mismatchLabelKeys:
              - g
              - ""
              - p
              namespaceSelector:
                matchExpressions:
                - key: zq
                  operator: '@卆QAb潪妊¯ʗ'
                  values:
                  - A78MjzU
                  - uTr
                - key: 3Wg
                  operator: 聖³冢N黓ǭʛu鯷ù眠Yȹ
                  values:
                  - V5y1Yh
                - key: su
                  operator: xʨg4MƔ
                  values:
                  - LO
              namespaces:
              - V
              topologyKey: RWIrWZjMNwt
            weight: -846529921
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: Rtb
                  operator: ĩ哖叢
                  values:
                  - WO8yT3
                  - 9jGBGzJ
                - key: ECAmtZC0YwxFw
                  operator: 鶣袪}8#ɭǵ鵋佬樽茍\
                  values:
                  - c3NaRgoq
                  - ro
              matchLabelKeys:
              - VZ8a5h3
              - J06Lk
              mismatchLabelKeys:
              - c2rc
              - xVca2qDQaj
              - i
              namespaceSelector: {}
              namespaces:
              - Uzvb
              - WYJbOY2D
              topologyKey: 5Ir
            weight: -710942582
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  6mr: ""
                  7X: Mabr2Sa
              matchLabelKeys:
              - KWkmIR
              - JhREbl
              namespaceSelector:
                matchExpressions:
                - key: "5"
                  operator: 茪槜舯ǎȸĈ馑ǌǙ攣
                  values:
                  - ""
                - key: TR
                  operator: ÎȀG骞勊Uż|岋
                  values:
                  - Z
                - key: u8QU
                  operator: 鏯ƮX职i撆g霅Ơ瘠yɼ
                  values:
                  - GaWmpQcBi
                  - kcAW
                  - PeLaAr
                matchLabels:
                  ZYuvv: aLQm5
                  jxhWQ43: wiA7IHbLYs
              namespaces:
              - orYEc
              - 64fCNf
              - 0YS19Vy2
              topologyKey: laNS0Pp
            weight: -2115229939
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                joqnn: wX
            matchLabelKeys:
            - cdZ
            namespaceSelector: {}
            namespaces:
            - Toaj9N4a3P
            - qjS
            - xdsG7iozY
            topologyKey: vJh
          - labelSelector:
              matchExpressions:
              - key: DAol64n54
                operator: 嘍µƫ
              - key: vTTn
                operator: Ȯ^蒯鏍4ä醑x;蓥öũ胄鐻寄
            matchLabelKeys:
            - uv37
            - s
            - qPe7WuVpx
            mismatchLabelKeys:
            - goeq6fzpVC
            namespaceSelector:
              matchExpressions:
              - key: aqSQdak
                operator: ź喪殊qɿƚ
                values:
                - Db
                - ""
              - key: cI9U
                operator: ÍŅĊf鯸廴~ʔ'秽嚋
              matchLabels:
                soz: gBj
            topologyKey: PSzjv1OFh
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  3V: TyUVdZr
                  kErTp: 6wDM
                  xmzC: O8lu
              matchLabelKeys:
              - 6k9qosIfIH8Ri
              mismatchLabelKeys:
              - w8Xn
              namespaceSelector:
                matchExpressions:
                - key: 5p2O
                  operator: ɬ盰v
                  values:
                  - Agu2
                  - RdvqKYu0
                matchLabels:
                  RS0: 4i7YkzMP
                  cSbm6B: H1
              namespaces:
              - uK9V
              - 4JS7F
              - saI9td1NaO
              topologyKey: FUq5
            weight: -1974794081
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: QIAC
                  operator: 揎洡攝ȼ蘶ȿld)4鏈渀ɈKlÀ,
                - key: ""
                  operator: NƐr鶡Ĕǹ瓽秆ø为鼡
                  values:
                  - 7EXL
                  - vySjiMS
                matchLabels:
                  WyuLdlP0eH9: 5Lg4h0Gsg4
              namespaceSelector:
                matchExpressions:
                - key: jNI9
                  operator: 恋蹃域ȣ再\膈$嶐yţ蔇愝
                  values:
                  - uCaQvJbqFc
                - key: C0F
                  operator: Úʕ癔娚Fƨ牌ǫǓ痜ƳO嶍飤頹;O
                  values:
                  - 4uI
                  - zRE4Wc
                matchLabels:
                  B1: inNmxhB1
                  dAfnxE: m2CVU0
                  lz1Ep0: 6c
              namespaces:
              - ImjZsquG
              - qXU5
              topologyKey: 8gwG
            weight: -1824337579
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: cyKW
                operator: 擎WUo
                values:
                - a
            matchLabelKeys:
            - iKd5
            - YQePZCj
            - whsNX20
            mismatchLabelKeys:
            - Lnt
            - KDSp
            - rsu1v9UaT
            namespaceSelector:
              matchExpressions:
              - key: ViM6HV
                operator: Ü0Ǟȱı­9|ƸƐ硒揹粤ĎW熃駞譝鞪
                values:
                - u0cw
              - key: g08SDtcjU
                operator: 肙3綯V內.tZŲ
              - key: XKq
                operator: ¼ʀ嵥鉪MĆŏūIw$喝烿ǿ
              matchLabels:
                ccW8uyV: SmbBCYS
                uiV: 7MGETs
            namespaces:
            - V
            topologyKey: hHV
          - labelSelector:
              matchLabels:
                5z: mJkp13KXYjjMi
                B22n: 2jT96O
                yT: Ptb6
            matchLabelKeys:
            - GcRGP
            - RtQ
            - oYWDSnax
            mismatchLabelKeys:
            - WWUzS
            - aSVjuSu
            - f
            namespaceSelector:
              matchExpressions:
              - key: mmygZw
                operator: d^Æ妑耱ʈd徃
                values:
                - p
                - c
                - Nwi9o
              - key: V6y
                operator: RA9T盺ǭÒ捁撯VȀN晄ʆʂŮ軲ũ
              - key: WSN5qQW
                operator: Ŀ鸳攓ǿ朎ư)嵕G
            topologyKey: QZH97uF
          - labelSelector:
              matchExpressions:
              - key: TXe
                operator: 4ů4瀭嶭8鳳­ǹd迆K噖Ȫ糦盆
                values:
                - V9
              matchLabels:
                0MpiXEn: ""
                dB: kpfja
            matchLabelKeys:
            - CAG
            - nm8LHeF4
            mismatchLabelKeys:
            - btCkAc
            namespaceSelector:
              matchExpressions:
              - key: 3PXCWma2r
                operator: UʊL(ňȯ逴蛄=ƙ酆兄é
                values:
                - mlN8X2wK
                - jg
              - key: 2P1mH
                operator: 齥融Mr災鴢發
              - key: qv6n7z9XSM
                operator: 9懽綦
                values:
                - 7QLrKXZvd
                - FuG
                - 7vzoz
              matchLabels:
                m: CpwG8
            namespaces:
            - r
            topologyKey: 5s
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - ReK6Upw
        - 7Pu0AA
        - 0yNEqlggmA
        command:
        - /manager
        env: []
        image: h9:m0a
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 903
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 76
          periodSeconds: 231
          successThreshold: 164
          terminationGracePeriodSeconds: 914
          timeoutSeconds: 616
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 663
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 201
          periodSeconds: 253
          successThreshold: 732
          terminationGracePeriodSeconds: 358
          timeoutSeconds: 833
        resources:
          limits:
            cpu: "245"
            memory: "56"
          requests:
            cpu: "618"
            memory: "338"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - D8E
        - RZ69
        options:
        - name: JhCpkH
          value: yPokebJ
        - name: c
          value: 3M
        - name: qthA5J
          value: YC
        searches:
        - UUw4qb27Tvm
        - DZ
        - mcrp
      dnsPolicy: ɹMǗ烺攩÷
      ephemeralContainers: null
      hostAliases:
      - ip: Qe
      - hostnames:
        - B
        - Pg0JefVX
        - ""
        ip: 2GR
      hostPID: true
      hostUsers: true
      hostname: kIyztbA
      imagePullSecrets:
      - name: voAR
      - name: x
      - name: ZwA2p5
      initContainers: []
      nodeName: QC
      nodeSelector:
        L5NQ: F8qTt
        e9wmeT: 9gE
        gjJy: fHS5xhP93
        kei7kjf92c: ""
      preemptionPolicy: 粯zZ鐨禗ǐ帐ʙ煎)ŘĢ
      priority: -1615851531
      priorityClassName: HuyLzyK
      readinessGates:
      - conditionType: .叒
      resourceClaims:
      - name: 5vt90o
        source:
          resourceClaimName: 4V
          resourceClaimTemplateName: 6MEptEP
      - name: Z5pumR
        source:
          resourceClaimName: 6VI
          resourceClaimTemplateName: 6JOpQCuUe
      restartPolicy: 沈脊U%枩G鑄郱ƻ/
      runtimeClassName: sfR
      schedulerName: JzVQA
      schedulingGates:
      - name: 1YpB82
      securityContext:
        fsGroup: -4275336331760164400
        fsGroupChangePolicy: Always
        runAsGroup: -892762427284622100
        runAsNonRoot: false
        runAsUser: 5511452696650032000
        supplementalGroups:
        - 1817087188644479200
        - -7703597735633781000
        sysctls:
        - name: hF8AzofjT
          value: JfzTNp
      serviceAccountName: VE
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: 6Ne4XLfhW
      terminationGracePeriodSeconds: -5384773926476877000
      tolerations:
      - effect: 窍n愌4惊~]
        key: J
        operator: 纳ɹ*馩蠶f!QÑæÝ¦ÏpúRŀʒ芜
        tolerationSeconds: 5938109854598603000
        value: C3oMFn
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: kFe
            operator: c拱髣籕
            values:
            - LicVr
            - 527eYic
            - u0B01
          - key: 4mTTb
            operator: Lā´ǆ,
            values:
            - YBD
            - GLXJV7UGa
        matchLabelKeys:
        - smudP
        - Lv
        - Es
        maxSkew: -708303020
        minDomains: -865172960
        nodeAffinityPolicy: 眽
        nodeTaintsPolicy: ""
        topologyKey: lQz24S
        whenUnsatisfiable: ʛ¤ƴƚʑ鞧鮞R沶{iɀ毆獯z
      - labelSelector:
          matchExpressions:
          - key: Qn3IQQxxhs9Sag
            operator: c±ĥ0ū缳!ǸŠ蛊3KF¦ɂH
            values:
            - AY0
        matchLabelKeys:
        - DY8RFtaKdy
        - HEk9
        maxSkew: 925290393
        minDomains: -1059295255
        nodeAffinityPolicy: ȎOäɌ癟
        nodeTaintsPolicy: ǭǾ葫衸Ƅɢ側j羌ţɖY
        topologyKey: QJ1wtpuk
        whenUnsatisfiable: /
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: Tnab1z
      - name: NYz
      - name: XTpYfV
      - name: s4u
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - nUS-webhook-service.default.svc
  - nUS-webhook-service.default.svc.9A
  issuerRef:
    kind: Issuer
    name: m7Z5VmKktJ-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: Tnab1z
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: m7Z5VmKktJ-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: nUS-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Pu8: aQVSuDE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nUS
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: m7Z5VmKktJ-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      Pu8: aQVSuDE
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nUS
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: m7Z5VmKktJ-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: nUS-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 8QmVHY8X
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-071.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: hUMg
    health:
      healthProbeBindAddress: ""
    kind: CdcPG8LYYff
    leaderElection:
      leaderElect: true
      resourceName: uUeaYfPR5O
    metrics:
      bindAddress: 1NJz0eKhcHs
    webhook:
      port: 212
kind: ConfigMap
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OyOZvn5WT-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OyOZvn5WT-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OyOZvn5WT
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OyOZvn5WT
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: OyOZvn5WT
subjects:
- kind: ServiceAccount
  name: BI7X
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OyOZvn5WT-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OyOZvn5WT
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OyOZvn5WT-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: OyOZvn5WT-election-role
subjects:
- kind: ServiceAccount
  name: BI7X
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OyOZvn5WT
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: OyOZvn5WT
subjects:
- kind: ServiceAccount
  name: BI7X
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OyOZvn5WT-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Eg0Oz
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Eg0Oz-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Eg0Oz
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OyOZvn5WT
  namespace: default
spec:
  replicas: 1277937157
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: Eg0Oz
  strategy:
    rollingUpdate:
      maxSurge: 1795016009
      maxUnavailable: 920502458
    type: o徃ǚɉ魖*砾謐Ʌ菱
  template:
    metadata:
      annotations:
        Hy: ""
        u: Alj
        yVw: 2LiN4
      creationTimestamp: null
      labels:
        a5yZq6DPR: 2gj94Xe
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: Eg0Oz
    spec:
      activeDeadlineSeconds: 2906796184660660700
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: ErQUv
                operator: ',#讍醓ƐÐ糩Gţ敠圽棸ɜǳ莑ň萭'
                values:
                - F
                - vftrBqx8kIrtj
                - AKHvv
              matchFields:
              - key: 8cijSF
                operator: 呷û槡惝Ĳhǅ濧bȞ輴ʆǉ扤
                values:
                - "n"
              - key: pborSu2p91
                operator: Ɇ覴葃à
            weight: 851640615
          - preference:
              matchExpressions:
              - key: D2R
                operator: 措蔪眣ȡ釮BȰ廜ɔPɪȯ慲磽
                values:
                - HgcVkH
              - key: Mv
                operator: 苺忋|D鿬嫆洐V墾揟
                values:
                - ""
              - key: OA6
                operator: '{虇3`aP櫗ʨȈ4捱鳠腓'
                values:
                - Ulr
              matchFields:
              - key: D1Lus
                operator: ""
              - key: m
                operator: 畝Vƭ'ĦÕ
                values:
                - npe7crhN
                - ""
                - us05ucio
              - key: aHR
                operator: vƈZN鹿Ų膗.
                values:
                - hy
                - ay4Xp
            weight: 830776366
          - preference:
              matchExpressions:
              - key: 3IugyKeQB
                operator: ɑ+D櫫駮|ȡ
                values:
                - ""
                - V
                - shT
              - key: H1Ro
                operator: ƙǆNĔ崮*K<
                values:
                - zTbtmiBoE
                - E8d1O
              - key: THZns
                operator: ô郇ɿE9k柒Ȥ偓ɩŧ+ÖƦ_ɲ
                values:
                - qv
              matchFields:
              - key: zeucnJt3LV
                operator: ǃtE阷Db嚹{
                values:
                - 7nBvn9d
              - key: 57x3O
                operator: 樅炅ƚ«ĥ=Ȱ褅躡僭砡氊蹓ȩģ袷
                values:
                - ye4
              - key: GhDSe
                operator: Ƥ妎.ƞƚņŌ缁峉M;朔Ȅ辢鲍ĎOFA
                values:
                - eHr
                - l73ziMx
            weight: 456644011
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity: {}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: oCRwZQhs
                  operator: 筤
                  values:
                  - a3n
                  - lopkt2O
                - key: lFz
                  operator: 龹椡輊9篖輬IȖYȳÕ2ɖɧ堐W皍早
                matchLabels:
                  kY3U7f: R56hs88p7MZ
              matchLabelKeys:
              - R
              mismatchLabelKeys:
              - C
              - REzJ8QPcGfuu
              - 4L
              namespaceSelector:
                matchExpressions:
                - key: Pu4K
                  operator: 確{楐+=裱ēƯƛȟȄ逹
                - key: IjSg
                  operator: 擸\@ʎYȞd 67
                  values:
                  - 8PiuJ
                - key: 6c0
                  operator: I
                  values:
                  - PJPUw
                  - Zzaab
                matchLabels:
                  4dMbO: K5SXW
                  gXJ7m: 62SEO
                  vkeTz5: zljX
              namespaces:
              - iuoJOdFq1F
              - FOKB
              topologyKey: ZWCw
            weight: 975323462
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ekqvG
                  operator: ɞ桠蜔虪騉粥饶5Ƽ鉖緃龃椥詨&
                  values:
                  - fN
                - key: 0HXI2F
                  operator: ³µơ¶¹û弴ɄvǬ
                  values:
                  - NElySO
              mismatchLabelKeys:
              - DYenvo
              namespaceSelector:
                matchExpressions:
                - key: dL
                  operator: JŊ&涚ƩGǜ轍8穵[f
                  values:
                  - ""
                matchLabels:
                  M: xQwdTGT
                  jAsP8: Et9f0q
              namespaces:
              - Tr
              topologyKey: 0ayops
            weight: 2137398144
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: 4JUBij2
                operator: ""
                values:
                - fPJ2
              - key: Xg98aP3
                operator: 5ǟvǙB#ŚĂĶĸœR
                values:
                - ty
                - 4xzHp
              - key: H9p
                operator: )Ş(ɫƄ~O葀ǂ媭審g敡u色á
                values:
                - ""
                - L0C
              matchLabels:
                ZFF967F: L
            matchLabelKeys:
            - rD8L
            mismatchLabelKeys:
            - Z
            namespaceSelector: {}
            namespaces:
            - ""
            - jiAc
            topologyKey: X5Hx13b
          - labelSelector:
              matchLabels:
                5Guj: jXfeaC
                c1U: Hxk
            namespaceSelector: {}
            topologyKey: 67lO8JCg6Z
          - labelSelector:
              matchExpressions:
              - key: QE
                operator: XɐzȆ4<崜f兜LF嵚
                values:
                - Ir
                - L3
              matchLabels:
                rk7rM: dUNTwz8
            matchLabelKeys:
            - MnWZrNdfgQfZ
            - V3bAMv
            mismatchLabelKeys:
            - Wjc
            namespaceSelector:
              matchExpressions:
              - key: u9SNlsRLICJ
                operator: BzÀ嗪
                values:
                - mbiML7
                - Nd
              - key: hygXk
                operator: ʟ(嵷~3ɶþø襒h缠'D炿¡
                values:
                - xJkDP
                - 6a2f1a7
              - key: r
                operator: ȴCl`畗Xǻ}/鸒咤
                values:
                - tvpzab
                - NnooI45rcL
              matchLabels:
                E9wpkgOim: IUdTPb
                cjv: seg3OyvX
                rG: 2Sl8VugAk
            topologyKey: M
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - LlHz1
        - 4qYzSV
        command:
        - /manager
        env: []
        image: Zme9w8o:TPaa
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 589
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 759
          periodSeconds: 807
          successThreshold: 657
          terminationGracePeriodSeconds: 977
          timeoutSeconds: 708
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 250
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 531
          periodSeconds: 261
          successThreshold: 56
          terminationGracePeriodSeconds: 240
          timeoutSeconds: 366
        resources:
          limits:
            cpu: "498"
            memory: "528"
          requests:
            cpu: "334"
            memory: "62"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        searches:
        - 0IRYIXHfLfR
      dnsPolicy: .=5緟ǔ甃庪v
      ephemeralContainers: null
      hostNetwork: true
      hostPID: true
      hostUsers: true
      hostname: ONXnRWfzGp
      imagePullSecrets:
      - name: YBOC
      - name: CvMbo
      - name: 7II0g3
      initContainers: []
      nodeName: EAe
      nodeSelector:
        4tcw: hrz
        FK: ahIm6
        r4u: ""
      preemptionPolicy: ǩÞɚ蜰貾鱃Ǟ脺Z)
      priority: -1092437364
      priorityClassName: Gya
      readinessGates:
      - conditionType: ĎȦã象
      - conditionType: Nl匵ŴDDº
      restartPolicy: Ȳv箪Ķ贩Ő+ǥ樃揔ë
      runtimeClassName: 7LAT
      schedulerName: dvxA
      schedulingGates:
      - name: l3Owe7
      - name: OicM
      securityContext:
        fsGroup: 4969790577398164000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 7718336087706937000
        runAsNonRoot: true
        runAsUser: 8332715385011441000
        supplementalGroups:
        - -3314907293636207600
        - 2664518875298825000
        sysctls:
        - name: h8VsfTAI
          value: PzuCv
      serviceAccountName: nFEUMXO
      setHostnameAsFQDN: true
      subdomain: o
      terminationGracePeriodSeconds: 5115861171877325000
      tolerations:
      - effect: ½L(殱鎎掊t蟐磙ÊĖj¾jʢ
        key: RvwRQ
        operator: S鰑ǳc捥轫乙Ż佖=ĳ7ÊŸ
        tolerationSeconds: -2083560657260833800
        value: wx5m
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: rwUs
            operator: '[貢]ß紏恳捭Y花ʥ_fß'
            values:
            - U
          - key: TTSuQ
            operator: Y悿彧B缛鷱ȅÓƍTƞĿƁiɸï宮
            values:
            - AMy2MTt
          matchLabels:
            lhqD: TiL9
        maxSkew: -921377621
        minDomains: 450959143
        nodeAffinityPolicy: 婐ƈ撰Ȳ
        nodeTaintsPolicy: 格Ɉ掺M踏膸q叉R蘈
        topologyKey: QJCBTo1
        whenUnsatisfiable: ȺR蛖
      - labelSelector:
          matchLabels:
            "": GydNo
        matchLabelKeys:
        - bWR
        - dtV
        - 5cPhtU
        maxSkew: -1328890317
        minDomains: 1506338093
        nodeAffinityPolicy: Ã灣÷埰WǸEn礡pɡ"謵|ÝSȦ亭
        nodeTaintsPolicy: ""
        topologyKey: ievxeEYXR
        whenUnsatisfiable: 鉯ď^I
      - labelSelector:
          matchExpressions:
          - key: 9K6
            operator: ñ蓸BXŬ顥8G­
            values:
            - 0TLjRwHe
            - g7
          - key: jt
            operator: ']剼xʈ壐CR~锭Ƒ锷骸鼒醻幭'
            values:
            - 5JMdp3T
            - ""
            - s
          matchLabels:
            2LmzPU: Vn
            4TD: NiQsjbsE
            fEXqg: 0FaPA
        maxSkew: -1091202818
        minDomains: 1768851156
        nodeAffinityPolicy: 鑬ß+ H滨d蕪bǤǰmǨ
        nodeTaintsPolicy: ɏɣ;Ŧƛǆ儊涙ň'ś
        topologyKey: 1BnA
        whenUnsatisfiable: '}|ǗȳȽ抧ǎŤĿ仇恹'
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: WFuUZ
      - name: PSp
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - Eg0Oz-webhook-service.default.svc
  - Eg0Oz-webhook-service.default.svc.
  issuerRef:
    kind: Issuer
    name: OyOZvn5WT-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: WFuUZ
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OyOZvn5WT-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: OyOZvn5WT-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: Eg0Oz-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    E4i6xcvJ: ZJEz
    yeHnwQ: fUkYaRf
  creationTimestamp: null
  labels:
    6uv1egE: IzPSkvDQ
    C9l: git
    E5l: BF8ozbb
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Eg0Oz
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OyOZvn5WT-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      6uv1egE: IzPSkvDQ
      C9l: git
      E5l: BF8ozbb
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: Eg0Oz
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: OyOZvn5WT-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: Eg0Oz-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: BI7X
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-072.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: lYXEaS
    health:
      healthProbeBindAddress: o7WXT133
    kind: YrnkFwDGANkbHseo
    leaderElection:
      leaderElect: true
      resourceName: kpeu
    metrics:
      bindAddress: ""
    webhook:
      port: 312
kind: ConfigMap
metadata:
  annotations:
    ij: htyiQR
    wsZn: jDMDcnh1rh
  creationTimestamp: null
  labels:
    Q9a: uDXPfw
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8I1Iyd
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    v0: 1iClRDvVO3c
  name: 5GoUVR7T-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    ij: htyiQR
    wsZn: jDMDcnh1rh
  creationTimestamp: null
  labels:
    Q9a: uDXPfw
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8I1Iyd
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    v0: 1iClRDvVO3c
  name: 5GoUVR7T-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 8I1Iyd
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    ij: htyiQR
    wsZn: jDMDcnh1rh
  creationTimestamp: null
  labels:
    Q9a: uDXPfw
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8I1Iyd
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    v0: 1iClRDvVO3c
  name: 8I1Iyd-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 8I1Iyd
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    ij: htyiQR
    wsZn: jDMDcnh1rh
  creationTimestamp: null
  labels:
    Q9a: uDXPfw
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8I1Iyd
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    v0: 1iClRDvVO3c
  name: 5GoUVR7T
  namespace: default
spec:
  replicas: 828111921
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 8I1Iyd
  strategy:
    rollingUpdate:
      maxSurge: 886970740
      maxUnavailable: 289045062
    type: 她厓ƇL6ìǬģčʒģy卌鏖D
  template:
    metadata:
      annotations:
        6yf: PBVe
        Fi63TSPtN: ""
        kRhL: QpWMEi
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 8I1Iyd
    spec:
      activeDeadlineSeconds: 8932134171902015000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: ""
                operator: 囬b
                values:
                - ZQ
                - jtWF
              - key: 03D6
                operator: 榧碊楶灠;暈b嫑ŏ犷&ɃË
              - key: yAbhAt1
                operator: ȧŝ$Jɡ4ǖşĥ弧-崽!俒%胖ļ
                values:
                - Fv
                - "2"
              matchFields:
              - key: n1gUu
                operator: 璧鯅羛棭Ż驰~酌]H
              - key: zmZ
                operator: 仐D屢ƶ
                values:
                - AgYOv
                - prpwQ2Y
              - key: NtLyDIwJ
                operator: 鲟獽ǆ颷)0
                values:
                - yvXPcl
                - U
                - EHA1ZUKMn
            weight: -1586937060
          - preference:
              matchFields:
              - key: hx
                operator: 洡Ƙp廔糀$i蔂ʋGü篲Ő?<爆ƅ
                values:
                - s0ixY
              - key: bEfMEgH
                operator: ƚɢ|
                values:
                - TbRQ
                - grZxJ
            weight: 1809119344
          - preference:
              matchExpressions:
              - key: s
                operator: »Ȼ{Rđ/ƜO鰌溟稂)
                values:
                - lM1fXt0IHd
              matchFields:
              - key: 6wak
                operator: '*ǍȸƟE|鐓ï'
            weight: 702698876
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchFields:
              - key: i
                operator: 蓒A蟞ʈļ肶Ò沟ǌ蛏纳V柇ʝȽ
                values:
                - ""
                - 0jfeQbt0
                - LY88aj
              - key: ye2
                operator: ƾ勾覗wì,Ē%X鹠īĵǦÜɐʧɨ纲
                values:
                - ZYJK
                - gkVA
                - eDNU
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: vVFUAZ
                  operator: 跽Ǎ,ę3
              matchLabelKeys:
              - eGJVem2Ei3M
              - m5dgOKm
              mismatchLabelKeys:
              - qV7Wf9s
              - KseQJ
              namespaceSelector:
                matchExpressions:
                - key: wVU
                  operator: 卾&Ɋ=淇牉Oxÿȥ
                  values:
                  - "67"
                  - chu
                - key: cte9t9
                  operator: Á雀囹噗6硢0膋莄 ^DǛ-悇2
                  values:
                  - I8Hpn
                  - GdNwZf
                  - qhCYuN
                - key: yE7Tr4
                  operator: Ľ蚒±ņ邜
                matchLabels:
                  IRz: yglVn3
              namespaces:
              - "n"
              - LR3tmda9
              topologyKey: LtACPw8s0kl
            weight: 551238201
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: trXm5qwh87f
                operator: 0熑1A冒畦TƎĕ冋w%&±髙堡譅d
                values:
                - H3ocU
                - j0VfYw3w
                - f5ak
              - key: BkyAiH
                operator: Ȭ请ÍÎĔ蓏
                values:
                - XnYAozD
                - Qd
                - vE7J7
              - key: myzg
                operator: êť篧]2忲Å迆ũ7鄋RmɅY鐙頷攮M
                values:
                - Z1UFC
                - p00
                - YeoDwj
            matchLabelKeys:
            - MxI4
            - Dz
            mismatchLabelKeys:
            - 7J8
            - WqMUV
            namespaceSelector: {}
            namespaces:
            - VL5y
            - 05iB9d
            - qJD
            topologyKey: RhsB4WrGitTl
          - labelSelector:
              matchLabels:
                g: 9dCA
            mismatchLabelKeys:
            - 3yXG
            - 4pAQseL
            - a8u5
            namespaceSelector:
              matchExpressions:
              - key: vAM3
                operator: 蝹'D^
              - key: 8SjWB
                operator: 2ɥ`ƚ忣My>箫ɆȻ=5
                values:
                - nlWnsS6
                - mXcFVezB8J7
              matchLabels:
                5zaBYTKDWsPu: 497at
                WfP3: a
            namespaces:
            - p6eyCU
            - Qao
            - b6TXy
            topologyKey: h0y54x
          - labelSelector:
              matchExpressions:
              - key: dvh
                operator: Pcǉ63ǖ薠
              - key: e3D7
                operator: ȿ摼檉ŞH怑卑¸4鱳砤kŷ!懷
                values:
                - e
                - RY8jM
              - key: t2w
                operator: ķ¯U廦膷
                values:
                - ""
              matchLabels:
                90H: "7"
            matchLabelKeys:
            - m
            mismatchLabelKeys:
            - 3j8Khu8x9A
            - qc6R
            namespaceSelector:
              matchExpressions:
              - key: e9
                operator: 矝穝濾
              matchLabels:
                pLT: HjCAZ3Dc
                wLmaFn: 9LPrGCAUk8cG
            topologyKey: nNeEst7JtnQ
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: cQ
                  operator: f菏´飼鳍ʐT騇内
                  values:
                  - g2c
                  - 4G
                - key: IJ
                  operator: YĔ
                  values:
                  - SlDsXi
                  - pp
                matchLabels:
                  q0B: Vg
                  tqUGv: zJnBeoLSpcz
              matchLabelKeys:
              - ""
              - 1m
              - lidPQ
              mismatchLabelKeys:
              - f9Lx48
              - VH
              - 2g49DJ15
              namespaceSelector:
                matchExpressions:
                - key: X5g
                  operator: 鑧B Ƴ®¨瞔镽稤Ǯƣ
                  values:
                  - y4kU88
                matchLabels:
                  8L2DhyPz: H4pSI7a
                  QPd6GR: ateDxqZmH
                  ysCPq: Mf
              namespaces:
              - 61aqeKbIK
              - aNQXw2s
              - pvG
              topologyKey: JBEpmi9R3
            weight: -518664718
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: 3T7RW
                  operator: ɀʬ埄Z&$ɵʂ球梬篪ɾ
                - key: M6BDy
                  operator: ȕ:'Ǫ蚂ɷW气叼ď爱
                  values:
                  - Lcn
                  - nt
                - key: a4q6kcF5
                  operator: 嫔阞wǗ¾洃O+c5鈙
                  values:
                  - c7ml1T5R
                  - C
                matchLabels:
                  Ea: GxrmiTp
              matchLabelKeys:
              - 9dkf4g
              - EI797kBKWK
              - 8tQ
              namespaceSelector:
                matchExpressions:
                - key: hFxwxBCJR56u
                  operator: '%俁Ʃɝǟ碡蝿''ɺ悉鵗K藪ǄÁ@ȳ旵嚱'
                  values:
                  - UUWrNWr
                  - MSYKxvb
                matchLabels:
                  d91: 95j7rd
              namespaces:
              - gC3VM
              - rLYQOjw
              topologyKey: IooOU
            weight: 553020618
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: xt48oN
                operator: ""
                values:
                - nF0CLQ
                - y4yYtuP
              matchLabels:
                MEdj: bJJESL9Z1
                tA: ""
                xnW: Mtm1h
            matchLabelKeys:
            - aXzcuYUA
            - yc03y
            namespaceSelector:
              matchExpressions:
              - key: Qw7JhqWu
                operator: ª裞袡jǦ舭uɥ=kKn
                values:
                - MaVwc
                - XrBL
              - key: iZZP
                operator: ""
                values:
                - HKRw
                - 57Vp5
              - key: xssctJ8F1
                operator: 蟤Ⱥ沌Ø戔凕
                values:
                - TXiV
                - Uzpzg
                - FET
            namespaces:
            - DyrF
            topologyKey: R4729BSC1
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - zTsg
        - Sv
        - 9M23O7X
        command:
        - /manager
        env: []
        image: Tzah:6E02z0oYQUL
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 952
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 274
          periodSeconds: 473
          successThreshold: 29
          terminationGracePeriodSeconds: 887
          timeoutSeconds: 91
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 718
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 710
          periodSeconds: 733
          successThreshold: 637
          terminationGracePeriodSeconds: 689
          timeoutSeconds: 465
        resources:
          limits:
            cpu: "583"
            memory: "460"
          requests:
            cpu: "960"
            memory: "844"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - ""
        - WO
        - I
        searches:
        - uSzGLWz
      dnsPolicy: v#ƁƐÿ
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - lrl0vw
        - YJt9t
        ip: UYcKtV
      - ip: 4uIxYAS
      - ip: ""
      hostPID: true
      hostUsers: false
      hostname: 5oCQx
      imagePullSecrets:
      - name: jUh
      initContainers: []
      nodeName: Jb0YiW
      nodeSelector:
        7Bii9yz: Y9
        OME: l1
        WXL6yK: CdEcZFp9
      preemptionPolicy: Cɘ¶
      priority: 1799249224
      priorityClassName: x
      readinessGates:
      - conditionType: ț@5线]茠ŔK?礳籓Ȝ嘟:ʁ窌嵮Ģ
      - conditionType: 鋔ɖ惌貓nƭ俜
      resourceClaims:
      - name: ""
        source:
          resourceClaimName: 5gfgBVn
          resourceClaimTemplateName: vC6
      - name: Vnor
        source:
          resourceClaimName: Cwor
          resourceClaimTemplateName: HpOI
      restartPolicy: 法#ƿȁƋ饆袈ɒȳ
      runtimeClassName: piASTpN
      schedulerName: W72
      schedulingGates:
      - name: M
      - name: 26sClw3aR
      - name: xp9iKar
      securityContext:
        fsGroup: -5999645359566591000
        fsGroupChangePolicy: Always
        runAsGroup: -7858053613302335000
        runAsNonRoot: true
        runAsUser: -6325737295439407000
        sysctls:
        - name: 7Grq
          value: Lf
        - name: kZ
          value: exDx
        - name: qC
          value: rrAv
      serviceAccountName: WHEsd5gQ
      setHostnameAsFQDN: true
      subdomain: 3m
      terminationGracePeriodSeconds: 9038582553894451000
      tolerations:
      - effect: bƇ弮Yr:K抉R飓a结黂Ĥ
        key: G
        operator: ȓ(7Pĩ Ǽ
        tolerationSeconds: -7818649012535975000
        value: ote8FvN
      - effect: ʥ岁認榤 ɊĔƭ敽欛RJ
        key: U7S1
        operator: ȉ_VQ馳ƀ7~
        tolerationSeconds: -2377395593567595000
        value: awqsGSdpe
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: 0Me
            operator: Ń
            values:
            - DTls
          matchLabels:
            r9p4MF: iX4o2aJpl
        maxSkew: -552013603
        minDomains: -1279133216
        nodeAffinityPolicy: 0抧|8澁2=3鳛·媀ȋĵ(
        nodeTaintsPolicy: '{'
        topologyKey: ybGWO0YEF1
        whenUnsatisfiable: KƿĻ觮ȑmvǯ
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: SnlpK8
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    ij: htyiQR
    wsZn: jDMDcnh1rh
  creationTimestamp: null
  labels:
    Q9a: uDXPfw
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8I1Iyd
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    v0: 1iClRDvVO3c
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - 8I1Iyd-webhook-service.default.svc
  - 8I1Iyd-webhook-service.default.svc.17
  issuerRef:
    kind: Issuer
    name: 5GoUVR7T-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: SnlpK8
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    ij: htyiQR
    wsZn: jDMDcnh1rh
  creationTimestamp: null
  labels:
    Q9a: uDXPfw
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8I1Iyd
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    v0: 1iClRDvVO3c
  name: 5GoUVR7T-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 5GoUVR7T-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 8I1Iyd-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 5GoUVR7T-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 8I1Iyd-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 9r
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-073.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    ET9H70: 1pFh
    b28jlJ: gH2i
  creationTimestamp: null
  labels:
    "": "3"
    N9sd2SXL: f2jOHWU
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Pt
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: r8KRW4
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: ""
    health:
      healthProbeBindAddress: vDu4Byrze
    kind: WZZg
    leaderElection:
      leaderElect: true
      resourceName: B3J5nSv
    metrics:
      bindAddress: 63kh7z
    webhook:
      port: 23
kind: ConfigMap
metadata:
  annotations:
    M8kdd: rg
    SdYUtgj: zuHEEr
    ysGlNYAJk: 9XN2vwiVm
  creationTimestamp: null
  labels:
    "": "3"
    N9sd2SXL: f2jOHWU
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Pt
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: IsP97jKm-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    M8kdd: rg
    SdYUtgj: zuHEEr
    ysGlNYAJk: 9XN2vwiVm
  creationTimestamp: null
  labels:
    "": "3"
    N9sd2SXL: f2jOHWU
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Pt
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: IsP97jKm-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Pt
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    M8kdd: rg
    SdYUtgj: zuHEEr
    ysGlNYAJk: 9XN2vwiVm
  creationTimestamp: null
  labels:
    "": "3"
    N9sd2SXL: f2jOHWU
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Pt
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Pt-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Pt
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    M8kdd: rg
    SdYUtgj: zuHEEr
    ysGlNYAJk: 9XN2vwiVm
  creationTimestamp: null
  labels:
    "": "3"
    N9sd2SXL: f2jOHWU
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Pt
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: IsP97jKm
  namespace: default
spec:
  replicas: 1300059575
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: Pt
  strategy:
    rollingUpdate:
      maxSurge: 1829832553
      maxUnavailable: 1914125389
    type: ǝ愘媭ºš(Ȝ·ɛ炰ȏP谵ZŢJWǁ
  template:
    metadata:
      annotations:
        L0jYB: A5gEIsPpn6
        eN: 9zBUgl
        tB1TKvd: gZ
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: Pt
        j: a2vBpk
    spec:
      activeDeadlineSeconds: -4473331471797640700
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: WtS9OI
                operator: 蔢癹霻H戃鄛S滂Ȧ骥汯#9Ʉ磑
                values:
                - IfgQb
                - KIZI9qHFyZ4
                - 9AkfR
              - key: HxNFZalo4X
                operator: ' /鵈ʂ岦蟷W''靸wMÜ招淡:'
              - key: cwk
                operator: 氠
                values:
                - DUl
                - I7Tg2QAQ1
                - HwbVLO
              matchFields:
              - key: XHUD
                operator: 齞
                values:
                - LFjdN
                - 9y9GVU
                - pImdQW
              - key: 46th
                operator: Zʧ嫤w輋棋Y鶃'>喺e
                values:
                - YvTAnoZ
                - MqrwRUN
            weight: -1667780946
          - preference:
              matchExpressions:
              - key: oyV2
                operator: TɎɹ罣潋woŝ痆佩fV
              - key: lNxmM
                operator: ""
                values:
                - ""
                - WZ3y
                - iFwwT4
              - key: Txqz
                operator: gɳÿ²悊扉|厏ǰ嘽kŝf淊
                values:
                - e5K9
                - 8zta
                - 9MbX
              matchFields:
              - key: Fp1JEU4leiiAl
                operator: ""
                values:
                - U8Y7vH
                - 84cKUu
            weight: -1435032077
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: 7nN
                operator: 3w錷.ɢıġ
                values:
                - 9D
                - nwawx
              matchLabels:
                xJea2DphvCSd: H2V4I
            matchLabelKeys:
            - Eiq
            - pY
            mismatchLabelKeys:
            - tk5sP2
            - 6jFL0
            - NF
            namespaceSelector:
              matchExpressions:
              - key: w6LCuiR
                operator: 罾Ɩǧȸ輄Á$ê@Ǔ鵢Ƚ±C鴘xêʝ>
              - key: yjriYJV
                operator: ȩ>鱪*藟c#梱ƝM
                values:
                - ""
            namespaces:
            - o
            topologyKey: 1DypqJK
          - labelSelector:
              matchExpressions:
              - key: IgjgPwpL
                operator: -ǰ揌)儧綇z鿱馬爨ǘ僙
                values:
                - e4mA
              matchLabels:
                97oQcVQ: ZTBkU
                IiUrcBfQ: h9Ox3x
            matchLabelKeys:
            - FCGgC
            mismatchLabelKeys:
            - Ng2l
            - U0sCE6
            namespaceSelector:
              matchExpressions:
              - key: a4N0mhOu
                operator: 砙ä莑ŪȃƔ"
                values:
                - 5j31oV1
                - jQ
                - Ry9FtY
              - key: zT3v
                operator: ""
                values:
                - ZUGOWvA5Az
                - yMZG
                - qjb3DDS
              - key: ""
                operator: ­裗皊1ʝƾ欟鎱ƻ洩Ⱥ羸ƞð$
                values:
                - 2C
              matchLabels:
                ONHjXf: WMMnrhT
            namespaces:
            - 72hx
            - U166hU2r6y6zq
            topologyKey: JpnDY8IxT
          - labelSelector:
              matchExpressions:
              - key: ""
                operator: ȫ儮晽Cz_ĆaF^a獰
                values:
                - a
                - bCNSG6Z
                - ""
              - key: fBa
                operator: ǵ鉟攒{<§Eǐʋ鷨怴恞氈*=Ŧ
                values:
                - yP59C
                - YpED
                - KjXa
              - key: 4Hb7Gg
                operator: 鱚%陫ƌNÿ椁f
                values:
                - aPv
                - gJTm
                - nd1WIoc
              matchLabels:
                8qy4emP: rnz
                FQj95Sk4: wTC1oK
                TLe9rk9: 0rMfRXxd
            matchLabelKeys:
            - N06JQc7qiY
            - ij1
            - JNFNiUbG
            mismatchLabelKeys:
            - 5kE
            - 3mxI
            - mQ
            namespaceSelector:
              matchExpressions:
              - key: 2nU
                operator: 銮Ǿŉ跄ìvŠ
                values:
                - "n"
                - 86w5
              - key: 8zhS9WR6
                operator: ĴĐʩ讨齑ǌɵ5>謔û`筬
                values:
                - ZzT8lG
            namespaces:
            - jFo
            - BEQ
            - w
            topologyKey: 7DOuy
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  JRBgl2HLhz2: xify57C
                  ZNNwIS9ficU9: t2SFAI
                  bGoTegc5: i2
              matchLabelKeys:
              - fE2kJcm
              - s1MZyeI2Q
              - vOfj29L1
              namespaceSelector:
                matchExpressions:
                - key: n0tNeb
                  operator: ɚĬčƟ懨ñõ鋽Öc
                  values:
                  - CIzuR
                - key: caPANg
                  operator: 6)SÅöNkȍƓ粢蓃İľ竛gƫµ
                matchLabels:
                  V2ZQQ23f: TyI
                  fyRqME: yYq
                  j: jryt6D1P
              namespaces:
              - n9XK
              - gdp
              - 46iyg
              topologyKey: 89mw328
            weight: 471035160
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: Fc5J
                  operator: 駝?e泉Ƚȃ.łʩŭ«\6U
                  values:
                  - dUlUF
                  - 4X
                  - NrMJLN5L
                - key: XcS
                  operator: '!#Əo漠ɌÀ{廴Ĺ魷''Ő黅LS'
                  values:
                  - Vfx5zI19VL
                  - nqyavQu15
                  - a92N
                - key: rV90
                  operator: ""
                  values:
                  - TltzFD
                matchLabels:
                  d6B: r0WnIivK
                  xRiHsFz: Dwo
              matchLabelKeys:
              - lRUNowK
              - aIm
              - gmM2x
              namespaceSelector:
                matchExpressions:
                - key: nJ6wcK0
                  operator: 遼Ŕ礨鷐脐颥雡鸐濪VsD泿
                - key: 1WT
                  operator: 槵0?
                  values:
                  - cOxaCg3I
                - key: 40a
                  operator: XǎolÏä¾
                matchLabels:
                  16A1HW: X
                  Q414: xlhb
                  SmjL7zlcNgm: PzJxwu
              topologyKey: y7uX
            weight: 698697850
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: Agq7S
                operator: 践9S堵ɘ郓\O歿鎈üɑ怸ţ铦
                values:
                - w7
                - S0Zf
                - Shuj
              matchLabels:
                RoMzVq: La
            matchLabelKeys:
            - JfeT2
            mismatchLabelKeys:
            - mLT9uf
            - iLBzJde
            - 83pbm5
            namespaceSelector:
              matchExpressions:
              - key: 8v
                operator: 曩掺ɷƓg蚯áȬ倣{ƹ'跳溅
              - key: GGo05
                operator: ƛȴ=魕詶P豏7N1倇Ƌɏɷ
                values:
                - Vng4
                - Ef1S
                - 4Ajmlkuz
              - key: Gw
                operator: ¸Ũ3Ƙ盲hDĉ
                values:
                - 4ecIh5
                - OBhYox
                - UGW
              matchLabels:
                1Jvk1K: MCSZs5
                Xh4MDYJ: TSM
                xsm4OYL7: RhKDcn
            namespaces:
            - L1WADE
            - NJdtb
            - RStHE0T0
            topologyKey: f
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - 5orCeu
        - v7kr
        command:
        - /manager
        env: []
        image: Ozfq:3ncj
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 321
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 406
          periodSeconds: 862
          successThreshold: 686
          terminationGracePeriodSeconds: 381
          timeoutSeconds: 131
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 248
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 775
          periodSeconds: 283
          successThreshold: 575
          terminationGracePeriodSeconds: 700
          timeoutSeconds: 235
        resources:
          limits:
            cpu: "275"
            memory: "916"
          requests:
            cpu: "391"
            memory: "252"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - s7h5u7RQdK
        options:
        - name: WOUE43n
          value: Nr26Y
        - name: a
          value: iO7e
        searches:
        - E3IgL
        - Xb4A1Hhi
        - AcuLKAAOS2
      dnsPolicy: ƨ莼ǟ<疄ȵǔ
      enableServiceLinks: true
      ephemeralContainers: null
      hostNetwork: true
      hostPID: true
      hostUsers: true
      hostname: pdJJj0z
      imagePullSecrets:
      - name: pG
      initContainers: []
      nodeName: oerpOC
      nodeSelector:
        AiS5q: anZtnTwfy
      preemptionPolicy: ƙ$ħƦ
      priority: 1159578060
      priorityClassName: "0"
      readinessGates:
      - conditionType: e麏ǍǛp!üĥ瞑Ì唘叁
      - conditionType: ""
      resourceClaims:
      - name: PAxX
        source:
          resourceClaimName: LXSt
          resourceClaimTemplateName: nQFpPsHg6
      - name: 5SfIIB
        source:
          resourceClaimName: 4M7h
          resourceClaimTemplateName: G2s
      restartPolicy: U刞膶ƓP楠ɚ瞼人
      runtimeClassName: ujUXGY
      schedulerName: DeAp
      schedulingGates:
      - name: HNRQD
      securityContext:
        fsGroup: 6191068330256292000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -7551376484633501000
        runAsNonRoot: true
        runAsUser: -4593421443118058500
        supplementalGroups:
        - -8514564952898012000
        - -1515799728164621800
        - 2544088899832977000
      serviceAccountName: PkxO0N5e
      setHostnameAsFQDN: true
      subdomain: K8qFMYK
      terminationGracePeriodSeconds: 4708904236068725000
      tolerations:
      - key: v2jZ70
        operator: l墯熡/Ȁǀŭ"Ƭ
        tolerationSeconds: 6387464848797268000
        value: M7Iwkkc
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: pVTF09oEq
            operator: ŐŐ^)ȍ琗DŴķ
          - key: Wlz
            operator: 秚"Ƴǎ鶙J仚瀵d宝ʀ驐`肪n陬臱曠
            values:
            - Fd
          - key: pMyYG57
            operator: əʐ裧ʒo瑀ɢ菏ñ\佔üƫ
          matchLabels:
            IZ6h1ki: Z4
            T: TaAp
            t0w: 6RY
        maxSkew: -1416850991
        minDomains: 1267419823
        nodeAffinityPolicy: P>堣®})
        nodeTaintsPolicy: k傯0Ơ
        topologyKey: 9ErUbIkWTWx
        whenUnsatisfiable: 謭š漪ZqiɆ蹖ɭš'0<Ȳ|4;Ɂ
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: faro4
      - name: NBK1ScbB7
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    M8kdd: rg
    SdYUtgj: zuHEEr
    ysGlNYAJk: 9XN2vwiVm
  creationTimestamp: null
  labels:
    "": "3"
    N9sd2SXL: f2jOHWU
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Pt
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - Pt-webhook-service.default.svc
  - Pt-webhook-service.default.svc.KkAJ5ce2Z
  issuerRef:
    kind: Issuer
    name: IsP97jKm-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: faro4
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    M8kdd: rg
    SdYUtgj: zuHEEr
    ysGlNYAJk: 9XN2vwiVm
  creationTimestamp: null
  labels:
    "": "3"
    N9sd2SXL: f2jOHWU
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Pt
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: IsP97jKm-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: IsP97jKm-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: Pt-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    M8kdd: rg
    SdYUtgj: zuHEEr
    ysGlNYAJk: 9XN2vwiVm
  creationTimestamp: null
  labels:
    "": "3"
    N9sd2SXL: f2jOHWU
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Pt
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: IsP97jKm-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      "": "3"
      N9sd2SXL: f2jOHWU
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: Pt
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: IsP97jKm-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: Pt-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: r8KRW4
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-074.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: mywUt8tuv
    health:
      healthProbeBindAddress: lEjIvsWJ
    kind: xeKMrAMG
    leaderElection:
      leaderElect: true
      resourceName: y36
    metrics:
      bindAddress: sn1CAiMF
    webhook:
      port: 391
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    6tS3Gzxd: hgT9pfe
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4MPmeCPMB
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dHTgQf-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    6tS3Gzxd: hgT9pfe
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4MPmeCPMB
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dHTgQf-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 4MPmeCPMB
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    6tS3Gzxd: hgT9pfe
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4MPmeCPMB
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 4MPmeCPMB-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 4MPmeCPMB
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    6tS3Gzxd: hgT9pfe
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4MPmeCPMB
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dHTgQf
  namespace: default
spec:
  replicas: -43968875
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 4MPmeCPMB
  strategy:
    rollingUpdate:
      maxSurge: 861090835
      maxUnavailable: 1344206621
    type: 黛g°CÑz書嶁綺Ɩ觗ȁɇ1C窏Ǻ掑瞝
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        0N: HPYHri
        OF: "9"
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 4MPmeCPMB
        sV6F: ""
    spec:
      activeDeadlineSeconds: 5605029791004607000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: 29pz6m
                operator: ɒ枊
                values:
                - H
                - GsmPZVPg
                - qhLjEE2
              - key: aokb
                operator: 賾
                values:
                - f
                - jj
                - "n"
              - key: lj9biws7b4
                operator: T殷靈蒓ɜȟƱ躀+崢Ǭ
              matchFields:
              - key: "6"
                operator: ɂ门s剃Č¦ɇrƀ ʁŒ銊ɚƬ帗ŊY
                values:
                - Dp3I7EZ
              - key: ""
                operator: ɿ`釨m傮牜jjɚ4ĥ眲禳咈
                values:
                - rqTIcSKPDCM
              - key: cFnV7K67
                operator: '`坎''芺ȟ'
            weight: 1798342112
          - preference:
              matchExpressions:
              - key: Zv21MQex
                operator: Ņ娑飳ĿŠ眻S絺磂ojǈwuXɶÝC%
                values:
                - "1"
              matchFields:
              - key: 5LN
                operator: '}眙!ůŪe4ŢpCƌĥȏ愩Ȼ牭h'
                values:
                - kRmh
                - qW
              - key: zb
                operator: 嵯â鄂E攐QŤň5
                values:
                - F
                - dDYSHp
            weight: -1824401339
          - preference:
              matchExpressions:
              - key: ""
                operator: we-ŵƹRʐ蹥
                values:
                - b8T
                - EH
                - M
              matchFields:
              - key: zH97
                operator: ʪ
                values:
                - MNt
                - 4Co
                - mHm72jT
            weight: -1301190656
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: E8ERmHeuRZ3
                  operator: '}颩柫ȟHz阗聄sɥa7r]&'
                  values:
                  - RE
                  - ZZ
                  - WwOU02JqhKSN
                - key: qQfq6fdwQo
                  operator: '|s4啡搾|'
                  values:
                  - bWr3lRF8cdngh
                - key: GlH
                  operator:  aȎĴƧQ絆Js6
                  values:
                  - 2qtxfd3u
                  - kWed
                  - z
                matchLabels:
                  goi: gfbJHCPb
                  msPUfCDOxV: ku
              matchLabelKeys:
              - EyDpC9
              mismatchLabelKeys:
              - Pu
              - "5"
              namespaceSelector:
                matchExpressions:
                - key: Udjo
                  operator: Ć
                  values:
                  - lq8im2lc
                  - p9hA
                  - YVwuOp
                - key: CkDeO
                  operator: łĨ觩?Ĝ#詩ʬa枅龆鐝|ŎŲò
                  values:
                  - YTD
                  - tHjV1
                  - C2K
                - key: wjII3N
                  operator: ɂ%0Ǻď
                matchLabels:
                  6aJdy4: "n"
              namespaces:
              - rJe8ts
              - O5zk8
              - KvN
              topologyKey: Jhx4
            weight: -264164496
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: L
                operator: 穢kŝ!ȇ槄m殃迅鬇愕懆櫋
                values:
                - l
                - 5JA
                - ur2pXHUlz
              - key: R8xGdHg
                operator: ƿƛþǽć霄
              - key: wwRWJw51
                operator: 砒Ǥä蘱趢[O
                values:
                - R
                - AU
                - kdwH
              matchLabels:
                PD: T
            mismatchLabelKeys:
            - A8qsTHJ5ZbMK
            namespaceSelector:
              matchExpressions:
              - key: BT4x6
                operator: VŴ瓔X>ǒ°
                values:
                - 1yLB
                - f3KFrgJKJiE
              - key: "2"
                operator: ɩ鈉ʜà耯
                values:
                - DTAVD
                - fAXv4
              matchLabels:
                9zVWUzsHJ: TFe9I
                48UKSy: gHQ7B
                KcVgD: bzIxKS6sn
            topologyKey: iiY6f
          - labelSelector:
              matchExpressions:
              - key: jSMEy9tj
                operator: 殷峆ɋ陱緩ʯȐ璪Ȓ击%Sʖ煛e(奫鬺秳
                values:
                - Jb
                - 9iiNXF
              - key: 8e
                operator: 諃掦
                values:
                - 26q7hr
                - P0
              - key: oQ
                operator: '''蠁^戨5NVn<差s觨煕呠'
                values:
                - sXHEgze6r9JP
            mismatchLabelKeys:
            - Wjont
            namespaceSelector: {}
            topologyKey: NpYPYvTMBHqc
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: uv
                  operator: Z舽皾B8ʝŉn奮鑳
                matchLabels:
                  DZNzSypnNd: OM
              matchLabelKeys:
              - NR0
              - GL
              mismatchLabelKeys:
              - "6"
              - QfJ22cik
              namespaceSelector:
                matchExpressions:
                - key: "4"
                  operator: 稇j´=iýɰ
                  values:
                  - msBBCt
                  - BYK7j
                matchLabels:
                  EQy8E: k9p4
                  qA: i9g
              namespaces:
              - Zy7qVf
              - Cgqu
              - bU2
              topologyKey: BI7G
            weight: -570707983
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: 6vKbNM4p
                operator: 陥t殷~ǩʕ霸¹ŧ
              - key: b1sSLKMIk
                operator: qC夨6獮丕»ƴɈ
                values:
                - "n"
                - O2p9W
                - 0AFawSrw
              matchLabels:
                3tI7I: "y"
                IN9: ""
                LtnEuZ: d4tf1IZE3
            matchLabelKeys:
            - je
            - 79Ppx
            namespaceSelector:
              matchExpressions:
              - key: S6
                operator: FXǴ
                values:
                - Sqrf2
                - mu
              - key: o
                operator: 夆
                values:
                - txYP1ujkZWO
                - 7iab8KMe7A
                - F4LIf
              - key: KjJ
                operator: Ʌ諭bʒll罌床
                values:
                - ""
              matchLabels:
                jFkqSGhA: AQzK0Z9
                q6Oev: 9veSz
                wR4R: p
            namespaces:
            - lT
            topologyKey: Knl2pTupr
          - labelSelector:
              matchLabels:
                5smDgD9TD: W66iRY9Uc
                9qTg9iB1: AI1fB7
                p0i: AtyQqRAriE
            mismatchLabelKeys:
            - o3dWg5L
            namespaceSelector:
              matchLabels:
                9DwVlkD: 9GPaQR9HR
                tz5: efgpCt
                z0: owPgU
            namespaces:
            - H7dPr
            topologyKey: WB
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - "n"
        - H7B3A1m
        command:
        - /manager
        env: []
        image: w3qgVe7:8YPjvr
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 617
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 538
          periodSeconds: 45
          successThreshold: 413
          terminationGracePeriodSeconds: 624
          timeoutSeconds: 978
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 595
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 506
          periodSeconds: 408
          successThreshold: 243
          terminationGracePeriodSeconds: 297
          timeoutSeconds: 213
        resources:
          limits:
            cpu: "636"
            memory: "523"
          requests:
            cpu: "206"
            memory: "172"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - bga8iMz
        options:
        - name: YZZ
          value: gk
        - name: T1
          value: nTT9rY
        searches:
        - laTKpor1A
        - eBE0i
      dnsPolicy: 犓ʈ髌^?脰蜫霩
      enableServiceLinks: true
      ephemeralContainers: null
      hostIPC: true
      hostUsers: true
      hostname: fe
      imagePullSecrets:
      - name: Dm9pfeb
      - name: ivq7l0
      - name: jrO6LT
      initContainers: []
      nodeName: ZTyPf
      nodeSelector:
        7MLcksU: bLkMrL
        OyGw: IZ
        QPHL8: x9
        h: LVPqH0
        nz: jL
      preemptionPolicy: ǦǬɄ歿煸ȍ矦澎ȕ'瘝ǌQɟ哓
      priority: -1800304797
      priorityClassName: VaSOV98
      readinessGates:
      - conditionType: Kǘ嗆无秼炫掟聫ç庖撬6沙gɖTS·Q
      - conditionType: ȐŐʝ螛厔ò.汚ǦũT凅匳Œ蜔1蠤柫
      resourceClaims:
      - name: cON3C3Auy7T
        source:
          resourceClaimName: zh5JZ
          resourceClaimTemplateName: YITF
      - name: oBb91o
        source:
          resourceClaimName: MEfLw
          resourceClaimTemplateName: RqOs51NiS
      restartPolicy: ŗ
      runtimeClassName: 1jv
      schedulerName: gD
      schedulingGates:
      - name: YENK8
      - name: BD4ibDV8U
      - name: ylCnVd
      securityContext:
        fsGroup: -2860612089304590000
        fsGroupChangePolicy: Always
        runAsGroup: -1827725402989350000
        runAsNonRoot: false
        runAsUser: 8839503618715715000
        supplementalGroups:
        - 2412557130195790300
        - -7346098406697862000
        - -4814383466567724000
        sysctls:
        - name: kJ4ycc
          value: 0o09
        - name: StUND9
          value: 8a9tO
        - name: GommwMBaA
          value: NqvEE
      serviceAccountName: C2ljrknKo
      setHostnameAsFQDN: false
      subdomain: vJD
      terminationGracePeriodSeconds: -6615004201982806000
      tolerations:
      - effect: Ɠ癏A诔Ǭ*,ŧ筪Ê3aąm烘 
        key: i8cH793
        operator: ɦw匝鞱ɏ弳簪1SƱĩħ2K滥
        tolerationSeconds: -3374367227524388000
        value: 3j4
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: CrqiYWNMp
            operator: ǒD貯6,{w\(ȢU?
          - key: fdx7
            operator: æǃĺ|%ʡR曷Q瓞Ú
            values:
            - jalZ
          - key: HaURTVl
            operator: ɌL妨涾Fȵ`l騅ŉS
            values:
            - C
            - GG
            - ozmK4
          matchLabels:
            R: Utb6ETP4
        matchLabelKeys:
        - nq5L8J
        - u6zb93
        - lfNz6
        maxSkew: -546249673
        minDomains: -459798189
        nodeAffinityPolicy: zɽ莄/3录筘ʅ8 -ʞ
        nodeTaintsPolicy: ev訅)麤Ƈl泚ǅ氜õ
        topologyKey: lUBy
        whenUnsatisfiable: 蟶ŁȠÔ0谏
      - labelSelector:
          matchLabels:
            gjMYRi: 2RlZeR
            vczCL: eTK7Jnk
        matchLabelKeys:
        - DQtU0
        - 6fvPm
        maxSkew: 375766521
        minDomains: -551712245
        nodeAffinityPolicy: vǵ鳈
        nodeTaintsPolicy: ĄƠU`P紪d訿亸Ëö牷ã
        topologyKey: "Y"
        whenUnsatisfiable: ""
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: CcbjlS
      - name: Y1n8j1syq
      - name: m45i4rPu
      - name: t3Cy
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    6tS3Gzxd: hgT9pfe
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4MPmeCPMB
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - 4MPmeCPMB-webhook-service.default.svc
  - 4MPmeCPMB-webhook-service.default.svc.YI
  issuerRef:
    kind: Issuer
    name: dHTgQf-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: CcbjlS
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    6tS3Gzxd: hgT9pfe
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 4MPmeCPMB
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: dHTgQf-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: dHTgQf-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 4MPmeCPMB-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: dHTgQf-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 4MPmeCPMB-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: xPlFoa8U
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-075.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    e6mSM: MVXAO
    zKu2Al: wC
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: "567"
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: E6z
    health:
      healthProbeBindAddress: rxHDaXPt
    kind: EETFn
    leaderElection:
      leaderElect: true
      resourceName: k8
    metrics:
      bindAddress: Nuy
    webhook:
      port: 320
kind: ConfigMap
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: Hjo9sbxO
subjects:
- kind: ServiceAccount
  name: "567"
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Hjo9sbxO-election-role
subjects:
- kind: ServiceAccount
  name: "567"
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Hjo9sbxO
subjects:
- kind: ServiceAccount
  name: "567"
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Hjo9sbxO-rpk-bundle
subjects:
- kind: ServiceAccount
  name: "567"
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 8ZgI1VH
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 8ZgI1VH-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 8ZgI1VH
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO
  namespace: default
spec:
  replicas: -524693962
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 8ZgI1VH
  strategy:
    rollingUpdate:
      maxSurge: 596897809
      maxUnavailable: 476555247
    type: Á.ɫ鑧8颶
  template:
    metadata:
      annotations:
        "": gl6v
        M57szq: J
        j96kfNUus: Ijr55i
        z1la2G: S9Z4dW
        zWc6Q: BJX
      creationTimestamp: null
      labels:
        Lp: YkknZbO
        Yp39: "5"
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 8ZgI1VH
        jAdo: EO
    spec:
      activeDeadlineSeconds: 8860282710824060000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchFields:
              - key: NjKat
                operator: 8螫ȗ鿬擧疿Ȉ"Í艓ŀȞʂ
                values:
                - Q07AV
            weight: -671966542
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: JdLPzIs
                operator: 虶.久诗6焱4ûȹİR均窼Iz !ʣ~
                values:
                - g10v6
                - Ye7T9NByS
                - UHKd
              matchLabels:
                CnWM: Td2
                EpaY: iD7y
                XU1g: ""
            matchLabelKeys:
            - 6rLaeisT
            - eXD4
            mismatchLabelKeys:
            - jksVjgbzc8
            - 1ESly7NIox
            - Tf6ZqIhHbE
            namespaceSelector:
              matchExpressions:
              - key: k5XlXm
                operator: 3C料 Ĩʬɥr9猲ŏb
                values:
                - IZ3
                - S8n6hDZM0
              - key: 0T1i78Zr87
                operator: ȉ蔝Jɞ坟挢Ȍ篵
                values:
                - kkn6pKzGi0
                - L3JML
                - UlSVv2BdK
              - key: G4CooKG2g
                operator: 妷ȓ賸髋L捙¢ɼđ=lL嬑Ƒ
                values:
                - zAcj
              matchLabels:
                j9pPtlwzC1L: Wcao
            namespaces:
            - q
            - nQjk5TJ
            topologyKey: v
          - labelSelector:
              matchLabels:
                X5IxJRjL: Z
                uUAzszYsIv: MQoS
                xT7h: aNUmPsb
            matchLabelKeys:
            - TCSw35Qar
            mismatchLabelKeys:
            - zz3
            - x0UG7P
            namespaceSelector:
              matchExpressions:
              - key: UWyVNR
                operator: Ū,¤栈騴ȵPmʏ*欍D3ƩǞ謯
                values:
                - X5
                - 30QC
              - key: AYTFwhY
                operator: ZbƮX淊ʖVǕǎ齘Őȿŝǃ
              - key: r
                operator: 萒Ǹ蔂Żȣ鎢eɩ瓱钆璊ȃ鳟Nƿhņ
                values:
                - VM7fJ
                - cuPKF
                - d
              matchLabels:
                3se: xpRnM
                MjKtZoqo: A9Gi
                bwC: 8uPx
            namespaces:
            - jc
            - ""
            - 4o
            topologyKey: g
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: VVc4ZUl
                  operator: 6锈ĤǪCâ,?遞ȴȿ憩
                  values:
                  - OlFd5KNuAd3J
                  - i7yr
                - key: rbVsKp
                  operator: ʤƞƷ釻鷆Ǥ蚂晩悅墴f
                  values:
                  - FdjUOhW
                - key: 0p0ze4wO2Ug
                  operator: 7幔{睱ƔyƖʜ郹`
                  values:
                  - P4z
                matchLabels:
                  auDXF9AYZn: lX9ux
                  uAP: MXn
              namespaceSelector:
                matchExpressions:
                - key: 0xEOAYJPk2z
                  operator: cǷŔvĻ諢鯳sȜȋ"gȥ^i扛粐拇
                matchLabels:
                  X: 649QQrf
              namespaces:
              - wEB
              - bd2
              - Tu47
              topologyKey: VJ5
            weight: -433891957
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: 50XhN1ox5Gz
                operator: ă縠樜肾醲ʪǙGbƊ坝搔棼KC
                values:
                - ""
                - ArO
              - key: ""
                operator: ;śÇ咎v
                values:
                - VD
                - L5oyxK6o
                - RneGz
              - key: JgcCF
                operator: Ă刁晋攴Ã×灝颼Ȗ0鱷ɮżǃ勣甬渔諨ɗ
                values:
                - sucw
                - 2xTwY
            matchLabelKeys:
            - mUlPcM
            mismatchLabelKeys:
            - NTaltxi
            - HCj
            - wSN
            namespaceSelector:
              matchLabels:
                "": ""
                7B: UhZIlRd7NS
            topologyKey: ldQ
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - eyxGhI
        - 9YL
        - 6HEr
        command:
        - /manager
        env: []
        image: 9kg:hk
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 501
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 430
          periodSeconds: 301
          successThreshold: 779
          terminationGracePeriodSeconds: 220
          timeoutSeconds: 656
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 847
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 377
          periodSeconds: 911
          successThreshold: 668
          terminationGracePeriodSeconds: 881
          timeoutSeconds: 52
        resources:
          limits:
            cpu: "483"
            memory: "426"
          requests:
            cpu: "582"
            memory: "5"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - 4mEBMGUN
        - eW0ncQ1
        options:
        - name: fGdpRd
          value: ""
        - name: a68vK
          value: fFsKfckTBell
        searches:
        - DGNape
        - sTUo
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - S7
        - Nb
        - MSI1c5z
        ip: PO
      - hostnames:
        - oCyf
        ip: zigho2MJj
      hostIPC: true
      hostPID: true
      hostUsers: true
      hostname: Q
      imagePullSecrets:
      - name: dO
      initContainers: []
      nodeName: 2NjpJ
      nodeSelector:
        8X: FmCUcCRg
        JUps: pHT46I1
        Jo11wn: qv
        KxkrbPV: BfrcT
        o4: QmvS85
      preemptionPolicy: 抝鸁!ɢưʩõ!¸宁剓Ǖ硰
      priority: 1899005886
      priorityClassName: QdsxfmGTz
      readinessGates:
      - conditionType: 薜K5羜}_ǜ.ȼÏu摴À
      - conditionType: mɶ蔼峫兩ƏɤɁ
      resourceClaims:
      - name: F1E
        source:
          resourceClaimName: ljK69
          resourceClaimTemplateName: 1rpXBCej
      runtimeClassName: vmC7Hvzm
      schedulerName: 4UKQ
      schedulingGates:
      - name: rnq
      - name: 2V
      securityContext:
        fsGroup: 8926242825143552000
        fsGroupChangePolicy: Always
        runAsGroup: 8747486125952529000
        runAsNonRoot: true
        runAsUser: -451060548145037500
        supplementalGroups:
        - 3746112542108710400
        - -6527083130648772000
        - -2015245842731106300
      serviceAccountName: "567"
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: t1GfKasszD
      terminationGracePeriodSeconds: -2460823117072627700
      tolerations:
      - effect: ƽqêTȨ茬鳰质襭
        key: Nq5
        operator: 烡t裖ɤſƼƥ蟨V士踏Ċ
        tolerationSeconds: 6699689125267329000
        value: wKVtov
      - effect: 嗘採鳖
        key: 8y9WC
        operator: 艽œɝKʖ萣殹ɅA2鳷{鯽垲
        tolerationSeconds: -2365666611357915000
        value: 4nCYmTIs
      - effect: 渡悵z了揾Â.
        key: bLxG9ujcZ
        operator: 筋Z煭ƞ,犃
        tolerationSeconds: 3907366189500161500
        value: GhmdPdN
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: cX
            operator: 出ŊǹOǔƱG
            values:
            - 0tJrY
            - iFkr4hmK
            - Xy
        matchLabelKeys:
        - dXst
        - LK2q
        - NqP64
        maxSkew: 1537329546
        minDomains: -1720337935
        nodeAffinityPolicy: ȓ籴ɭ$ȼ6¬慈B
        nodeTaintsPolicy: ɚ,ɝƲ溤宗Ê轧ƞ|
        topologyKey: ""
        whenUnsatisfiable: +hē}鿐suwo諗hz豴ȴɮ
      - labelSelector:
          matchExpressions:
          - key: PYDcUs8Zq
            operator: 铇秫
            values:
            - SqDWeja
            - tTedc
            - wb
          - key: 8zULko
            operator: 疄
            values:
            - fAUHq
            - ZZOhi
            - "7"
          - key: 6V
            operator: nč彝}ʇTi嚡vMȸ昻
            values:
            - h
            - ""
            - 8AQ0
          matchLabels:
            4kmh: QCa
            VXwKZfw: LO8AyhU
            hWrGDCfa1Ij: 9zFgf08
        maxSkew: -275470034
        minDomains: -1225374972
        nodeAffinityPolicy: 蠱擙
        nodeTaintsPolicy: ĘįÇɸŦ菽彅`虞
        topologyKey: i
        whenUnsatisfiable: ',ɯŚ(ɖ叕Ȉ8芒杋_Ǉ鴄ȢVǬ醺'
      - labelSelector:
          matchLabels:
            OZyVul: PQQ8b1
            cL3I9BNam: EzlBz9
        matchLabelKeys:
        - brAOgDpDb
        - FZNd90EVkKB
        maxSkew: 1309446521
        minDomains: 250354744
        nodeAffinityPolicy: ɦv佸ʝ
        nodeTaintsPolicy: 男ǂȄx
        topologyKey: i8m8
        whenUnsatisfiable: 荩Ŧ\攽ƾ槉E{蔄ʑź
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: pV
      - name: G7ezke
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - 8ZgI1VH-webhook-service.default.svc
  - 8ZgI1VH-webhook-service.default.svc.iuxdfE
  issuerRef:
    kind: Issuer
    name: Hjo9sbxO-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: pV
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    qA: WyamBB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 8ZgI1VH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Hjo9sbxO-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: Hjo9sbxO-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 8ZgI1VH-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: Hjo9sbxO-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 8ZgI1VH-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 567
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-076.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 8MCt
    health:
      healthProbeBindAddress: "54"
    kind: hFpDu
    leaderElection:
      leaderElect: false
      resourceName: JCxBXAw6
    metrics:
      bindAddress: Av
    webhook:
      port: 329
kind: ConfigMap
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: 8K2N-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: 8K2N-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: 8K2N
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: 8K2N
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 8K2N
subjects:
- kind: ServiceAccount
  name: YP12Q
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: 8K2N-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: 8K2N
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: 8K2N-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 8K2N-election-role
subjects:
- kind: ServiceAccount
  name: YP12Q
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: 8K2N
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 8K2N
subjects:
- kind: ServiceAccount
  name: YP12Q
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: 8K2N-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: an
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: an-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: an
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: 8K2N
  namespace: default
spec:
  replicas: -2075530003
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: an
  strategy:
    rollingUpdate:
      maxSurge: 2081592605
      maxUnavailable: 1885460453
    type: Wû.$Ȋ岭ÿ蜪郁`{`Ʃ
  template:
    metadata:
      annotations:
        AkeDnt5VPkKPy: "3"
        Fr5Hh: v5ePByX47
        G: zDZSnjZA
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: an
        gTaNkih: g9Tr2xh
    spec:
      activeDeadlineSeconds: 5799411821181429000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: CYk
                operator: D窖曏Ȟ
                values:
                - UWI
                - JU
                - FJ
              - key: jPl1iS8UXT
                operator: ŗ²
                values:
                - uvH
                - tO6XE
              matchFields:
              - key: ""
                operator: Ʈ叐另5t綀ȝ°
                values:
                - NETx
                - RKzy1
              - key: csKN
                operator: 抦Ɖ犘Mƶ涫ĭ
                values:
                - 0d7K3CL
              - key: 6aFsNI
                operator: a氙š宕ȩ酑ƷRđY5抩ȧɛ貪繮堀媌ď
                values:
                - J
                - "2"
                - 42g5QN
            weight: 247115514
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  85yJ478d: Vo7
                  NgQ5EH: o1bl
                  Z232YGd: Aep0
              mismatchLabelKeys:
              - hI
              - eIuV4
              namespaceSelector:
                matchExpressions:
                - key: l9AE4D
                  operator: ""
                - key: NYsDY4i
                  operator: ǺYʄȨ_Ʈ,!Ã1ƮG睇
                  values:
                  - M4KMQQtSS
                  - LY7S
              namespaces:
              - ohq
              topologyKey: 9RQ2Zix2lXU
            weight: -77294897
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: Eg
                  operator: ǋƥʩ儐嚸氠ƀĆ垜
                  values:
                  - t8T
                  - hag
                - key: HJngluMZ1Gt4
                  operator: 飗阂Ț
                  values:
                  - VcI
                  - tRuMlK
                  - GWMq3PG
                - key: HS5QS
                  operator: TX屒~ÈJ
                  values:
                  - 69slSEWwH6N
                  - p
                matchLabels:
                  7x: nkheJ
                  8yV5foq: 6kWv
                  nHtYZe: aLoixy
              matchLabelKeys:
              - 0CQ
              mismatchLabelKeys:
              - Zzfc
              - p
              - rOvKTF
              namespaceSelector:
                matchExpressions:
                - key: RdOt
                  operator: 'ù§蜔醫(Ë¯JÁ偻:'
                  values:
                  - i45
                  - Fy4G
                  - ""
                - key: 1eR
                  operator: ""
                  values:
                  - NianifQ
                - key: CU8g5nTV9R
                  operator: 蟷<ʭ闻[恣Ɛ劉唌!E«栂
                matchLabels:
                  "": VZ6myuoXR9
                  "7": SNzG
              namespaces:
              - ter5SPqDJ
              - 6J
              - gzGOT
              topologyKey: uu
            weight: -483029993
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: E1dAP
                  operator: ɵ`/Hû鬫Œ埙伋tĻȉ
                - key: Yfh2
                  operator: aɢÚɕ厀跈ŕǤ
                  values:
                  - q
                  - CNmr
                  - 8hZgCz5
                matchLabels:
                  G: kvGnDJb
                  uyI: GcT
                  wd4NZ: hlGF7
              matchLabelKeys:
              - V62aP7
              mismatchLabelKeys:
              - yLn8
              - n0b
              - mNd
              namespaceSelector:
                matchExpressions:
                - key: MgB
                  operator: ö敝蹍鱈r拖亴ǯǊǳk砎Aɞ
                  values:
                  - UKLTWJdvIS
                  - dZxRDbCPGw9g
                - key: 79f
                  operator: ǯ繠ɜŜ懵櫳Ȉ箪o
                - key: pltHB
                  operator: 塞)l忞@
                  values:
                  - Dx
                  - whKmqiD
                  - TYUiI
                matchLabels:
                  P87YGTPtc: uO
                  hOhm7hGh: tj
              topologyKey: KZpV
            weight: -574325726
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: sM18uA4
                operator: 1;cćô麗ķÞȪ/D1l錐hǐƧ®T
                values:
                - HlAb
                - t
              - key: QKJ2PGSlUU59
                operator: 扺蓄@蛀折扤#0Ƃ
                values:
                - XgJkOw
              - key: t
                operator: a萉Ū舐&NȐ賁諥旴4ī{Ǚėßȡn
                values:
                - oMj8iy
              matchLabels:
                inDd: ""
            mismatchLabelKeys:
            - 4Cf
            - bzeKW
            namespaceSelector:
              matchExpressions:
              - key: BZNNJ3
                operator: Òȕ瀦ǱǦÝhɰ巗ȝ湹Ģ薵
              - key: hsnivgy5
                operator: Ł乗Ƃ
                values:
                - z
                - 2XgDH
                - r8P2
              matchLabels:
                WrKQ: P
                uO: NjkzU2I3
            topologyKey: X1v
          - labelSelector: {}
            matchLabelKeys:
            - pWRDj
            mismatchLabelKeys:
            - Toir
            namespaceSelector:
              matchExpressions:
              - key: aO
                operator: '*kn摹ʬ.艂ɹȊešƳNǱȮjN闐'
                values:
                - v62
                - id0OWM
                - a
              - key: nfEz8wh
                operator: 蜐溊ŽʆbǋJ撻狽y+鸻栂枡
                values:
                - v7Ceau
                - wjfNLJAz
                - o851xqcUl
              - key: uM1a9
                operator: -lɴ;þ\睖咟储Ɯ穆ɭ.ŀɍg浊è
                values:
                - 2hZZ0
                - c
              matchLabels:
                "": t
            namespaces:
            - kZjv
            - JnaG89i
            - cw
            topologyKey: mNZR4WV
          - labelSelector:
              matchLabels:
                "": ""
                Jhaaujnc9: SIzPY
                pyYNPwm: ZVJxhvAKL
            mismatchLabelKeys:
            - Y4Irc2Irno5o3
            namespaceSelector:
              matchExpressions:
              - key: u8vap5
                operator: Āł鎝嚽q惞é蒐瑂Qŋɶ:ȽO姡
                values:
                - rQ4Fgo4
                - yphu9q
              - key: R6xr
                operator: ¼
              matchLabels:
                0xoWeHaR: UWA9sYUtyE
                Hm366a: q
            topologyKey: WVSXai0Q
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: kOtCJmi
                  operator: Žȣ1OǠȌĎɮ
                - key: Q4Ql
                  operator: '[rɄų堛'
                  values:
                  - HcBejxu
                  - xfu
              matchLabelKeys:
              - XGNT
              - D0dDfOI2
              - 4i
              mismatchLabelKeys:
              - T1lgExlW
              namespaceSelector:
                matchLabels:
                  ETK2M: q
              topologyKey: eO
            weight: -227304814
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: 4p
                  operator: jmCN冮}7阵ïA{
                  values:
                  - NCSN
                matchLabels:
                  3hitzIhY0: kRzg
              matchLabelKeys:
              - Wfq
              mismatchLabelKeys:
              - z4Qsp
              - Ba6V
              - 5l
              namespaceSelector:
                matchExpressions:
                - key: cx
                  operator: 锐h
                  values:
                  - 4hzpDaSK
                  - W1K
                matchLabels:
                  s1Fu: GAMiUZ
              namespaces:
              - IH
              topologyKey: "n"
            weight: -779432579
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: d4xP
                  operator: 譵簿Ĕ葉
                  values:
                  - kzLbV
                  - 2Rpm
                - key: IXEAa4i9
                  operator: Ă垁疞Ɏf捣狖踃ʨmǾ竭Q,ƧĂV牲
                  values:
                  - Bff
                - key: 1r
                  operator: ÐlľȻ諑ǀ蘒~
                  values:
                  - YXxr0
                  - jr7l3j5CH
                  - a46rQd
                matchLabels:
                  6eV: 1ZiOZ
                  jj: X3Otox6p
              matchLabelKeys:
              - kLFD1Nt
              - vqPu
              mismatchLabelKeys:
              - UI9S
              - 7qP9
              - Ugqd
              namespaceSelector:
                matchExpressions:
                - key: ai4IgX
                  operator: 鄖Ĥ(p囜Yvȴɤƭȑlpi6鐚
                - key: cExFkkWl
                  operator: 伹鷳焑恁鱑ĎŜ
                - key: a
                  operator: 6頎漙ʘŮ萛aS寐·Ǫß!qġ-WǤ(
                  values:
                  - CWVc8ngf
                  - EPis19IEdL
              namespaces:
              - FSApYwCg
              - U
              - Qp
              topologyKey: 9CYHm
            weight: 478561448
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: LbtXK0
                operator: 阄另嶋b(祢>
                values:
                - S7a9
                - zfEMJo71O
                - kLVe
              matchLabels:
                "": l9hC8Y
                ZP1: xG
            matchLabelKeys:
            - IYGUJy0tZTD
            - fDT
            mismatchLabelKeys:
            - Ilfs8EI
            namespaceSelector:
              matchExpressions:
              - key: p6ZXg
                operator: 0戺ß莤顬鴦Qů
                values:
                - I9igEx
                - kYK21Q
                - C0Qbx5WE4ryE
              - key: dk6u
                operator: 镱ʩbd
                values:
                - PYA
                - Jk5c
                - 8ytiAgm3I7e
              - key: qcqeq
                operator: ʁȜ摇撧Ñ说P逇ɚ.W _E壟ʇɮ睃
                values:
                - y8A4HwS
            namespaces:
            - Vj1hYzNpa
            topologyKey: kbejvw
          - labelSelector:
              matchExpressions:
              - key: Q
                operator: 'ķƜ戺ʮũ?菵Ó釘羸¤JʒǠ '
                values:
                - F
                - 7IKAX
                - cp7sv4p
              - key: nA6Xe
                operator: ƌ姺踤,ơ虌袧]葝sRƛ
                values:
                - wPrrV3Ufhj
                - qlnoxIQCNv
              matchLabels:
                8r: 8lk4CAL
                AN7nb: dZhZ
            matchLabelKeys:
            - CVDiPfS
            - c4Glm
            mismatchLabelKeys:
            - xy1Wyd
            - nKj
            - eBImiHdI6v
            namespaceSelector:
              matchExpressions:
              - key: 8KpuaONbUs
                operator: FzgB轅籵鏣Ĥ湅À貏ǋ扏4
                values:
                - wmca
                - L8Za8l
                - j
              - key: adh
                operator: Øž
                values:
                - jFNIl3t
                - Yj6dW9
              - key: bTbI8OzS
                operator: 铽§紜č芒ȶpǽ嘧
                values:
                - ""
              matchLabels:
                "": TN
            topologyKey: D5FE
          - labelSelector:
              matchExpressions:
              - key: vdSWz
                operator: ĸne鐱$C慂_|ȒPĬ
                values:
                - cEH3048FJt
              - key: TG30D
                operator: '[幁I蟧&>¢ťȦ''蜛ÐB>'
                values:
                - lAXsg
                - 6nfeIMWRdjcj5
              matchLabels:
                sxc: 3PThK
            matchLabelKeys:
            - I4G
            mismatchLabelKeys:
            - mAf
            - ANIKx
            namespaceSelector:
              matchExpressions:
              - key: hPuq
                operator: 7ʂ鐤o舦yW螅lÂ/[顯LQ
                values:
                - La9apqCGq
              matchLabels:
                vYBX: wRg
            namespaces:
            - s
            - tHp
            topologyKey: 6UDS7Or
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: D43Nf:McKTb81
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 136
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 391
          periodSeconds: 132
          successThreshold: 75
          terminationGracePeriodSeconds: 572
          timeoutSeconds: 573
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 680
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 563
          periodSeconds: 529
          successThreshold: 787
          terminationGracePeriodSeconds: 402
          timeoutSeconds: 84
        resources:
          limits:
            cpu: "890"
            memory: "496"
          requests:
            cpu: "519"
            memory: "201"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - 9vmm6l
        - rtQO
        - ycvTf
        searches:
        - mb00
        - G
        - "8"
      dnsPolicy: ' 觩.ʜ{X俓ğŇ倆[魀氎ƶ澷扈Ǫ'
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - Ax
        ip: 27VC
      - hostnames:
        - OHbL9b2Y
        ip: n0WUVdZ
      - hostnames:
        - Lr2p7xlD
        ip: p
      hostPID: true
      hostUsers: false
      hostname: vXNpWb3Q
      imagePullSecrets:
      - name: RRfZPIJFA
      - name: 8F
      - name: S
      initContainers: []
      nodeName: 9U5
      nodeSelector:
        JfRWThU: e0lo
        VmcbYx1: 3iv81ur
      preemptionPolicy: N發A<t矅
      priority: 304480629
      priorityClassName: D8tk
      resourceClaims:
      - name: pHFMV
        source:
          resourceClaimName: T2RuPRK
          resourceClaimTemplateName: FfTbcFKZ
      - name: ""
        source:
          resourceClaimName: M
          resourceClaimTemplateName: LXjD40
      - name: hc3
        source:
          resourceClaimName: b7W7pdcs
          resourceClaimTemplateName: olbSV
      restartPolicy: űS@E鉊摟ɰǃȂƙ涾柽Ʀʕǉ羥
      runtimeClassName: wG
      schedulerName: CEjqDi8Ey
      schedulingGates:
      - name: T
      - name: 2mU
      - name: JEr
      securityContext:
        fsGroup: 396026757131648060
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 5422092757715170000
        runAsNonRoot: false
        runAsUser: -1340563028287645000
      serviceAccountName: LxM6
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: 2ZD
      terminationGracePeriodSeconds: 5740690666363438000
      tolerations:
      - effect: 鶕ɕ蒨覂ĚƩ
        key: 7MD
        operator: eŲ嘻đ8Dŧ_9
        tolerationSeconds: -8265045332720818000
        value: e0JnkTa
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: 4Vw2i
      - name: H4
      - name: ZQdr1jv
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - an-webhook-service.default.svc
  - an-webhook-service.default.svc.MsG6JX
  issuerRef:
    kind: Issuer
    name: 8K2N-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: 4Vw2i
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    Ou: tUUeg100
    QOCh: CAl
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: an
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    ib: 8cz
    mKZJ: qFJ
  name: 8K2N-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 8K2N-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: an-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 8K2N-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: an-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: YP12Q
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-077.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: gFdSAMIO
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: XaAvIXd
    health:
      healthProbeBindAddress: mYZc1
    kind: h
    leaderElection:
      leaderElect: true
      resourceName: Wdm0D
    metrics:
      bindAddress: w2P43b
    webhook:
      port: 58
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: RQkbO-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: RQkbO-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: RQkbO
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: RQkbO
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RQkbO
subjects:
- kind: ServiceAccount
  name: gFdSAMIO
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: RQkbO-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: RQkbO
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: RQkbO-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RQkbO-election-role
subjects:
- kind: ServiceAccount
  name: gFdSAMIO
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: RQkbO
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RQkbO
subjects:
- kind: ServiceAccount
  name: gFdSAMIO
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: RQkbO-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: MxF
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: MxF-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: MxF
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: RQkbO
  namespace: default
spec:
  replicas: -1445635454
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: MxF
  strategy:
    rollingUpdate:
      maxSurge: 1510833483
      maxUnavailable: 960706256
    type: ȉ畬Ǒ`1
  template:
    metadata:
      annotations:
        lRAZeJ: AINxsH
      creationTimestamp: null
      labels:
        10oAcAm: SvQ
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: MxF
        arSwjgxlA: SmfUa
        kgNy0M2tC: RUGsH
        sFabAeHN: wPjEnYwb
    spec:
      activeDeadlineSeconds: -235748412987831780
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: rE3T1P
                operator: 螿
                values:
                - iSF2JEBC
                - wxmHjVyR
              matchFields:
              - key: rS
                operator: '腵鞨准|ɥ '
                values:
                - ""
                - vOG
              - key: lErWD
                operator: ŀOɑ»杉9NtŎ%lǭ楍U谿铲-敛
                values:
                - mBmX
                - 4yCGFI83
            weight: -107109280
          - preference:
              matchExpressions:
              - key: vJn7xJ
                operator: 幺Ī锸
                values:
                - 36UKnK
                - TfBmtmwZ
              - key: G5YjFJw7
                operator: 翔啼9
                values:
                - h0J
                - ""
                - ""
              - key: KP
                operator: m抆R礁*yºyȗ檰,ǒ
                values:
                - UKW
              matchFields:
              - key: hsO
                operator: dǪį廓
              - key: kHcc
                operator: Ǟv忎穸ɀƕ.R
            weight: -258238497
          - preference:
              matchFields:
              - key: 0MLPiafcnro
                operator: ą3
                values:
                - pmYsMaN2gkh
                - sQ8
                - zE2
            weight: 798809217
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchFields:
              - key: KfWONl9Ub
                operator: 落骊Ǧ&玙ą躠劰?ɀ鞌ƨ樛ȏ祁
              - key: stb36Aq3fa
                operator: 眒
                values:
                - Pbz
                - Zk2FIujmxzi
              - key: ""
                operator: 8閶Ȕ営vÃʍF
                values:
                - xDR
            - matchExpressions:
              - key: ViNoP
                operator: 込G
              - key: u
                operator: 纍sùĄ蜔]^7Ȩ瀉
              - key: fF
                operator: "4"
                values:
                - LjVk3YR486FJc
                - wCf
            - matchExpressions:
              - key: EJ4e
                operator: 抩BA@傚ú檁B榫ɶ肢
                values:
                - uFvAdW4JP
              matchFields:
              - key: 9NUnP9mld8
                operator: 賹Ǻ¨'?1ƙɈ颩ɥYŵ
                values:
                - m7qr9Zo9
                - FHP
                - t
              - key: w
                operator: dĀ扉紦e簸
                values:
                - ""
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: SXF8UwNn
                operator: 弰s8Ȝ
                values:
                - PnWmuvDbG
                - C99qGG8p
              - key: mexcoV
                operator: 宂`Ƙ遐X怉mȱƲ
                values:
                - FGrHY3
              - key: v
                operator: 暯琪T
            matchLabelKeys:
            - H58
            - vAEL
            mismatchLabelKeys:
            - HAQRyXzY
            - iQzww
            namespaceSelector:
              matchExpressions:
              - key: QdsyFu
                operator: E寕Aşì弛啵綿"w
                values:
                - dSg6Tf
                - bhXIdZTJEltV
              - key: zIT8E
                operator: 沠Ã瀏Ē0ŰȇƑ鶽
                values:
                - Z
                - NHH
              - key: 8ebgpip
                operator: 猷|苙çýP@ǶǑ斿
                values:
                - 4OLpf
                - lzAs4M3
            namespaces:
            - 7P6I1hp
            - g
            topologyKey: vxYH
          - labelSelector:
              matchExpressions:
              - key: 8rOX
                operator: 8Î蟴斬e猃
                values:
                - BVBx
                - 3J
              - key: zamt
                operator: 4ȴ忌+铙
                values:
                - K8saVOHqXn
              - key: Ec9Y
                operator: 旵ǿƩ£iǜPa
              matchLabels:
                c1iz: 3v1F9XeILkTQ
            matchLabelKeys:
            - NuOgQDX
            - CyY
            - alKE
            namespaceSelector:
              matchExpressions:
              - key: U
                operator: èh/W殢Ơ
                values:
                - c
            topologyKey: ttHtaLp
          - labelSelector:
              matchExpressions:
              - key: EmbE7HVN29mZ
                operator: Ʒĩƛö褏S揜°溙c§蛬俎嵆楺嚢²ɺ'
              - key: 9FAdMg4
                operator: ""
              matchLabels:
                S7PZXaC: 1HA
                pM0u: 6xKDIg9K
            matchLabelKeys:
            - Zn6NL
            - OTgm
            - Te
            mismatchLabelKeys:
            - thK
            namespaceSelector:
              matchExpressions:
              - key: z33aQ
                operator: Ď獿ķʖɑǧɟʉ(Z9ø
                values:
                - xMRp
                - "1"
                - ujc
              - key: w
                operator: Ñ
              matchLabels:
                Ky3: jiVT
                R: 8V
            namespaces:
            - ""
            topologyKey: nXTB2Bx
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: diIL0F
                  operator: Ɲ尤凥ŵ杝;ġ惏Ĵ墴Z)ʜ9鿿7墥sȿ
                  values:
                  - Yk5DuO
                  - w8nlT3U
                  - vu7pfErI
              matchLabelKeys:
              - 90fUzxV9nP
              - DVM
              - XHEd
              mismatchLabelKeys:
              - LcKuwbwh
              - vDTEeRNex
              - QYXcViLsR
              namespaceSelector:
                matchExpressions:
                - key: ZB
                  operator: ""
                  values:
                  - ""
                - key: cOrn
                  operator: 稺髴ɞ4ƫ蠆嚛発
                  values:
                  - R0
                  - 7Cxap
              namespaces:
              - "9"
              - Lc1k
              topologyKey: YEubNp
            weight: 1559931225
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  "": uHKgs
                  AgVYm: mJw
                  mcJTQgh9U: HSiw
              matchLabelKeys:
              - Q51EWOHyhISt
              - 6Tf
              mismatchLabelKeys:
              - dJIxyj
              - SwH
              namespaceSelector:
                matchLabels:
                  a: s6
              namespaces:
              - t9H5HoI1d0Q
              topologyKey: IfqTm5
            weight: 1473719947
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: L57hw
                  operator: ő闡ʨN剏畈Rƣ7ǚ技鳼Ȑk
                  values:
                  - 2HI
                  - BmuO
                  - fyc7JE
                matchLabels:
                  7RR8: ucmGtD
                  IED: lAtn7No
              matchLabelKeys:
              - kjR
              - Sk1tiya
              - b7I27xv
              mismatchLabelKeys:
              - B3aMuw
              namespaceSelector:
                matchExpressions:
                - key: 0e
                  operator: <ïS謜臆?梧洶Ȕ肮秖ĉp
                  values:
                  - XBfS7WlnyLT
                  - 9z8vxPH7ap
                matchLabels:
                  U5: ZP8Z3ha
                  eQxCbZeiJ9: xEN
              namespaces:
              - 5I
              - qNsL
              topologyKey: FQ3bE
            weight: 778594535
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                4IO: vfE2
                R: MDR
            matchLabelKeys:
            - fxV
            - 9fo
            - i078
            namespaceSelector:
              matchExpressions:
              - key: U8R
                operator: =ȓh彵J¾řƄ
                values:
                - A95KgOEpvkSCc
              matchLabels:
                MpOQP2: 9qIM
                mWx: LWxJKd6N
            namespaces:
            - e6z6L
            - EKHJ
            - oeacoFZ
            topologyKey: uHi
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: M2Q:Q9Q
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 986
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 618
          periodSeconds: 232
          successThreshold: 239
          terminationGracePeriodSeconds: 76
          timeoutSeconds: 911
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 957
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 346
          periodSeconds: 576
          successThreshold: 950
          terminationGracePeriodSeconds: 760
          timeoutSeconds: 177
        resources:
          limits:
            cpu: "713"
            memory: "257"
          requests:
            cpu: "43"
            memory: "488"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - EC
        options:
        - name: o
          value: NW08
      dnsPolicy: fǢǦ衡\
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - ip: gclP
      hostPID: true
      hostUsers: false
      hostname: I4Q
      imagePullSecrets:
      - name: v
      - name: gm8CVbo4EC
      - name: EvmVWW9
      initContainers: []
      nodeName: fiLXT0q7
      nodeSelector:
        BEMD: Yw9gx7IM9T
        E800wg: RpXf6n
        dx: nul
        j9LZ: "6"
        mp: 6gmys
      preemptionPolicy: ɞ賮ě8銢旝I笏ƉA
      priority: 1427962253
      priorityClassName: j9WcaYg
      readinessGates:
      - conditionType: SĖ鴳șb吱印囼瑏ɖs攒<Zɵ
      resourceClaims:
      - name: ""
        source:
          resourceClaimName: iDn
          resourceClaimTemplateName: IZyX3yw6Zd
      - name: I
        source:
          resourceClaimName: Ft7o2
          resourceClaimTemplateName: Z
      restartPolicy: 夨M
      runtimeClassName: 0ti1Elrpy
      schedulerName: 6bIx
      schedulingGates:
      - name: "0"
      - name: qG
      securityContext:
        fsGroup: 6448458816495822000
        fsGroupChangePolicy: Always
        runAsGroup: 6072427971880282000
        runAsNonRoot: true
        runAsUser: 8851741553336730000
        sysctls:
        - name: v2Jw
          value: ""
        - name: bBww4rH0
          value: LDfAOM8BLhH9JQ
        - name: jDQWhNg
          value: Jp6D
      serviceAccountName: bHRwQEZOkPOl
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: eI
      terminationGracePeriodSeconds: -8100727355839668000
      tolerations:
      - effect: nʙ闚M
        key: w3PpYj2
        operator: 釲聉劀赊À"ǏÚ£玿
        tolerationSeconds: -7349920607773413000
        value: rjnuflwq8sk
      - effect: '#J帽xƥ$栊Ƨ膆ǐ'
        operator: u龽瀯鳻Ę樑筎哚Ȳ
        tolerationSeconds: -5128087769549160000
      - effect: 据潼偂W荁邴/ɖ樕曐ţ蕃ǔ跣X}ʢǣ
        key: rOSA5
        operator: 5簦)ǝM縶ʧĶŶ雧ž撑x&ʁʫ*ʪA
        tolerationSeconds: 4719529241349241000
        value: PoDrTpL5
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: TL
      - name: eL1vR4
      - name: r22bPa
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - MxF-webhook-service.default.svc
  - MxF-webhook-service.default.svc.Txg
  issuerRef:
    kind: Issuer
    name: RQkbO-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: TL
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    "": sxTGebP3lQ
    OQ: osmjf
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MxF
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    mNkAknTCpbj0: NCMcS
  name: RQkbO-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: RQkbO-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: MxF-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: RQkbO-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: MxF-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: gFdSAMIO
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-078.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    R: KqQ
    UBlg5: vWsmCt3b
    gW8Gbi6vR: mj0Y
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: K
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: OB
    health:
      healthProbeBindAddress: 8bURs
    kind: Av59
    leaderElection:
      leaderElect: false
      resourceName: PZXXFRC
    metrics:
      bindAddress: j
    webhook:
      port: 123
kind: ConfigMap
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 2rNNJQv8k5j97
subjects:
- kind: ServiceAccount
  name: K
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 2rNNJQv8k5j97-election-role
subjects:
- kind: ServiceAccount
  name: K
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 2rNNJQv8k5j97
subjects:
- kind: ServiceAccount
  name: K
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 2rNNJQv8k5j97-rpk-bundle
subjects:
- kind: ServiceAccount
  name: K
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: vYy9
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: vYy9-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: vYy9
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97
  namespace: default
spec:
  replicas: 1839907985
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: vYy9
  strategy:
    rollingUpdate:
      maxSurge: 2088450349
      maxUnavailable: 1840693031
    type: ȫ
  template:
    metadata:
      annotations:
        IM3sXs3I0Zy: TeYL
        UzdfbZ: Q93sKxpOW
        W0XPx: bJSAcQQL6
        mHH06QCwLmo: UUGGbI
        q5kBoN: 8C
      creationTimestamp: null
      labels:
        4snVwS: p2rZ
        Dm7NOR: Riz
        MZIsuxL: AwJ12sMED5Y
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: vYy9
    spec:
      activeDeadlineSeconds: 5827888024592184000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: ZvI4
                operator: '*銉V'
                values:
                - g
                - fmzP
                - XnP
              matchFields:
              - key: UBNUy3
                operator: .嫜Ā莤ƂÏ7$n¤ʦ
                values:
                - B
                - XJRt4GxZ4te
                - XWUvuX
              - key: dSk3l1SGw
                operator: qpý
                values:
                - F9PAciI
              - key: j1tbYUPp
                operator: È
                values:
                - MvKm2TS9C
                - Wqw3JZHeO
            weight: 394922191
          - preference:
              matchExpressions:
              - key: S04aR
                operator: 魃皘rdʒ混%Ƌ玫筻
                values:
                - aT6a6
                - RP6Iu
              - key: Q0wAZV8Re
                operator: wʤO¬Ʒ7ɫ眜ǮŹ銣ɿ筺篗Â.ʌ
                values:
                - pxXW2A8F
                - XscvROa
                - Prm
              - key: 2m
                operator: ĆǑ)/Ȫx$慁耓憧®ʃ?
              matchFields:
              - key: XxjA
                operator: Ǹ)ƗL.圠
                values:
                - ""
            weight: -1959811061
          - preference: {}
            weight: -582533792
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gT
                operator: Lȁ;籁'/"耂1f
                values:
                - 6OJWKLn6h
                - rsL
              - key: KD
                operator: 华抎=幺opgŸƥƗ
              - key: vRRX
                operator: ¸鑯gćŞ
                values:
                - LNhYhw
                - GHS7r
                - IvAb
              matchFields:
              - key: yc5E379mk
                operator: ǲŹc桺,Ù
                values:
                - uHv1
                - PH6N
                - K5emP
              - key: 5k
                operator: $斖豋拎5Ş
                values:
                - bON0e
                - qN
              - key: XdcKTJ4
                operator: è
                values:
                - crO
                - lFM5sA
            - matchExpressions:
              - key: 7nzD7Cm3
                operator: ""
                values:
                - 8CbM
              - key: Jw6
                operator: 滰Ñ咎ĪQ1PZ1eɺ!怰鲯ȣ偾ă獯n
              matchFields:
              - key: zLn8XE
                operator: 舗堫mx鋢ĴȳȺʙƅD唶I誓飓簰Ú揚4
                values:
                - Mx3lcyu59
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: E6Mt
                  operator: B僁訊%ìOƦɐ澻嗯硓E
                  values:
                  - r
              matchLabelKeys:
              - KJ
              - IoC
              mismatchLabelKeys:
              - Ekl
              namespaceSelector:
                matchExpressions:
                - key: N7NLiOc
                  operator: 罖DŃ跤ɌÚY"ʈ 垵Ȏj+偹
                  values:
                  - 8x2gP
                  - 1dW046
                - key: qEyBizSe
                  operator: 9Ƒ称B濩褟秔
                  values:
                  - BZwp
                  - PH
                matchLabels:
                  XW5CN39: 2t6bZ
                  p: ""
              namespaces:
              - Wg9Tm
              - yo
              topologyKey: 2ygHHl
            weight: -713483233
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: YVm
                  operator: ʭȁEĺtǍɏ
                  values:
                  - Byil
                  - ujy
                  - Bj6
                matchLabels:
                  BOQ: Rf8poA55N
                  sjH: Ppy
              namespaceSelector: {}
              topologyKey: 1k
            weight: 1632070199
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: URPq
                  operator: 諯ǠHA鷵Ʉ8çɈ磻Y衇ź餄Ò
                  values:
                  - w
                  - vI1NtrqG
                  - Q64vK1FrD2
                - key: 9YeHf
                  operator: 锌ǘg9削¦饹#ȋ瀥炒9K並Ȃ愅n
                  values:
                  - ""
                  - "6"
                  - terVH
                - key: xrBazifS
                  operator: 礙¬r'剽Ò鷠ÞL抍杲滽Rþ媷
                  values:
                  - YvkR
                  - rOHlGOH5
                matchLabels:
                  JP9afkoGR: nIU
              namespaceSelector:
                matchExpressions:
                - key: T
                  operator: 伆珱ɾ.徭)蒹'嚵ÄɌ#đ雋V
                  values:
                  - B3FkLmTv
                - key: TMO
                  operator: 摮ƦTImƠ稜湞
                  values:
                  - UdNUxF5
                  - G
                matchLabels:
                  JEcloaEwldQ: "3"
              namespaces:
              - ""
              topologyKey: UBB
            weight: 1221058443
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                Tm0As: w7
            mismatchLabelKeys:
            - eMF
            - JX
            namespaceSelector:
              matchExpressions:
              - key: nOa
                operator: '{ʤFX貟gAǃ羝Zǔȫ傄fWJ'
                values:
                - aw
                - Fw5nhiw3hC
                - jU6
              - key: ""
                operator: 湨槾(憯ʣĪÚ'呞镽
                values:
                - ttKmnF
                - DV49kUB
              matchLabels:
                ujQ3: f1r
            namespaces:
            - K7OX2
            - "4"
            - oV3YM4S
            topologyKey: 7mrEfq0sI5P
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  "": Hxx6L
                  Vx: LP8Vou
                  mzqVhAZ4R: 4x5wYCuAq
              matchLabelKeys:
              - aEdgV4
              - 9HKlr
              - F
              mismatchLabelKeys:
              - QpGG
              - Gjx58eZ4
              - ES
              namespaceSelector: {}
              namespaces:
              - hXSD
              - CL
              topologyKey: sCiMVRcuk
            weight: -135368183
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: qmpkJ
                operator: 草<ǂ
                values:
                - gohWKJ7
              - key: o
                operator: ""
                values:
                - 3KjsZB618C5
                - fwio
                - O1Cp
            mismatchLabelKeys:
            - 0Dh
            namespaceSelector:
              matchExpressions:
              - key: xxpts
                operator: 盯鸯č妅XK讞ɜƂN
                values:
                - "50"
                - Aq
              - key: M
                operator: 襊4
              matchLabels:
                ktwYC: vS
                w1qZ: 03Owg
            namespaces:
            - Q4HaN
            topologyKey: wn7112U
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - Sb4JTueXASpBtQ
        - og
        - GaoUIcOT
        command:
        - /manager
        env: []
        image: tczCHr:EQ6C
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 914
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 655
          periodSeconds: 687
          successThreshold: 756
          terminationGracePeriodSeconds: 152
          timeoutSeconds: 711
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 136
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 187
          periodSeconds: 261
          successThreshold: 815
          terminationGracePeriodSeconds: 3
          timeoutSeconds: 739
        resources:
          limits:
            cpu: "515"
            memory: "155"
          requests:
            cpu: "25"
            memory: "25"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - ujfhX4IQ
        options:
        - name: sDgow
          value: HhB0B
        searches:
        - 4I6Un
        - S
        - Q
      dnsPolicy: j)蹃Ɣ*īĬkɊÙ7
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - MViYG
        - aAJiwQ
        ip: ""
      hostIPC: true
      hostUsers: false
      hostname: g81bX1L
      imagePullSecrets:
      - name: pczOr
      initContainers: []
      nodeName: WWc
      nodeSelector:
        "": Xd6pWq72
        CSS0t: ov1j
        ME: G4rcNqA
      preemptionPolicy: Ì$Ⱥ
      priority: -1711203321
      priorityClassName: FmLwtUHi
      readinessGates:
      - conditionType: 籒壩:夘ɓtʄ
      - conditionType: \勓岬ȓZǈ縌鸻ħ菱Ɋɐ6Ȟȸ$矫¤鬗
      - conditionType: ǫǣʑ钠z~ƴ
      restartPolicy: 闑搴ƾ
      runtimeClassName: wc3
      schedulerName: rjZ
      schedulingGates:
      - name: ciZD
      securityContext:
        fsGroup: 4140417386877752300
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 4483571718676218000
        runAsNonRoot: false
        runAsUser: -7025857346205630000
        supplementalGroups:
        - -7584097831073672000
        sysctls:
        - name: Nz
          value: 75GOKH
      serviceAccountName: 3F
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: LEZ0V
      terminationGracePeriodSeconds: 8279899287949193000
      tolerations:
      - effect: Ġƫ嗻_
        key: z7iR
        operator: '"¢谘ɇȒ[ð嫍礰.'
        tolerationSeconds: 1974097324787447300
        value: lR
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: 4FnNNL
            operator: GÌûđ輣Ɵƽ潄25?°ȱƺ鉊ʖ駶紁Ǭ
            values:
            - "Y"
            - NoEZRt
            - FH
          - key: eJ
            operator: Ìb写刞惇ǅĉ,軱Xǵ
            values:
            - kYfqxQ1
          - key: tm
            operator: ĢɁɑǱFĹ鰋ǋ
            values:
            - 7wR
            - w5L4
          matchLabels:
            A8tLMbJ: ZghTVt
            Y7F: ""
        matchLabelKeys:
        - nPfUHL
        - MS9x
        maxSkew: -282915169
        minDomains: 1050407902
        nodeAffinityPolicy: 4ʞ婤溢Ǳ葴ëØ§疵(
        nodeTaintsPolicy: ɕÕj咳Ħ:Ȧ¡jʧ饐)婙ʭ
        topologyKey: 1BfQrIFO
        whenUnsatisfiable: 觢{ȟ!Ǉg
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: tlvx
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - vYy9-webhook-service.default.svc
  - vYy9-webhook-service.default.svc.FoLVGdf
  issuerRef:
    kind: Issuer
    name: 2rNNJQv8k5j97-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: tlvx
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    T5I7K: mjLC
    pKSYI: IDK
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vYy9
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 2rNNJQv8k5j97-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 2rNNJQv8k5j97-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: vYy9-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 2rNNJQv8k5j97-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: vYy9-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: K
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-079.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    0Kf6: o
    AU8gkJ: lsVk
    C2ct: Fx4QSm
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lbhx
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: meK
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: HrG7J
    health:
      healthProbeBindAddress: Fxp
    kind: vYGtGN
    leaderElection:
      leaderElect: false
      resourceName: RJIE4G
    metrics:
      bindAddress: fojdTk
    webhook:
      port: 196
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lbhx
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: QClq-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lbhx
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: QClq-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: lbhx
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lbhx
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: lbhx-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: lbhx
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lbhx
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: QClq
  namespace: default
spec:
  replicas: -2035507670
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: lbhx
  strategy:
    rollingUpdate:
      maxSurge: 1618549354
      maxUnavailable: 686940900
    type: ǝp
  template:
    metadata:
      annotations:
        MGA1: ZHSVv
        eCyzMzxI: vB
        l6tFga: JddvZX
        uNEv: ""
      creationTimestamp: null
      labels:
        "": LDW
        J: rHGvxUx8nS
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: lbhx
        dBESM8HvT: pR5
    spec:
      activeDeadlineSeconds: -4497001301622683600
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: bnR
                operator: Q瓇óC鲙ƌĦ唋$
              matchFields:
              - key: jj345a5XiM
                operator: áC憳8ŨŜ柖c
                values:
                - 5dH
                - Wmp
              - key: 0uT
                operator: ""
            - matchExpressions:
              - key: Jc
                operator: ħ怶懓Wɓ$
                values:
                - GJc
              - key: Rv
                operator: 認|o賅ʈ`.ƅɁƓǟ4
                values:
                - Oozag7xhs
                - 3wr5YklpFHdF
              - key: mNqusE
                operator: Ǧ+ųʫ酗Ǔt敁鲤Ǒ稃ȯ7ƹ喈旦待'%
                values:
                - Bp8Idn
              matchFields:
              - key: FA9gK
                operator: (ɣB
                values:
                - m5x0p16G
              - key: uDIJ
                operator: 傅XŻ/%KQȍɦ2扖Ǖ朢ġɇǜj鶑糄
                values:
                - 0SSLUx5W
                - zhdB8v4o
            - matchExpressions:
              - key: AquldKJFBpw
                operator: ¢洳țg
                values:
                - "6"
              - key: xPvGRLV
                operator: ',uƩ鐯ɟƱcʕƸɌȐȟſ斞'
              matchFields:
              - key: LBZ
                operator: z'īʈf#)ʛ杣Ś
                values:
                - 2CT
                - 44wdpSX
              - key: YHEJ7aHnD
                operator: Ǔuş暍d
                values:
                - CJ0g
                - KbEZ
                - L0NXyF
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: 8C0S9O
                  operator: YY郛m庲#Ũ+后Ɩw|
                  values:
                  - 21m0yn7
                - key: VoKN81
                  operator: ð攲
                  values:
                  - wdtp
                  - fRn3CvK1R
                - key: 2lYWR6p8ep
                  operator: vȕ瀼lŜ芘ȋʯ_賆7^ő紬阡f躋
                matchLabels:
                  3h4mQU3CgB: t4ZnnORj8H6F
                  4oqTK3Kv: "Y"
                  pe9C: oq6Y
              mismatchLabelKeys:
              - 9gTag6N
              - OKnCsnyXC7O
              - u0RV
              namespaceSelector:
                matchExpressions:
                - key: ""
                  operator: Ɩ厙軼煫浟ć揦ɶOf
                - key: bRxpIU4
                  operator: Ɣ@h屬熞}ƿ4qsĹQ殟KǼȔð疠孬
                  values:
                  - 5Y69
                  - CPbI
                  - K5Ru8Yl
                matchLabels:
                  EcKxb: vV
                  HZ3WW0uT: tlBELtUUd
                  Q5OFboOh: qXht
              namespaces:
              - 1fA6
              topologyKey: Ix
            weight: 1553728873
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: VxD5oz5el
                  operator: '}軃ƥ筡橄ȩȈÙB|#çÕZĸ'
                  values:
                  - M
                - key: ot
                  operator: sj侣项]挘Nƅ
                  values:
                  - J8dC
                - key: oK
                  operator: 壛ø)Ǵʝ~I
                matchLabels:
                  UUpQ5: XdY2B
                  gOZw: MXo
              matchLabelKeys:
              - EqV
              - M6iuOMB6Q
              - 05Pmq
              mismatchLabelKeys:
              - E7
              namespaceSelector:
                matchExpressions:
                - key: ""
                  operator: ·N偣ă[唺郩Ȳd虚hʂ爄!蝷ȸ
                  values:
                  - QXaLDVqi
                  - pjM3cSd1kt9
                - key: WO
                  operator: 9撉KIĖȾ僿y底CɄ阷邀
                  values:
                  - J
                matchLabels:
                  Fb: Ba4dGMwS
                  WLW: h
                  wYY2: kozb
              namespaces:
              - VL7
              - eLW
              topologyKey: t8YoAs
            weight: 1300356159
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: 0k
                operator: ŨS
                values:
                - xls0bIvMf
                - CwXTQkjK
                - rpp24J
              matchLabels:
                Oz3g5dE: W1PFG
                e8: iaAB7
                mW7bJRQ47Bsg: k
            namespaceSelector:
              matchExpressions:
              - key: 7g
                operator: ^
                values:
                - 7srj
                - UoTmW
              - key: PXcwgrj
                operator: ʎ硾Ƽ寧置牨釧H愨ɊĕɢĹxǀn
                values:
                - M
              - key: mJOoXd
                operator: ""
                values:
                - C8tdOh
            namespaces:
            - "0"
            topologyKey: s
          - labelSelector:
              matchLabels:
                kFyFVu: EcUJw9
            matchLabelKeys:
            - PRFu
            - Ipzcw
            - mA0wFy
            mismatchLabelKeys:
            - 3jW
            - NRoj
            namespaceSelector:
              matchExpressions:
              - key: lV5uFl
                operator: 竚瀄ǭP
              - key: WbL6VQU
                operator: ǜ輢Ȭ籹娳岘青
              matchLabels:
                M0: h
                m: KuSOK
            topologyKey: e2G
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  1mBfzQ: "N"
                  4aAAQTaLBXS: oBxey
                  wQQmYeg: Afp
              matchLabelKeys:
              - j7u
              - uPDw
              namespaceSelector:
                matchLabels:
                  TqsfwB: z0kYoQ
                  oFJv: vVY
              namespaces:
              - 3lf
              topologyKey: 6VfXn
            weight: 670897298
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: FW4OtSA9
                operator: '#əgt'
              - key: 2WlTZpJx4
                operator: ƣ政QŠòƲŲƯRM
                values:
                - jNUe
              - key: l8Q2JJ5
                operator: G`樛ʟɞǈ弻騌瘉Ƈ塟`d釭
                values:
                - O3
            mismatchLabelKeys:
            - PSBeuErUA
            - jSZgCu
            namespaceSelector:
              matchExpressions:
              - key: pnqD
                operator: 醸K¯
                values:
                - qL3JKY
              - key: pCi
                operator: e7驛饐\ʬzȢ
                values:
                - bpy
              - key: i49
                operator: 紩踾粙ƏG'ʫÍH胰e邖q袑ǥ祵gs
                values:
                - yv5rsf
              matchLabels:
                H: Bj
                Pnglu7SYXa: XG1
                m: yJQf
            topologyKey: RFJwFB
          - labelSelector:
              matchExpressions:
              - key: s6AN
                operator: Ȕ菪卒d欋zÄZ屌?ɒ
                values:
                - tQvrw2W
              - key: Uukumjto2
                operator: 棍y+岒$怼鴬p
                values:
                - qaFhFs
                - c
              - key: fXOK
                operator: 浦ß弮ɢǿŨŦ瞔筢ǌÝ献
                values:
                - Ajfmj9
                - V3aGaB
                - npIDG
              matchLabels:
                6t5LgKiw8: WthhRQVV
                kGuOaEp: "9"
            matchLabelKeys:
            - m8o
            mismatchLabelKeys:
            - BeKn
            namespaceSelector:
              matchExpressions:
              - key: Q10W
                operator: ÙƄȢmƄyȄ
                values:
                - JjD
                - ""
              matchLabels:
                "": SnvGa
                Yg1hDLG: f3Ya
                Z: r4HRZhWlJv4
            topologyKey: ps7F
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: ahO:w8Y59
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 197
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 411
          periodSeconds: 158
          successThreshold: 289
          terminationGracePeriodSeconds: 471
          timeoutSeconds: 11
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 635
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 839
          periodSeconds: 17
          successThreshold: 281
          terminationGracePeriodSeconds: 292
          timeoutSeconds: 694
        resources:
          limits:
            cpu: "890"
            memory: "550"
          requests:
            cpu: "924"
            memory: "777"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - RGKmo
        options:
        - name: XQcPRL
          value: ZYcO
        searches:
        - yJkd
      dnsPolicy: ǡ譶ɱĿÙXƨ9ȚYȺiŅöǫ瓯ɱ氒Á
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - d
        - aY2
        - C9YZO2rtm
        ip: AOxSTQhIMifUsX
      - ip: r9Tn2
      - hostnames:
        - oa0
        ip: F1h
      hostIPC: true
      hostUsers: true
      hostname: R9mUvbeZtG4fqR
      imagePullSecrets:
      - name: oyd
      - name: 0bMDpG
      - name: xJ8O
      initContainers: []
      nodeName: aZKQFB
      nodeSelector:
        7hu: h
        "45": 72YHvjmjC
        Qb8GbZ4zR: LfqLm
        cy8oui: ETESW
      preemptionPolicy: ǤP?詠Ǎ篁匘[臾
      priority: -909430233
      priorityClassName: pur1
      readinessGates:
      - conditionType: 竴嘁Xġ
      resourceClaims:
      - name: ar0Em
        source:
          resourceClaimName: 9h9uo4
          resourceClaimTemplateName: bP9pyw
      - name: k1bJV
        source:
          resourceClaimName: fbp
          resourceClaimTemplateName: ZmuP6NKhPcBXnK
      - name: 0BYWL
        source:
          resourceClaimName: Yv
          resourceClaimTemplateName: Y2Eo
      restartPolicy: c
      schedulerName: uz9
      schedulingGates:
      - name: vE
      - name: tsZowO1b
      securityContext:
        fsGroup: 3748036559664877600
        fsGroupChangePolicy: Always
        runAsGroup: -8133496137540755000
        runAsNonRoot: false
        runAsUser: 5973838121814043000
        supplementalGroups:
        - -2370008637195322400
        - -5276059965230186000
        sysctls:
        - name: E9CK
          value: 5XdFt
      serviceAccountName: "89"
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: mn0muFFqVr3h
      terminationGracePeriodSeconds: -3403454298388414000
      tolerations:
      - effect: t碿k<Ʈ
        key: qKQH
        operator: 缠
        tolerationSeconds: 4655400418735045000
        value: MKkVqM
      - effect: ¬珳FǶǞ
        operator: 紴愢觅cÈTȔ戝嵧悜Rċ觡
        tolerationSeconds: 1565276200297110800
        value: hT59pHEK
      - effect: 嬳瓑ţ榈
        key: o
        operator: uʪ騾
        tolerationSeconds: -6794209356492257000
        value: lqzVIrDs
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            YuM: KO
            ayTs2hRCQ: tv3
            bwY1xcHY: wmgu1
        maxSkew: -1110183877
        minDomains: -1245207363
        nodeAffinityPolicy: źmʠțʑ?_猝$}¦ź;Dȩòe2l
        nodeTaintsPolicy: 畔阐ș_o氐澖掍V~=楱ļ渁B
        topologyKey: Ls8
        whenUnsatisfiable: ""
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: "5"
      - name: 9vIg
      - name: Ce
      - name: ol
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lbhx
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - lbhx-webhook-service.default.svc
  - lbhx-webhook-service.default.svc.sXi
  issuerRef:
    kind: Issuer
    name: QClq-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: "5"
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lbhx
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: QClq-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: QClq-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: lbhx-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: lbhx
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: QClq-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: lbhx
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: QClq-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: lbhx-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: meK
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-080.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    xYYx: 8dxCCUX
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: Wx
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: Mr
    health:
      healthProbeBindAddress: dgoI9bc
    kind: Sx3
    leaderElection:
      leaderElect: false
      resourceName: lTP7ZNCO
    metrics:
      bindAddress: p
    webhook:
      port: 362
kind: ConfigMap
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: xxjYziP-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: xxjYziP-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: xxjYziP
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: xxjYziP
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: xxjYziP
subjects:
- kind: ServiceAccount
  name: Wx
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: xxjYziP-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: xxjYziP
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: xxjYziP-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: xxjYziP-election-role
subjects:
- kind: ServiceAccount
  name: Wx
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: xxjYziP
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: xxjYziP
subjects:
- kind: ServiceAccount
  name: Wx
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: xxjYziP-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: ovez
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: ovez-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: ovez
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: xxjYziP
  namespace: default
spec:
  replicas: 1309643940
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: ovez
  strategy:
    rollingUpdate:
      maxSurge: 1348765604
      maxUnavailable: 1691837010
    type: bŏ~怹ŋ誶U钓
  template:
    metadata:
      annotations:
        1fxyVO: CeTVT
        2cyc: 1a0VS5
        "5": DPtq46QYlF
        X: SgzV
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: ovez
        deT: ""
        f: 680aAMwEeCu
        m: qHEDa1mmQs55DN
        xTbv: wk
        zgr2: Kura5
    spec:
      activeDeadlineSeconds: -6119805175379791000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: DCIL
                operator: 鋇
              - key: bx1e9
                operator: 嗃hǮ攧Kì鷬埧粃6
                values:
                - bD
                - ranDH
                - X4
              - key: lCpMz
                operator: ʙP4赍ôɧmǴlľRǳ爽摾éǞėġ
                values:
                - CrG2
                - RN
                - VhT
              matchFields:
              - key: k4E
                operator: ĸɔēƞ裈q肜1áLh鄠ƺȮ謾寍ĂǸ
                values:
                - OIp1
                - mT
                - a8Gr
              - key: "7"
                operator: ""
                values:
                - sKj4
                - pu
              - key: bsPDMZo
                operator: ʪ謪Ùj(ƛ簎*蚃Ī懹ŎLXê鵾
                values:
                - 2swVSTi0D
            weight: 1034374934
          - preference:
              matchExpressions:
              - key: ""
                operator: Ğƈòƞ貈壼
                values:
                - Hq4Kf
              matchFields:
              - key: 3Ge
                operator: 6:鑾)追兂3黤£ʖǸęŎżT亏庅o3
                values:
                - K2KWWgELhq
              - key: R1tbxa3fPsHYME7
                operator: òʦȍŝǀĠĜ謔Êt磶=hɹ坨+[褼
                values:
                - xe
                - "y"
              - key: 9f3kmmv
                operator: Å ĂƬi$读:Ĝ=Ǻ扒类鏚R
            weight: -275323758
          - preference: {}
            weight: -346321123
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: oDWy
                operator: ǹ龏暶ɖ鬄
                values:
                - fpO0f
                - d
                - JUzaG
              - key: HDiH6
                operator: 稢匢
                values:
                - VV
                - N7
                - cWA
              - key: sRHW9O84z0G
                operator: sTxĐ瘐餻uqɰĬ3蛡d,,0
                values:
                - uUZ7dJb8UD
                - qi8
                - A5CmJ
              matchFields:
              - key: nKW3BfVe
                operator: 袙稤豺ʌ
                values:
                - lL6X
            - {}
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: Vhwxosp9qF9q
                  operator: ǡ嵗4肸3UʥïȸzwǛ8
                - key: pEieLA
                  operator: 菻IĽřɣZĳ漜Q蔧Č&瘒箖Zʞė
              matchLabelKeys:
              - rMfBnIXN0m
              - FkLOGXrJ
              mismatchLabelKeys:
              - KgT
              - JdwN
              - bEsu53GBc
              namespaceSelector:
                matchExpressions:
                - key: 4EFFCw
                  operator: ']蚋ƌĩ_諘--į 曙ȳ嚉H粣脬譁'
                  values:
                  - 1RVTr
                  - oxicwJZ
                  - ""
                - key: JxyqSQ
                  operator: ʁt渽ŏ撊ĦĩǅwƘ¿椥®ØĔ芆u垰
                - key: Tl1K
                  operator: 肭{ǼȬø4鷢ȱƙdÜ
                  values:
                  - 6ZGq
                  - qNJVg5e
                matchLabels:
                  1lKS9iG: ""
                  1xpi: QnFBpy1c
                  yv: ""
              namespaces:
              - lSr4
              - J
              topologyKey: u5hvTQ
            weight: -1324847046
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: h2RV
                  operator: 鿡ţɭ渗
                matchLabels:
                  F8uYV: ""
                  PExA2Zzv3x: y9wi
                  nvWoMm: UHq5
              matchLabelKeys:
              - 8ytws
              - r
              mismatchLabelKeys:
              - MK
              namespaceSelector:
                matchExpressions:
                - key: gUWmSoIx
                  operator: ""
                  values:
                  - U
                  - tUnHB
                matchLabels:
                  S7: L
                  dB: auMzY
              namespaces:
              - 2wrF9B
              topologyKey: FvBQFs
            weight: 1950683647
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: YQI0bLabc
                  operator: oɽ擮)>¦ɺ嶨儽fºʩ仃斫@
                  values:
                  - OKV7u
                  - Jw
                - key: zmu
                  operator: 蛃ľ皪ƥ軃GǏ殣意G莀哪柋昢ɫ鱒
                  values:
                  - oa9e
                  - "2"
                matchLabels:
                  "": x
                  HVcoV8O9: w4BjtsrW
              matchLabelKeys:
              - nZXUs
              namespaceSelector:
                matchLabels:
                  8JOR: ""
                  fcXthu7: "Y"
              namespaces:
              - 9e8cVITA
              topologyKey: ""
            weight: -166626011
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: ZMlofIenTW3:ZpYBKn
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 691
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 271
          periodSeconds: 489
          successThreshold: 965
          terminationGracePeriodSeconds: 154
          timeoutSeconds: 796
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 649
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 414
          periodSeconds: 897
          successThreshold: 597
          terminationGracePeriodSeconds: 44
          timeoutSeconds: 486
        resources:
          limits:
            cpu: "282"
            memory: "709"
          requests:
            cpu: "141"
            memory: "444"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - dVU
        - YuvBgCt
        - AtGNbNObX
        options:
        - name: QVQEUfgls7rGt
          value: ""
        - name: YLY0
          value: JWRjBqPUtn
        searches:
        - r8mD4wPFC1
        - LStfOo3
      dnsPolicy: 驎ǃ秵ŋɿu锥ɫ4鹧Ȯ
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - ip: GYg
      - ip: "9"
      - hostnames:
        - 9UBCsp
        - NbHS
        ip: jJKRBB
      hostIPC: true
      hostPID: true
      hostUsers: true
      imagePullSecrets:
      - name: WngLGW
      - name: pH
      initContainers: []
      nodeName: JY
      nodeSelector:
        DXkWdhYn: C
        eNn47aUMg: ""
      preemptionPolicy: 逘潒Le犺佀WɰXʮ涩
      priority: -498747253
      priorityClassName: nQN
      readinessGates:
      - conditionType: X嗋Ɯ0眴铜竽b
      - conditionType: '*槢Ȋ8Ɖ偉®Zð'
      resourceClaims:
      - name: cS
        source:
          resourceClaimName: xOmb
          resourceClaimTemplateName: j9Xb
      - name: V5gjfxiv
        source:
          resourceClaimName: U4y
          resourceClaimTemplateName: zy
      restartPolicy: 鹵ƱcǚĐʢƼ
      runtimeClassName: vXXB
      schedulerName: PHRJqMYM
      schedulingGates:
      - name: RP
      - name: g4lxIqW
      securityContext:
        fsGroup: -7392701597241162000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 8372901019133498000
        runAsNonRoot: false
        runAsUser: -484481943082609400
        supplementalGroups:
        - -7223585303965730000
        sysctls:
        - name: "y"
          value: ""
        - name: p9JjpzgZ
          value: F
        - name: Xr
          value: roFX
      serviceAccountName: Ky7M1Rr1O
      setHostnameAsFQDN: false
      subdomain: Ks
      terminationGracePeriodSeconds: -7623189043254688000
      tolerations:
      - effect: 閨供iţôIŎŷX脂販暖<塗ž剸
        key: tjmunK1
        operator: ɶɵ歮&əpĜ
        tolerationSeconds: -5018449569375824000
        value: c2
      - effect: 躛
        key: ZXBpd
        operator: '嗨砼堽Ŷ誜ĕƅ攸闦{邙)蕦v滽:'
        tolerationSeconds: 725040168445271800
        value: mMci32cJ
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            b: Oy
        matchLabelKeys:
        - 6T
        - PA0unBLzXB
        maxSkew: 1916755573
        minDomains: 719946978
        nodeAffinityPolicy: Fpʒ<ɚůJ譿驑÷孃虞ǲƔ
        nodeTaintsPolicy: ƊL!`垄禐§Y.猟K(福
        topologyKey: C5C2wM
        whenUnsatisfiable: 漋.敻ǇÙ齯ele恊恦f sxȒ埜=
      - labelSelector:
          matchLabels:
            3EH4: aLhPurcQ
            MGn: g
            gWEsGCuvE: hq
        matchLabelKeys:
        - X8f
        - UtU3
        - vUe
        maxSkew: -1570018943
        minDomains: 129102213
        nodeAffinityPolicy: Ʋ羕]旤@栏ƔH祌Ǟ!ă卅墛/
        nodeTaintsPolicy: ǉʀ犓锼JoE獬Ân)鍚¨帧Ŗ籉蟶
        topologyKey: e9dRmTq
        whenUnsatisfiable: w汱k巳ƶȾ祖
      - labelSelector:
          matchExpressions:
          - key: 1fUOPVY4C
            operator: ""
          - key: g5aC
            operator: e?k粠
            values:
            - F4E
            - bKBE
            - ""
          - key: QYJ8JDSH
            operator: 芵%Åw鐵ɉ
          matchLabels:
            0kQnuTsp9sW: kXZHA
        maxSkew: 1505445176
        minDomains: 1442684664
        nodeAffinityPolicy: Ï賨曆趿/ah嬮ǭ尧ǂʛȳ
        nodeTaintsPolicy: Ⱦ吏ʧɪ¹L'ł珥渰ƃʤǣȍɂt~
        topologyKey: Q3qDZKw8
        whenUnsatisfiable: )6i7ʤ5僛Źwƅtvɯ彵ƞÏŘBĝ
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: Gx
      - name: ""
      - name: DZu63M
      - name: bfdOMq
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - ovez-webhook-service.default.svc
  - ovez-webhook-service.default.svc.xaBy9DzE
  issuerRef:
    kind: Issuer
    name: xxjYziP-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: Gx
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: xxjYziP-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: xxjYziP-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: ovez-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    Pb9Oh: F3QHWxK
    puaMG: "2"
  creationTimestamp: null
  labels:
    JHXVQsYdx4WC: KFytXl
    UN: h
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ovez
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    zWv: hIfkuex2B
  name: xxjYziP-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      JHXVQsYdx4WC: KFytXl
      UN: h
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ovez
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
      zWv: hIfkuex2B
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: xxjYziP-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: ovez-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: Wx
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-081.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 7ZTjb
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: ujOV3u
    health:
      healthProbeBindAddress: zcMagN2
    kind: LO0N
    leaderElection:
      leaderElect: true
      resourceName: UL
    metrics:
      bindAddress: 7Hi
    webhook:
      port: 376
kind: ConfigMap
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OZHCbAk-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OZHCbAk-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OZHCbAk
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OZHCbAk
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: OZHCbAk
subjects:
- kind: ServiceAccount
  name: 7ZTjb
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OZHCbAk-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OZHCbAk
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OZHCbAk-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: OZHCbAk-election-role
subjects:
- kind: ServiceAccount
  name: 7ZTjb
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OZHCbAk
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: OZHCbAk
subjects:
- kind: ServiceAccount
  name: 7ZTjb
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OZHCbAk-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: zsU8D
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: zsU8D-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: zsU8D
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OZHCbAk
  namespace: default
spec:
  replicas: 737186237
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: zsU8D
  strategy:
    rollingUpdate:
      maxSurge: 2059369383
      maxUnavailable: 578932184
    type: RollingUpdate
  template:
    metadata:
      annotations:
        18t52Ey: KftQ5Yn6yL
        Cnhja: Jjf9
        LFQZlLJ5Id: pcV
      creationTimestamp: null
      labels:
        7SH6Rp: XkrMRVuLon
        9xJevy: f
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: zsU8D
    spec:
      activeDeadlineSeconds: 5075138460131302000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchFields:
              - key: 0rxFyK
                operator: ɖ|絪ɩ邏怂ð
                values:
                - lGCU
            weight: 1246435144
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: x47n
                operator: 碵
              matchFields:
              - key: 2DX
                operator: Ĩý慯騂.7b
                values:
                - R9InN
                - ""
            - matchExpressions:
              - key: z
                operator: D鏜&yǟ挹"盜j颊撵8T轳$Ĵɦv
                values:
                - d7qY
                - V9vN
              matchFields:
              - key: muVha2BSur
                operator: Ÿ痌Ł魨êÅz敋$ǲ粇7ɾǹ
                values:
                - 9eFxKu
              - key: BWJd3
                operator: t纮鞴é伱0)ɧţ#ʆl圪清襻鰖
            - matchFields:
              - key: bus8X
                operator: Ƃ錌豂虾jĦ
                values:
                - OOb
                - HEd3
              - key: 68o8i
                operator: µĝů淄測淼缝繿闄ƊȒț岷ȕ
                values:
                - CKLWc
                - 0wK8a
              - key: RKHFlC
                operator: 肴ʟ
                values:
                - KdW07
                - xa1
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: yT8I
                  operator: Ƽ|%洓ƦC郘`
                  values:
                  - nd3YZ8IwLb
                  - mMZQZ
                  - ""
                matchLabels:
                  EDrS: va
                  N75F: p59
              mismatchLabelKeys:
              - Wta
              namespaceSelector:
                matchExpressions:
                - key: rMw
                  operator: ^K
                  values:
                  - qzvtVm
                - key: AP
                  operator: ſǆ厷Ȟ泸Ǿ澴
                  values:
                  - Z8gY
                - key: rkWUW
                  operator: 麣舷ħ¶/榀1鎹A蟛ǧɢ壹ȏȶ紇
                  values:
                  - Z
                  - aKQ
                  - eEM1y9w
                matchLabels:
                  FhlMU5Kw: Ce964mW7
              namespaces:
              - b
              - x2Y
              - wHFks
              topologyKey: Gb5
            weight: -387201249
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                ByD: jUB5
                WGu9: ""
            matchLabelKeys:
            - kSCL3wh
            mismatchLabelKeys:
            - ucy6ZHZx
            - w
            - em
            namespaceSelector:
              matchExpressions:
              - key: jjCog
                operator: Ä
                values:
                - tMDvmRCt74c
                - JlT5eloJcxX
              matchLabels:
                I0nL: XxLZ
            namespaces:
            - VXF
            - vrCLINB
            - MIgeg
            topologyKey: l3Rl71Nxi
          - labelSelector:
              matchExpressions:
              - key: jFf
                operator: Õ郺嶷虇ɑ弣ņ Ë!襋o秊錺Y
                values:
                - eX3RUhH
                - oaa
              - key: mtG4syAadE7
                operator: 7fjɌ癅/Đȩ9Ǆ
                values:
                - iA
                - zkb
                - BhciuY2
              matchLabels:
                wC7QN48jz: Gn
                xcE313: w
            matchLabelKeys:
            - E
            mismatchLabelKeys:
            - horaNlEl
            namespaceSelector:
              matchExpressions:
              - key: sWA
                operator: 妗čm咟ĿĩÄ牏 Ţ$儧麂
            namespaces:
            - fgLu4
            - je
            topologyKey: Hi
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  AMdqJ: 3JE2njxG
                  KIzrVXc: B7tW9md2Zws
              mismatchLabelKeys:
              - RW
              namespaceSelector:
                matchExpressions:
                - key: 1oeG
                  operator: 蜃=ÿǙ燬ö褭
                  values:
                  - wkp3
                - key: yM
                  operator: ½ūů
                  values:
                  - AzqGsty47MkIB
                  - GLSN
              namespaces:
              - a
              - hV0DG2B
              - WAhdr8
              topologyKey: cGpOSLEO
            weight: 1360768454
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: n5XYmLFj
                  operator: 精秮晵õ.ɚǞ.犧YƓ謽黋ª龺
                  values:
                  - RMoWI
                  - NmD9oFeYoVzt
                  - 8lrE
                - key: 81RzHp4Sv8J
                  operator: Ĝf必ǱʁŚƱt
                matchLabels:
                  JYMS3XTR: jI
                  xPM: Qthu
              matchLabelKeys:
              - PVz
              namespaceSelector:
                matchExpressions:
                - key: dPfsCEnR
                  operator: 2Ȟɋyɷ欵Pc6Wë铥=减w湏稀Ċ
                  values:
                  - PAA6aBnm2
                - key: G5E0z7dBNLy
                  operator: 茚鱑锣ɐ
                  values:
                  - RwkW
                - key: 8KVw
                  operator: 漵嚔R仑Ǚ]
                  values:
                  - aj306N1ChXihGl
                  - ""
                  - ""
                matchLabels:
                  UxglI27: VrE9h
                  rsqYx: y4
              topologyKey: eSIo8QT
            weight: 1879262232
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: UGnMe
                  operator: 踏+7铻Ɠ$璞皰T[ņ嘛ɹ.Ë.Ǡµ
                - key: n8Kyq6MZnn
                  operator: ɕȐ袞政肽S+
                  values:
                  - d4Va6
                  - ""
                matchLabels:
                  "": WH6RB
                  hlYsK: oA
              matchLabelKeys:
              - CGjlYIjQa
              - 3ArLGPQ
              - TVFL
              mismatchLabelKeys:
              - ZN67Fk50
              - K
              - BIK3F
              namespaceSelector:
                matchExpressions:
                - key: RfSgAZW
                  operator: 锦Ǌȱ頔饴X坮谙
                  values:
                  - EUs8
                  - KBnej
                  - Awg88
              namespaces:
              - ""
              topologyKey: e3QFK
            weight: 2136767491
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: Lv
                operator: 黎ʘq志
                values:
                - j84g
                - xtWEL
            matchLabelKeys:
            - it9FgYyd
            mismatchLabelKeys:
            - mpg
            namespaceSelector:
              matchExpressions:
              - key: MmD
                operator: 绪.檧
                values:
                - Is
                - WJzXx9P
                - RlU0Vy
              - key: DvcZFz
                operator: 個g 吮Ŷj绂鑭奻ʟʃ
                values:
                - v
                - ghys
                - Hur
              matchLabels:
                4Bag0xtZ: PcXKf7
            namespaces:
            - QLOS
            - GB1Xfl2Bh
            topologyKey: Ex
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - Gc3q48w
        - JNFXPzkrj
        - hYzBm
        command:
        - /manager
        env: []
        image: YYLGC7:okj1Bqm1LHE
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 483
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 398
          periodSeconds: 195
          successThreshold: 102
          terminationGracePeriodSeconds: 324
          timeoutSeconds: 854
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 484
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 948
          periodSeconds: 31
          successThreshold: 811
          terminationGracePeriodSeconds: 971
          timeoutSeconds: 302
        resources:
          limits:
            cpu: "391"
            memory: "331"
          requests:
            cpu: "565"
            memory: "577"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - ""
        - 3B1J
        options:
        - name: EKTU5
          value: uGrsKSv
        searches:
        - jzvX
        - ""
        - QUGE
      dnsPolicy: b丅盝ì4ʜ鿶Ì蚰
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - lSSC
        - "4"
        ip: mbGtHu
      - hostnames:
        - Be
        - Fa
        ip: 6m7jCCt
      - hostnames:
        - BAX
        - T
        ip: ""
      hostNetwork: true
      hostPID: true
      hostUsers: true
      hostname: P
      imagePullSecrets:
      - name: pgu1
      - {}
      - name: k
      initContainers: []
      nodeName: LCE
      nodeSelector:
        "": Oj8
      preemptionPolicy: _ŞĖ搓Ƙ铌皬8姱垿ȉK9剚 j躳v
      priority: 693230071
      priorityClassName: G
      resourceClaims:
      - name: kfkaZ
        source:
          resourceClaimName: jp4XiLNf
          resourceClaimTemplateName: MYaD97
      - name: O
        source:
          resourceClaimName: d2vTt
          resourceClaimTemplateName: vw
      restartPolicy: '%v罰胧ʥ碔á7Ƿ蒙¬?兣寲Dx骱'
      runtimeClassName: wWcFKJY
      schedulerName: K64mA
      securityContext:
        fsGroup: 6718607243193313000
        fsGroupChangePolicy: Always
        runAsGroup: -1791668966521515800
        runAsNonRoot: false
        runAsUser: -2730138901692621000
        supplementalGroups:
        - 805361304793257700
        sysctls:
        - name: UBPPWy
          value: 4T5
        - name: C2cMj2
          value: 8rbtdE
      serviceAccountName: NrdXODCm
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: gWuTd
      terminationGracePeriodSeconds: -8771004476345526000
      tolerations:
      - effect: â+ɹuñĄ鬨?eɌB¬`3
        key: hV0
        operator: ;ȳ窨.EƓ-
        tolerationSeconds: -1848018919213049300
        value: V9xuhyF
      - effect: '!'
        key: Yaptp4d5N
        tolerationSeconds: -651827740239648600
        value: ahXis
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: RtKeQx
            operator: <
            values:
            - 4SOS
            - lbt1vl
            - w
          matchLabels:
            CL1: x7Y
            l6x: BhZyTgl
            rna1k9s: l
        maxSkew: 1960215012
        minDomains: 541264139
        nodeAffinityPolicy: ȍw(ŢW=@ĳ峸ɰʏũĜĜ换^Z椒芜
        nodeTaintsPolicy: ī{凮
        topologyKey: V5FKq3
        whenUnsatisfiable: ^*浐[TǻzŪǸ4嚍
      - labelSelector:
          matchExpressions:
          - key: Usp
            operator: "7"
            values:
            - XCUsN0
            - End
          - key: KV5u
            operator: g5dĔǨP
            values:
            - S8Q7Nj
            - v3DRq38f
            - saL
          - key: apEg
            operator: ""
            values:
            - Cbk8
          matchLabels:
            I1a: Nt8eh
            h4cGiMg: VvNF
        matchLabelKeys:
        - bidOGl
        - lBMT7d
        maxSkew: 977904069
        minDomains: -1227979045
        nodeAffinityPolicy: $ʃ嬘Œ/Ǫ
        nodeTaintsPolicy: u艌饔ǲX~
        topologyKey: kOJfe
        whenUnsatisfiable: ɑyǟƎċ匣鰵-0ĹbK2綗vɭĈK
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: e8ZBqt
      - name: 1yV8
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - zsU8D-webhook-service.default.svc
  - zsU8D-webhook-service.default.svc.x0g4v
  issuerRef:
    kind: Issuer
    name: OZHCbAk-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: e8ZBqt
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OZHCbAk-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: OZHCbAk-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: zsU8D-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    NFFw: qCc3rOA
    gKTYp: Zd2R
    jKQQEfT: FduvIJJ
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zsU8D
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: OZHCbAk-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: zsU8D
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: OZHCbAk-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: zsU8D-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 7ZTjb
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-082.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: k0gO
    health:
      healthProbeBindAddress: 2v2
    kind: bEutG
    leaderElection:
      leaderElect: false
      resourceName: EQkuZC0C
    metrics:
      bindAddress: 9eXxc11
    webhook:
      port: 384
kind: ConfigMap
metadata:
  annotations:
    p: DV1
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    v: pV
  name: JvUUYZNAn-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    p: DV1
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    v: pV
  name: JvUUYZNAn-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: operator
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    p: DV1
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    v: pV
  name: operator-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: operator
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    p: DV1
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    v: pV
  name: JvUUYZNAn
  namespace: default
spec:
  replicas: -1282715809
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: operator
  strategy:
    rollingUpdate:
      maxSurge: 706213910
      maxUnavailable: 1958671198
    type: Ʒ#敇ŧňqʂJ2ǎ絙湌淸HŇĕŦ颦A
  template:
    metadata:
      annotations:
        4CSkABO: ITTJyql
      creationTimestamp: null
      labels:
        5F0sWgcV31: w0W
        6nk3DMQ9q: DHR1Slo6VJ
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: operator
        oeuWrTVaS: iQ
    spec:
      activeDeadlineSeconds: 4327148074270488000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: r4g7
                operator: 汔ŁI悓)#觊膩șÍ辯m_
                values:
                - Da
                - AJqw1
                - ""
              - key: J
                operator: ""
              - key: VC5
                operator: '`蜚7'
                values:
                - c
                - xNYDAq
              matchFields:
              - key: 8K98uW
                operator: 檁YM聏ɧǍÂ
                values:
                - 7wqj
              - key: KzlyvM
                operator: Ǵ越q
                values:
                - N40vLS
            weight: 1716021049
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: lCp
                operator: gúW瑾.O糂dUő
                values:
                - ChpwElbY
                - QxP
              matchFields:
              - key: Y0uQsss
                operator: 萀-伙
                values:
                - B8XwFbT
            - matchExpressions:
              - key: a
                operator: 膘H鑝K芁ʞ'¾S堆qɦ鱀GkƸH'
                values:
                - uB
              - key: Cl4Gy
                operator: ʬƥ蜚Øm鄉ƏHÎE#ț矇s聋ɽ魴毪縙
              matchFields:
              - key: gRC
                operator: Ǭo<ȝ埔
                values:
                - Q6nu
                - YCX8
                - e8YoXu
              - key: 02xxhs
                operator: É矖湵潈
                values:
                - Z95
                - Dhv
        podAffinity: {}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: ""
                operator: 5旍!ƠǀŹ
                values:
                - ufabqBY2
              - key: sjc06JAk
                operator: ȂǍ
                values:
                - AIn0j
              - key: r6SM
                operator: E鮃Z洊丫ƪ垁<7Ɨc库ǎ骪¶雑
              matchLabels:
                EKHTt: HM
            matchLabelKeys:
            - cyY4rx0
            - PBIfh
            - e23iWr
            namespaceSelector:
              matchExpressions:
              - key: cV2PdoeG
                operator: ""
              matchLabels:
                KV1o: YzsQVo
                NFt6l: kLct
                lcwSIV: nWbtoy
            namespaces:
            - Au1Zw
            - rN
            - aRAD
            topologyKey: 5I
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: kG9n:H0aN
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 210
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 483
          periodSeconds: 101
          successThreshold: 946
          terminationGracePeriodSeconds: 632
          timeoutSeconds: 714
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 841
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 25
          periodSeconds: 321
          successThreshold: 829
          terminationGracePeriodSeconds: 770
          timeoutSeconds: 182
        resources:
          limits:
            cpu: "104"
            memory: "472"
          requests:
            cpu: "905"
            memory: "554"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - h9KdM
        options:
        - name: qwrR
          value: LUC
      dnsPolicy: 鍝2Ruɂõy基鰠Ǯu鈏ǥ櫳¦r
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - ip: B2mapZDDPI
      - hostnames:
        - 43K4JN
        ip: QCjQ33I
      hostPID: true
      hostUsers: true
      hostname: UcVgcPlB3Tp
      imagePullSecrets:
      - name: L3xc
      - name: b2AowAh7
      initContainers: []
      nodeName: toIvU5utWJJ
      nodeSelector:
        oD: LUM5IOof
      preemptionPolicy: Nǳ魦°瑼乭05ʚ ȃhŁ栛冤
      priority: -1752439580
      priorityClassName: SjrGf0
      readinessGates:
      - conditionType: qx÷E(ʯ{ɗF仵eʝ
      - conditionType: 廅
      - conditionType: eX鼺Ǐ邹6ɼțrl{墳贝
      resourceClaims:
      - name: vn1HJRfk
        source:
          resourceClaimName: S
          resourceClaimTemplateName: "8"
      restartPolicy: 寪SC嚸Ydæ媁缵Ö91佤k
      runtimeClassName: KKo8
      schedulerName: rHdgH
      schedulingGates:
      - name: lt
      - name: w56
      - name: 5QkP
      securityContext:
        fsGroup: 8284482227971759000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 7549977893834572000
        runAsNonRoot: false
        runAsUser: 2890183731546937000
        supplementalGroups:
        - -8069923849240214000
        - 888768176187646600
        - -5100419271157934000
        sysctls:
        - name: o
          value: uZ570Tq
        - name: gwsVIsOeL
          value: Ts6
        - name: cUEGZd
          value: fevys
      serviceAccountName: P2
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: Tws
      terminationGracePeriodSeconds: 5906580452447393000
      tolerations:
      - effect: Ę&h
        key: Sb0Qh
        tolerationSeconds: -6895611838181698000
        value: qv5
      topologySpreadConstraints:
      - labelSelector: {}
        matchLabelKeys:
        - Emso
        - ""
        maxSkew: 757251221
        minDomains: -1013392564
        nodeAffinityPolicy: Ĩa奋騐u
        nodeTaintsPolicy: ""
        topologyKey: YQH
        whenUnsatisfiable: 赿仔F跃$礪刞ūȏiǟ
      - labelSelector:
          matchExpressions:
          - key: px
            operator: 儇(
            values:
            - 4bccBIY
        matchLabelKeys:
        - ""
        maxSkew: 157171156
        minDomains: -216696003
        nodeAffinityPolicy: Ł
        nodeTaintsPolicy: ¯嚋2Ǐ#Í菗SĄ謐*l汁鄖Ȍ
        topologyKey: 4pVrPZxh
        whenUnsatisfiable: 轸J薶?ôƱ3ƳN¤鿉ɻ璛Įƍ坼?D
      - labelSelector:
          matchExpressions:
          - key: bwq
            operator: ı枱A稓乿酇Ø贤E淞Ū梖}Iĕȴ
            values:
            - LM
            - u7PG
          - key: Xy
            operator: ²[ƸǬ逍
            values:
            - WvjZ7X3d
            - fS
          - key: 8WvmN
            operator: 驿W笕.ÀQ©~碀瓚琩镪ƖŁ坭+
            values:
            - 7PKYszc6
            - runyFPLgH5g
          matchLabels:
            8Zpv: hNK
            YPSqw8B8: FD
        matchLabelKeys:
        - "1"
        - EJwB
        - F4jliy
        maxSkew: 2058005309
        minDomains: -304661344
        nodeAffinityPolicy: t曽C@áMG筌
        nodeTaintsPolicy: 9Ƿ啩äj?ė冯隉敖
        topologyKey: "y"
        whenUnsatisfiable: ǩ
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: kE9
      - name: AyYiFET5u
      - name: RMYhGM
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    p: DV1
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    v: pV
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - operator-webhook-service.default.svc
  - operator-webhook-service.default.svc.liM
  issuerRef:
    kind: Issuer
    name: JvUUYZNAn-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: kE9
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    p: DV1
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    v: pV
  name: JvUUYZNAn-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: JvUUYZNAn-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: operator-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: JvUUYZNAn-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: operator-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: G
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-083.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: Z
    health:
      healthProbeBindAddress: tT3ln
    kind: qRpLfXMeqNwbtB
    leaderElection:
      leaderElect: true
      resourceName: gNGg
    metrics:
      bindAddress: K4wonq
    webhook:
      port: 326
kind: ConfigMap
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: twuYH9-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: twuYH9-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: twuYH9
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: twuYH9
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twuYH9
subjects:
- kind: ServiceAccount
  name: 53ObZL18D
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: twuYH9-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: twuYH9
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: twuYH9-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: twuYH9-election-role
subjects:
- kind: ServiceAccount
  name: 53ObZL18D
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: twuYH9
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: twuYH9
subjects:
- kind: ServiceAccount
  name: 53ObZL18D
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: twuYH9-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: AD
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: AD-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: AD
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: twuYH9
  namespace: default
spec:
  replicas: -1992894717
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: AD
  strategy:
    rollingUpdate:
      maxSurge: 1933093602
      maxUnavailable: 1334294633
    type: ʥ蓜蟙峑7íZ甖yŔ
  template:
    metadata:
      annotations:
        5tv: p5PIYsI4
        T1F: Dpqk
        nhTQfP5eg35h: U12zbsp
        oi6rukR28V: zM
        qAQ8mETGY: jQtYv
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: AD
    spec:
      activeDeadlineSeconds: -3290817518659555000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchFields:
              - key: UYYTqOzzzI
                operator: '`ɻ緧敗ÇŦȶ`霤łƅ騣=鳃'
              - key: "y"
                operator: '*Ʒ錒鏂wih-|ĶƘrǈɚ;讹'
                values:
                - m63
                - fx0vLWX4
                - yv9zg
              - key: 3qvDet
                operator: ɭ吃X紂IO甾旪策Ƿč3糝utĻ諀奪#
                values:
                - k5
            weight: -918868426
          - preference:
              matchExpressions:
              - key: OFGGO
                operator: ē
              matchFields:
              - key: FAYg7jE5
                operator: 韊劬ĭ訡
                values:
                - cbW7ib
                - FARU
                - iuvBLw7R
              - key: vFVPXz7G
                operator: 訮d贺ü櫼蒒鋱隮痄綜戏ɣ
                values:
                - QH
                - VZ3k
              - key: RWFgXeS
                operator: 藋ǼK蛖ĜʚɠJ巻
                values:
                - A9G
                - xVWxb
            weight: 666121791
          - preference:
              matchExpressions:
              - key: SgZ
                operator: 7'睪²韛墈ɇ狼斡患Ž鵬焑ul羰~½
                values:
                - Emtn
                - PRqH2
                - wyxy2PK
              - key: gwQvB
                operator: ǋ凳9ƖÊ~ĥG鹢烼t竂ǳȏ
                values:
                - fEU1YvKZEh
                - ""
                - GTq
              matchFields:
              - key: MMt
                operator: '*堂>ĆɦǔȩEȓ'
                values:
                - lt
                - EEl1
              - key: Py
                operator: 摲雥ʏáę鴤Š娑薸Ɋ金
                values:
                - Csd0
            weight: 1371460940
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: voL6CXATwtI
                operator: ÁjȹƦʆ)ȹ戳Ǻ珫Ġ)Ç扸醘
                values:
                - bk1
                - 67GUH
            - matchExpressions:
              - key: 8e2LCJeo0t
                operator: ¼ȑ窤^Ɩ応鑿`țkƻƩķ-a<屙[
              - key: 1RA8y
                operator: '''Ȋŵċf縂TX姽J'
                values:
                - F
              - key: whAjv0OUp
                operator: ""
                values:
                - fUZaSg
            - matchExpressions:
              - key: xL
                operator: 6ùǇȔĩ?闟ĬR
                values:
                - 0A9fp2U7fz
                - TyZ
                - IDm
              - key: oUa2PS5g
                operator: /隼耬ň'ɏ5媊%ǘ慳7拙K
                values:
                - AX86H
                - N55
                - d8uIn
              matchFields:
              - key: DLq3Bm
                operator: Ǯª
                values:
                - X7e9V
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: j5
                  operator: '&,ǉ抭ǅZc煵1阵'
                  values:
                  - 9g1YZ83fVF6kuj
                  - S5n00
                - key: ZaAm
                  operator: èB吲
                  values:
                  - axmNtRA
                  - GCmrOl
                  - 6Ts96
                - key: cgNbRMJmStVj
                  operator: ""
              matchLabelKeys:
              - 6G7
              - fj5rP
              mismatchLabelKeys:
              - 2IFbSJj
              - tUzR2
              - UNCXGXOAqmt
              namespaceSelector:
                matchExpressions:
                - key: W5hVjFDJ
                  operator: Ȩë鞖ŉr兯疻
                  values:
                  - WSwg
                  - tyN7
              namespaces:
              - Kk
              topologyKey: lE5
            weight: -993382932
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ug
                  operator: 圵ƲƄɌɝď苫'徕EdɒĪ=k噩#Ȟ
                  values:
                  - iUJPfnJ
                  - KW4P2ir
                  - mQe
                - key: dZx2UCUc
                  operator: K旵
                - key: QW9HVWg
                  operator: 誺ļbþ
                  values:
                  - "31"
                  - 77jF5CJ
                  - 7CsW1l3WR
                matchLabels:
                  "": d6
                  BOT: D56ZE8Q92F
                  Mh7: z
              matchLabelKeys:
              - gv0v2x73Q
              - YLl
              - Slb
              mismatchLabelKeys:
              - 2n
              namespaceSelector:
                matchExpressions:
                - key: O
                  operator: DɆ艀堂mǲ"肑^
                - key: 8E9qZ
                  operator: 牶#氌X{Ű蓃v鯃ü
                  values:
                  - OYYyJnnvJ
                  - ObrL
                  - nZP
                matchLabels:
                  "": omgUlQG
              namespaces:
              - MgU6fKR
              - 0a
              topologyKey: kl3aT
            weight: 43416081
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector: {}
            mismatchLabelKeys:
            - SLC
            namespaceSelector:
              matchExpressions:
              - key: 0coNmjPfZo3
                operator: ¸襺F绚贝ɶğǙɼ鯫Y
                values:
                - x
                - w8C
              matchLabels:
                V1dGsG3au: RN3
                hh: Te2oHZNcX
            namespaces:
            - qGUp3R
            - R
            topologyKey: 7PGdnmE7PGP
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  BuW: 1X
                  UqcMl: ""
              matchLabelKeys:
              - 3KTyGufoO
              - RL4aD2
              mismatchLabelKeys:
              - B1rQ1T9YI7
              - Eb4dMoubook
              - U
              namespaceSelector:
                matchLabels:
                  EdBD: xlEvn
                  Nt6X66x: COy
                  dlK: BdP9Hd
              namespaces:
              - 7A
              - MdT
              topologyKey: v8r5UL5qMyyZ
            weight: 1870120105
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: 1ONRpGEF
                  operator: 栂"徿<ÖĈ嶄哚Ƥ}LȽǰ橥Dvŀ
                  values:
                  - LUY1
                  - qbGo
                matchLabels:
                  S3hZQ: vhxVsbe4
                  Vrc: 7l
              matchLabelKeys:
              - dFPJ
              - OzQl8qCc7
              mismatchLabelKeys:
              - j0B
              namespaceSelector:
                matchExpressions:
                - key: eYC6PVMQ
                  operator: 吻C苉nȔC茅词韋籔S
                  values:
                  - J1
                  - WS8
                matchLabels:
                  fLgtTmLuaC8: edezQrn0
              namespaces:
              - Br5FAK
              topologyKey: Ipq
            weight: -1639783795
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: UgO
                operator: Ī槱刢xē秸Ŧíz怵ɡhơ¯小庮鼣aű
              matchLabels:
                Y12: NyJQCP
                ac1P8qw: cctX2
                ad: z
            matchLabelKeys:
            - N0WhZQ
            - ""
            - SG1Q
            mismatchLabelKeys:
            - eLBeK
            namespaceSelector:
              matchExpressions:
              - key: J0In0
                operator: '"Ƌ=Þ喗Q蚜ȓ倣b'
                values:
                - e3IiM
                - sFsS0DgxSJC
                - fS4RTVzJWc
              - key: cEYRHqpD
                operator: K{囯ČŐ姣Ķ9澊
                values:
                - abY4f7
              matchLabels:
                ARNo5pl: F9
                O79pU: 99NAnXcfdeeql8
            topologyKey: wXX5kx
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - QpxE2
        command:
        - /manager
        env: []
        image: BkpCoE:3BE
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 578
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 963
          periodSeconds: 596
          successThreshold: 52
          terminationGracePeriodSeconds: 989
          timeoutSeconds: 311
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 854
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 551
          periodSeconds: 16
          successThreshold: 688
          terminationGracePeriodSeconds: 467
          timeoutSeconds: 125
        resources:
          limits:
            cpu: "25"
            memory: "957"
          requests:
            cpu: "126"
            memory: "229"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - dSXcDS
        options:
        - name: A7HUjf
          value: A
        - name: Yz
          value: OCnDhT
        searches:
        - 6oQ2shOAuEGd
      dnsPolicy: 4BVɥ埙L钝粪Ǫ/ɜƷŮ,褔秽缺衲
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - k
        - ""
        - xeRvB8I4r75s
        ip: j3VP
      hostNetwork: true
      hostUsers: false
      hostname: RLXxjp
      imagePullSecrets:
      - name: 0xvbPS
      - name: umn5qIm
      initContainers: []
      nodeName: l9dr6aUQfK5
      nodeSelector:
        Q3: EEpI5
        Vf4IqSxi: 6eTPe
        atZIRXJC: zbcJj
      preemptionPolicy: ""
      priority: -1795967358
      priorityClassName: "0"
      readinessGates:
      - conditionType: vȭ?ɛī厐[ʣĩ家嫑Oy
      - conditionType: áX箜&%l憯(梺胉Ƅ/)慜
      - conditionType: u颣ɍMg秗ċ廫
      resourceClaims:
      - name: m66F7
        source:
          resourceClaimName: E1V
          resourceClaimTemplateName: Th3TKo5Qs
      runtimeClassName: 51NHMJjO
      schedulerName: 2pW5ph7y
      schedulingGates:
      - name: plp8
      - name: 2j
      - name: awK
      securityContext:
        fsGroup: 6319116615642430000
        fsGroupChangePolicy: Always
        runAsGroup: 6616439806545871000
        runAsNonRoot: false
        runAsUser: 3911306703841559000
        supplementalGroups:
        - 6114687739699545000
        sysctls:
        - name: lAMX4tXQg
          value: ais7GLVXPucxy
        - name: ODxk2RRh
          value: Jpvd
        - name: hG6
          value: uyRNu
      serviceAccountName: YoPNk
      setHostnameAsFQDN: true
      subdomain: qjvHEfli
      terminationGracePeriodSeconds: 2802694886159121400
      tolerations:
      - effect: 啝ǫ豥犂%3凅3D
        key: yvPI
        operator: ',蘘虣ǟxȋ<:骃Cɥ欶Qƒ埕¢Ĩ4;'
        tolerationSeconds: 6979162648566219000
        value: dwDIwZb
      - effect: ǭƦt瓇Ȗ:稵
        key: VsgL
        operator: 惺}ĻƷĭw
        tolerationSeconds: 5105815127740725000
        value: Ullldnm
      - effect: 优ǞƎŎR龝tƆɿ)Eg梩
        key: Xt9jqiVd
        operator: A徰ʗ>,ǌʏ赇瘑
        tolerationSeconds: -6790234676212962000
        value: smlpzi
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: wDvbF
            operator: 檻\
            values:
            - 3Kb3
            - GWpq0EKR
          matchLabels:
            Fkt2W: yYCIcscZ
            Nuw: hRhO
        matchLabelKeys:
        - qRjh
        - sQL
        - J6DNJXz64ng
        maxSkew: 1919093625
        minDomains: -1291723558
        nodeAffinityPolicy: 凶sđD,臹l螲緇茁奿翙ƮÕƣ~
        nodeTaintsPolicy: 俑W鉢铖 *]ȭĄĺ~mȵƛ
        topologyKey: ijMvPSo1
        whenUnsatisfiable: ^ɔ筰
      - labelSelector:
          matchExpressions:
          - key: MmUJZ2
            operator: 昮Rn战鲸;忞榑g0技¢ā
            values:
            - BNT
          - key: LYB
            operator: Ɇ韆Ɍ卞U0T藑ö隬ž,&
          matchLabels:
            "2": aKglOmV
            5GG7: xa
            L: R3C
        matchLabelKeys:
        - H2gkgEwExA
        - LQwNlux
        maxSkew: -1312523589
        minDomains: 584241845
        nodeAffinityPolicy: +KI|gȍ&BƗWHɮ偷ɩ煡
        nodeTaintsPolicy: ¤G,戁豢eDƩʀBǾ碙濥j
        topologyKey: poNRifM
        whenUnsatisfiable: H,/MıÃ樛嚗
      - labelSelector:
          matchExpressions:
          - key: 02e6E
            operator: ²ËNǾ
          - key: Bqr3G9L
            operator: '!'
            values:
            - OHn5S
            - ""
          matchLabels:
            xYEV9SS: s0VtwRK
        maxSkew: -959970438
        minDomains: 1893050440
        nodeAffinityPolicy: j妼魚ȁ笰Ǜ¾j
        nodeTaintsPolicy: ǉ达v嘄{ĨȖȟǹʦ#坖Ú
        topologyKey: vZ
        whenUnsatisfiable: mUƚ;ʗƷ嶑铻
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: PrNLNBOj4nG
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - AD-webhook-service.default.svc
  - AD-webhook-service.default.svc.nO
  issuerRef:
    kind: Issuer
    name: twuYH9-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: PrNLNBOj4nG
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    wqUHiDS: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: AD
    app.kubernetes.io/version: v2.3.8-24.3.6
    dRuotY: sUV
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: twuYH9-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: twuYH9-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: AD-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: twuYH9-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: AD-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 53ObZL18D
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-084.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    "8": tf7ML2YS2
    Nr: WJKMVr9D
    Vl: ""
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: g
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 7vs5b
    health:
      healthProbeBindAddress: ""
    kind: NQSI2
    leaderElection:
      leaderElect: true
      resourceName: rzH
    metrics:
      bindAddress: JjOkiuAQDPE6
    webhook:
      port: 482
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: Sb2hWn
subjects:
- kind: ServiceAccount
  name: g
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Sb2hWn-election-role
subjects:
- kind: ServiceAccount
  name: g
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Sb2hWn
subjects:
- kind: ServiceAccount
  name: g
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Sb2hWn-rpk-bundle
subjects:
- kind: ServiceAccount
  name: g
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: MOjCBp
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: MOjCBp-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: MOjCBp
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn
  namespace: default
spec:
  replicas: -373229836
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: MOjCBp
  strategy:
    rollingUpdate:
      maxSurge: 1994924858
      maxUnavailable: 1244466687
    type: )A
  template:
    metadata:
      annotations:
        0DzQx: 2ZX
        5uUlacM6mq: rz
        iUEpv: TEfbNK
      creationTimestamp: null
      labels:
        "": t
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: MOjCBp
    spec:
      activeDeadlineSeconds: -2246099825379296300
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: Ka
                operator: ?鷌翧Ȯ=Lȑ`ǻɤĪ,炂幺~绶é0Ø
                values:
                - ZfKxG
                - pXi
              - key: a57PWzZ6
                operator: 孧ɝƎ3"/tz襶睃Ō砯OųFJ
                values:
                - fOLt0iP
                - pbn
                - KcEMns
              matchFields:
              - key: eX
                operator: ʫ愿+ɹ
                values:
                - uAkePehZZyLW9o
                - 3z8
                - 2WMM
              - key: F54J
                operator: 赕扯SŃ»Ʈ肏膏闊Ȕ
                values:
                - axHp2U
                - 0vCVcVm
                - bKRAH5YpB
              - key: RU
                operator: ""
                values:
                - QF
            weight: -545986755
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: E4
                operator: Ǟǃ諿枤&?ƽȚɿq劳疛%QvD
                values:
                - IlIOp
                - vRn1nYUz6
              - key: "9"
                operator: M醥Z<緝ƨE
                values:
                - 5Nm5
              matchFields:
              - key: t8k2
                operator: 慅¡煱ƌɏ磫MobƱ;悽曂#)
                values:
                - APV
                - 5V
              - key: "y"
                operator: Kmká_8Fy毷鮹Ð慟Ǯ娸#
                values:
                - aQDHX
            - matchExpressions:
              - key: uFeU
                operator: 鎢盄帼r &誢p.
                values:
                - LysfP
                - ZcuO
                - Vbi
              - key: ALirU
                operator: 0袦0鐆"Eʚ*ʜčÛU1榺ZTg
              matchFields:
              - key: dDqy
                operator: Ė鯛ďǐč2Ô
                values:
                - pw5cbzP
            - matchExpressions:
              - key: S5unJb7B
                operator: 苳ʥćWŀǐěƿN滙誫
                values:
                - Hv
              - key: sV2mp
                operator: 髂:sǀ炉ǆ]蟽ȧO兆
                values:
                - ZTJFrJ8Cqy8S
                - eUC8TkNQN
              - key: pyRT
                operator: 3)饩MAɄ容ȏĔ¢沔Ɠ,穑茲孟%Hō
                values:
                - ""
                - h6eI
                - Ikf5cvEh9NZFb
              matchFields:
              - key: otsM0
                operator: Z`f%皰頶
                values:
                - ytwAnhQ
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: i2Yd
                  operator: 蟦Vɱ蔅d丂DÉ秤Ń岑囌J翮ȱʊ
                matchLabels:
                  jHn: lid
              matchLabelKeys:
              - kD1kvi
              - 9KH9ui1LbyOE
              - D
              mismatchLabelKeys:
              - WR
              namespaceSelector:
                matchLabels:
                  kbWYtJ: z4u4F
              namespaces:
              - 5oj
              - iMSG8N
              topologyKey: sPj
            weight: -1454982636
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: rcXNsa
                  operator: ɐǈĮjƫ4;C羚ƍ|呾ǮǕ÷濧Ɍ¶
                  values:
                  - K
                  - jma
                - key: MM1
                  operator: ɀìɦȼ彆+扭
                  values:
                  - 21xDgiB2h
                - key: iP7lsf5
                  operator: 3嚲誴Ɏ.ɖǶĜ@典氐ǂ
                matchLabels:
                  6u: "N"
                  82eQ: Ij
              matchLabelKeys:
              - lMPCXm6
              - rZh7Y
              - ynCOrnK60
              mismatchLabelKeys:
              - Zx73
              - nh2TGmsHP5
              - un
              namespaceSelector:
                matchExpressions:
                - key: hF7F
                  operator: ǝƊI¿ƍ熍ƌ曺圥皼Ɋ|
                  values:
                  - Tv
                  - XEt1
                  - j29
                - key: VwkX4c
                  operator: ==GȢĿɍÓŴÃ0Ǌ旋轠ɂʌʥ
                  values:
                  - ro
                  - lsrjonA
                - key: q
                  operator: ĨɦƖ釅蹚ñɘ鸶7Ŧ蔅ǫZɐ骅Di$墘
                  values:
                  - I02X6z0hR
                  - wX
                  - PpU
                matchLabels:
                  5D8: G01r5VUDT
              namespaces:
              - rMgg
              - aSTysFdx
              - iBK
              topologyKey: ""
            weight: -1129889139
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: ""
                operator: 柴IĢ觐ƒ埔匱®ƦF5
              - key: QV7m
                operator: 卌桢X|柘糁TÚ7ż
                values:
                - IxExiu
                - xoU5vkb
            matchLabelKeys:
            - vr
            - fKl3
            - Aww
            mismatchLabelKeys:
            - 2gZ
            - OF
            - UzNZa2GG
            namespaceSelector: {}
            namespaces:
            - rRKS
            topologyKey: wIaw
          - labelSelector:
              matchExpressions:
              - key: Tdc
                operator: ųem魲箬徤ē身氶縝膢C蛓:篹ďu^
                values:
                - rzNT
                - Kn
                - Qx
              - key: FX
                operator: 顆Ōȋ縺E髳9K翜ƻȏƼKȂp4ƣ龱
              matchLabels:
                2m: w
                mi6YiCvW: 5vL
                qqgwKJgw: KFkRS
            matchLabelKeys:
            - zDwh
            mismatchLabelKeys:
            - 9Y1
            - "85"
            namespaceSelector:
              matchExpressions:
              - key: uKoUAJegj
                operator: ȑ{戃ǹƑfT间<ʨ冊iɉL襾
                values:
                - pn0
                - ODho
                - Mw
              matchLabels:
                gAYxNPwv: ""
            namespaces:
            - xoqtp
            - gqFN0F6
            - hfABXv
            topologyKey: eZigjcr
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: sFZf1
                  operator: 頸咾%;ɦɤʉɡ哦mZ,
                  values:
                  - WoXBm2
                - key: cO
                  operator: áʀŁf薎&y:疛Eɻp筸ħ
              mismatchLabelKeys:
              - 7evLyF6
              namespaceSelector:
                matchExpressions:
                - key: D4XJFPTz
                  operator: ğ
                - key: yD1a
                  operator: wǺ<Ɖ諥箧ƕ9ș蛡
                - key: aVeWs6aiG
                  operator: 犙蝥6k悸柦蕥í瞣ȑHw域徑Y
                  values:
                  - 9WfvQS
                  - hZBaWOL
              namespaces:
              - Rz3tiFM
              - u2DUO2pp
              - G
              topologyKey: uM5
            weight: -1873790375
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                CFodA: epELn
            matchLabelKeys:
            - hT
            mismatchLabelKeys:
            - OKZEsI
            - gseMbYy
            - hNiQ2C
            namespaceSelector: {}
            namespaces:
            - PVR1
            - RhA
            topologyKey: LA3T
          - labelSelector:
              matchExpressions:
              - key: c3yG2bnW
                operator: 滛57ħ瞘ǒ#JǇ骶~颒Ļ
              - key: uX
                operator: ǝQȅd
              - key: 6iK
                operator: GÉs
                values:
                - DfRNQ0
                - D3G
              matchLabels:
                o: 74T
            matchLabelKeys:
            - W3FWL4
            namespaceSelector:
              matchExpressions:
              - key: JiqSMpi
                operator: '`V区Å[銘氚ǲ讜Óļ睻}&ɿn颢唘'
                values:
                - OGIx
                - JGHg3JPc
              - key: QiOUB
                operator: 6猧wǲ哊藯掭酌瞡彸ʯ種ŎǊh]
                values:
                - UaUBtE
                - BU3xJ
                - sQ1
              matchLabels:
                qyrPifdU: 3NJe
            topologyKey: kl5
          - labelSelector:
              matchExpressions:
              - key: FWHaEt
                operator: 耛鈞笵憦Ľ
                values:
                - 10FWIeIUIV
                - 9fotw
                - Kxbpx
              - key: Zvhd
                operator: i(艱
                values:
                - ech
                - cRpvMX
                - "5"
              matchLabels:
                crAc: ZHLB3
            mismatchLabelKeys:
            - "48"
            namespaceSelector: {}
            topologyKey: ayQ
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - bv4LbFjFG
        - X5vvak7u
        command:
        - /manager
        env: []
        image: n74Ca:y8Skx9
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 64
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 547
          periodSeconds: 952
          successThreshold: 102
          terminationGracePeriodSeconds: 374
          timeoutSeconds: 533
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 935
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 566
          periodSeconds: 45
          successThreshold: 979
          terminationGracePeriodSeconds: 927
          timeoutSeconds: 307
        resources:
          limits:
            cpu: "640"
            memory: "580"
          requests:
            cpu: "919"
            memory: "170"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        searches:
        - H1Ls9
        - SR69A
        - 8zal
      dnsPolicy: ǧÏ6鞤ǃ$'[ëĀo壗Wǋ醝篙ʠ栏Ǆ
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - o8oST
        - GKRC
        - NA4
        ip: 3ii4zn9U
      hostPID: true
      hostUsers: true
      hostname: 3daCO
      imagePullSecrets:
      - name: uu5NgOq
      - name: 07xyy
      initContainers: []
      nodeName: vglXkE
      nodeSelector:
        FhSUG: 2yqKe7z
        GHtF: h
        aCZcb: Wr
      preemptionPolicy: 如菧阣唖墡Ċġ鱙|o).BƬ©v8
      priority: -982659739
      readinessGates:
      - conditionType: ',Ȥ鈤'
      - conditionType: 峻IʍíS彸诒Ʌȑ.cȑFŨɥgcƨ
      - conditionType: Ć媩ė
      restartPolicy: 基QħǲP{
      runtimeClassName: 5RJEe
      schedulerName: LdYLugz
      securityContext:
        fsGroup: -2057651510620291800
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 1435433652739589000
        runAsNonRoot: false
        runAsUser: 6430428212335180000
      serviceAccountName: p4SA
      setHostnameAsFQDN: true
      subdomain: MCqP6
      terminationGracePeriodSeconds: 2536493343284787700
      tolerations:
      - effect: 1評鐧ȍ嫌u贝ǹƦ饷ǻ6
        key: xMcOw
        operator: µ
        tolerationSeconds: -8531274251908150000
        value: T
      - effect: ő',U ǖ®EŤc践i訤綶ǁ
        key: T39B
        operator: ʕ60WH
        tolerationSeconds: 4553033317707853300
        value: RrKuu
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: MwR2Pwv
      - name: 9vyXal
      - name: Vs5abT
      - name: t10I
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - MOjCBp-webhook-service.default.svc
  - MOjCBp-webhook-service.default.svc.Xcx1
  issuerRef:
    kind: Issuer
    name: Sb2hWn-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: MwR2Pwv
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: Sb2hWn-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: MOjCBp-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    Jacfyrff: CPx2
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MOjCBp
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Sb2hWn-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      Jacfyrff: CPx2
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: MOjCBp
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: Sb2hWn-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: MOjCBp-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: g
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-085.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: KDM
    health:
      healthProbeBindAddress: wycgD5c
    kind: IyB
    leaderElection:
      leaderElect: false
      resourceName: ""
    metrics:
      bindAddress: KF
    webhook:
      port: 303
kind: ConfigMap
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-B-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-B-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-B
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-B
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator-B
subjects:
- kind: ServiceAccount
  name: je1S
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-B-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-B
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-B-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-B-election-role
subjects:
- kind: ServiceAccount
  name: je1S
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-B
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-B
subjects:
- kind: ServiceAccount
  name: je1S
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-B-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: B
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: B-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: B
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-B
  namespace: default
spec:
  replicas: -991454453
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: B
  strategy:
    rollingUpdate:
      maxSurge: 1937774995
      maxUnavailable: 1190668901
    type: (WƯ!};悝坉
  template:
    metadata:
      annotations:
        "": lQQOuemOde
        7bziLy6: 1adb1B
        hcirf2TLX: jDyR
      creationTimestamp: null
      labels:
        6SnAV: uaxH5W906K
        QMcVns7sS: kRzb
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: B
        p: mpjYhM
    spec:
      activeDeadlineSeconds: -7878435763390549000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchFields:
              - key: Wk8kIT
                operator: 爼熘k丽稺øŜ彍娜ǭ
                values:
                - WRFzjOY
                - yBjci
                - Fc2viIi
              - key: SikY
                operator: ǪPƋ
                values:
                - ppQ0K4G
                - wEoi
            weight: -1098671981
          - preference:
              matchExpressions:
              - key: H6a
                operator: Č堣ɧġ俏蘻舐嗂檮8Â
                values:
                - D9c
                - C
              matchFields:
              - key: oALca
                operator: 骐挢鿋
              - key: hVDRt8g
                operator: "y"
            weight: -1789374020
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: 0SV0XWK
                operator: ʭƐ樝ƾhőʇ]飐墪,礽
                values:
                - A5EXLlJ
                - J
                - Xqoct5MT4
              - key: i4w9axF
                operator: 艿毌楆鰓+
              matchFields:
              - key: EcetQ6v
                operator: Vʧo<ƀ
                values:
                - WtU
                - b
                - cb
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: cgoIIhXBNsAA
                  operator: ÛD除,^掄3ǡ
                matchLabels:
                  f: tl7
                  j: QVzmksQ
                  yL25uhM: eJ73
              matchLabelKeys:
              - "9"
              - 5Z6
              mismatchLabelKeys:
              - dDRd
              - GPE9
              namespaceSelector:
                matchLabels:
                  1OrS9bbBE: iBl85Ft8
                  x: zU
              topologyKey: cfkeXDX
            weight: -280462771
          - podAffinityTerm:
              labelSelector: {}
              matchLabelKeys:
              - mRv
              mismatchLabelKeys:
              - TSZIHYXy
              - ""
              namespaceSelector:
                matchLabels:
                  0yQ1MAs8: p
                  aW: wboVc
                  j: K7x6hpmg
              namespaces:
              - 6Bs
              topologyKey: hO
            weight: 273500041
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: 5BR
                  operator: ĲTPɁ=
              matchLabelKeys:
              - yS7
              - LFF3D46C
              - 9tprIb1DgdS
              mismatchLabelKeys:
              - 9O4vK
              - 8mdq
              - N7jeqZE
              namespaceSelector:
                matchExpressions:
                - key: 5AiNz2G
                  operator: 曽ɠ/Ơ
                  values:
                  - p4JR
                matchLabels:
                  Iae: GXSok
                  c3AmNm5: JpxmO5
                  oXyB: Lto27BSiZ
              namespaces:
              - lZiNIC
              - v3TiqOqut
              - e3Mq
              topologyKey: ner
            weight: 1046548334
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: YKl7
                  operator: 猩r
                  values:
                  - 48mqOWy
                  - MD0qE
                matchLabels:
                  phmGp: HRpuD7EAKz
              matchLabelKeys:
              - GCWhorcZ
              mismatchLabelKeys:
              - hZGc
              - GgU
              namespaceSelector:
                matchLabels:
                  6D5tsqbwi: er5H2r4
                  DFP5: cKZ
                  MDTL: xzXb7
              namespaces:
              - 1XBZut
              - bpZro
              topologyKey: 6OdV
            weight: -546886544
          - podAffinityTerm:
              labelSelector: {}
              matchLabelKeys:
              - R
              mismatchLabelKeys:
              - 4b6tBLcsni4
              namespaceSelector: {}
              topologyKey: n0G0qkJ1s
            weight: 762012860
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: Yd5
                  operator: Ǜā|(`ȥ¼ǬƊ槹
                  values:
                  - QR
                  - c0V99E
                - key: vInVhLQ6
                  operator: A钫ǜ誰D礨參癶¿肻佊ê
                  values:
                  - Tojkshis
                - key: PoqQ
                  operator: 驨
              matchLabelKeys:
              - c4AB2hZ
              - 7g
              - ac6U3
              mismatchLabelKeys:
              - Qld
              namespaceSelector:
                matchExpressions:
                - key: ZO
                  operator: 椤ŦkĞa桭Î佄Ʋ
                  values:
                  - QsoS
                - key: TmU
                  operator: ģɸ謩ɚ
                  values:
                  - cdXLf
                  - Hss
                - key: ckgB4L
                  operator: 弤荏蒳柚溵]橮ǯɡA8祿ǝ`臑Ȇ齱
                  values:
                  - Bx
                  - IN7PGHg3
                  - xQHI8kiXeOR
                matchLabels:
                  "": K
                  naRtOdp: Ds9D
                  vFHV0iM: sU025
              namespaces:
              - gzLxZ
              topologyKey: vW8Ax
            weight: -1615076535
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                pyudxm: uYlVP
            matchLabelKeys:
            - 68EWK
            - qb04qrnut
            mismatchLabelKeys:
            - F
            - FyqGDfZhkz7T
            namespaceSelector:
              matchExpressions:
              - key: U1AB4
                operator: Ûȸ
                values:
                - POhbV
                - xwWbwcrx
                - MZS
              matchLabels:
                UtqN2: I8
            namespaces:
            - yYyARb8
            - glcIadI2L
            topologyKey: xBJrS
          - labelSelector: {}
            matchLabelKeys:
            - G8pcgzA9q
            - Gp
            namespaceSelector:
              matchExpressions:
              - key: ddlUO
                operator: '}溲(pɛ鰍¼ʦ'
                values:
                - CZOQJG
              matchLabels:
                a8hIYjkhT: QFXC
                pT9OT: c
            namespaces:
            - ObXq8
            - PSG501RD
            topologyKey: FI8
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - amoUVan
        command:
        - /manager
        env: []
        image: ftKlY:bBlM
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 554
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 941
          periodSeconds: 589
          successThreshold: 118
          terminationGracePeriodSeconds: 63
          timeoutSeconds: 733
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 751
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 234
          periodSeconds: 570
          successThreshold: 828
          terminationGracePeriodSeconds: 435
          timeoutSeconds: 451
        resources:
          limits:
            cpu: "125"
            memory: "249"
          requests:
            cpu: "877"
            memory: "279"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - puVsXD
        - Kll1
        options:
        - name: R1wvl
          value: N1Tp
        - name: eLC9
          value: RxUBin3
        searches:
        - K3
        - 9h8
      dnsPolicy: 藕ɚu抩"úF懭øʃǽb慬sF駢1O烑
      enableServiceLinks: true
      ephemeralContainers: null
      hostNetwork: true
      hostPID: true
      hostUsers: true
      hostname: VJmG3G
      imagePullSecrets:
      - name: iqb
      initContainers: []
      nodeName: fIbNqzMr
      nodeSelector:
        FiGgG: xLfA
        Gofa7lA0: qM4HCo
        boRUnI: wZduOUw
      preemptionPolicy: oƨȠĈ縶樑
      priority: -218326744
      priorityClassName: K7
      readinessGates:
      - conditionType: ƙnɫ%ʂ
      - conditionType: Ů逭ƻP[9ȁD\Ĳ!
      restartPolicy: 鈴Ŕjř5șs64焫竌粥T搫bB
      runtimeClassName: CtWS
      schedulerName: oJRX
      schedulingGates:
      - name: z
      - name: sIdY
      - name: R4JiY
      securityContext:
        fsGroup: -7501809040235854000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -7273152115155623000
        runAsNonRoot: true
        runAsUser: -6592709742871125000
        supplementalGroups:
        - 2843801778861937700
        - -8950654477624867000
        - -5634093482383345000
        sysctls:
        - name: dZp
          value: zjyFb
        - name: LcxA45c
          value: S9vTESIXCD
        - name: PYX996
          value: vNQSNse
      serviceAccountName: LenWv
      setHostnameAsFQDN: true
      subdomain: 9m
      terminationGracePeriodSeconds: -6311763428986161000
      tolerations:
      - effect: a鴟j晌丶禆*
        key: VEV
        operator: 7ȎBȡ賡1<ɻŻ]ǹȽ呝ÑŘȍwF
        tolerationSeconds: 1804483854762967000
        value: SEiR2
      - effect: '*Ɲ&ȀñNʇX麤^猝烐ŵ浶ȊĘƮ'
        key: 9P5
        operator: e鐒ǐʖǆ簟Ƨ粂
        tolerationSeconds: 3825796718011534300
        value: 94WYMLw
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: ""
            operator: Žƚđʋ
            values:
            - GPi
            - gES2
            - kIzQlc
          matchLabels:
            XTERJrouGYchN: Pf
        matchLabelKeys:
        - Sm02Q2pO
        - 08uu
        - RIK96rg
        maxSkew: -1787144842
        minDomains: -176326459
        nodeAffinityPolicy: h
        nodeTaintsPolicy: 歆澔'ŏz$9oÐ:Ňµ
        topologyKey: pySCgG4ZN
        whenUnsatisfiable: ǈ譩Ǌvď
      - labelSelector: {}
        matchLabelKeys:
        - FEMppYW
        maxSkew: -1975604271
        minDomains: -101658169
        nodeAffinityPolicy: ~脽ăʒŧ樹笻Qɵ層鍄稨电廢烰2Ȕ
        nodeTaintsPolicy: 龩Öǖ~Ļò談Ê螘_逆ū
        topologyKey: Z6BhYdo18
        whenUnsatisfiable: ə#Ą毈R>掤ƘŚa簺痟嫼忱ÔR叢
      - labelSelector:
          matchExpressions:
          - key: Jbp
            operator: m~御鎡møƣ嫽削Vx
            values:
            - v
          - key: YchsSC
            operator: ɟx果鸈轫-ɜʦǢ惦B恹0
            values:
            - SBW71MB6qIB
            - CC
            - M8bymIUVA
          matchLabels:
            K: EIyt6
            Q: gdcFCOyVnMd
            id2CllN: xfp
        matchLabelKeys:
        - s
        - xSN7bzk
        maxSkew: -1286496217
        minDomains: -957876961
        nodeAffinityPolicy: ŕ濊
        nodeTaintsPolicy: B
        topologyKey: h3hAibfhYC
        whenUnsatisfiable: 攻/yʢH鄹謞膭筎
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: Op2TzEc
      - name: 7K
      - name: Q9
      - name: pPbI
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - B-webhook-service.default.svc
  - B-webhook-service.default.svc.y4nxdBsb7Zu
  issuerRef:
    kind: Issuer
    name: operator-B-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: Op2TzEc
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-B-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: operator-B-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: B-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    pZTJ: OgaeCRx
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: B
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-B-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: B
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: operator-B-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: B-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: je1S
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-086.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    RcCTPya3q: gXZ1Mm1dK
    VnLc: jQYB
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 3SyCJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: S
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: M2i0h
    health:
      healthProbeBindAddress: uixV6HW
    kind: jN
    leaderElection:
      leaderElect: false
      resourceName: k14eKhY7
    metrics:
      bindAddress: knXZsN
    webhook:
      port: 153
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 3SyCJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: QSmzerg-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 3SyCJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: QSmzerg-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 3SyCJ
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 3SyCJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 3SyCJ-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: 3SyCJ
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 3SyCJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: QSmzerg
  namespace: default
spec:
  replicas: -999542308
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: 3SyCJ
  strategy:
    rollingUpdate:
      maxSurge: 1259159617
      maxUnavailable: 733667665
    type: ǣHkɔ
  template:
    metadata:
      annotations:
        "9": VcXvoRi0MS
        185x: Za5Myiq9Evi
        DAS: vVJg5u
        TB2j: D1mkXxnE
      creationTimestamp: null
      labels:
        "7": fv
        DcyA: W
        RCK: 9uO7
        W: B8N
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: 3SyCJ
        irGlM: MW3
    spec:
      activeDeadlineSeconds: 4446465859892303400
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: ""
                operator: 攕ɡ鴕ǁ4敟誼Ţ榋¨宵ƆƐƆĒ¶Ŵ
                values:
                - SXxqEE33vhr
                - h3AIrQW
                - BZ1wyEaO4fw
              - key: Te5
                operator: vÂ橦`¬ī餭mC¼褎"ŵ葋ǹvɫ嘨
                values:
                - mmhRSYp
                - HDI
              - key: cuhlvx
                operator: 梨蠼曲n
                values:
                - XUwA4SQ0L
                - wOU
                - 7gO5up58w
            - matchExpressions:
              - key: UZxxLDH
                operator: bĮ
                values:
                - 1y4F8FHj40
                - fLxhI
                - ilLbsjF
              - key: u1n5J
                operator: Ű轨)J萭.
              - key: RRtEoN5
                operator: suVǄȈģ睑Ć
                values:
                - lCZHrHAfPqyd
                - CVLLhW2fk
                - vMtXpY6
              matchFields:
              - key: qXM9Y7P
                operator: 蚸ǋ¨ɂ逢
                values:
                - b3Ct62FJs
                - 7X
                - QDqXc1
              - key: qyC
                operator: ?埒,汹髥烁ʈ頛鱏邻 锵ķ譆
              - key: dSy
                operator: ȹÞ4X含t稽縑%ɤ4ţĔ嬅QRȯȏ
                values:
                - Tou
                - tWqrDYbcO
                - IrIUu
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector: {}
            matchLabelKeys:
            - ByL5rIylP
            - ""
            - XDn2
            mismatchLabelKeys:
            - S
            namespaceSelector:
              matchExpressions:
              - key: FG16H
                operator: 善ŒCz>柱z謠ǫ汑ãƄü蓪ÝĖU餟
                values:
                - o32apA
              matchLabels:
                aEdf: QGGka8
            topologyKey: QoEuYG
          - labelSelector:
              matchExpressions:
              - key: 8jukvv
                operator: 欉ɝƈǋ乧堾ưUƑ,hy雎ʘ顓待鏨Ħ
              matchLabels:
                6Q4D: j2
            matchLabelKeys:
            - vSaYitvIUn
            - P1Uk2PO
            - AUOjaYM9
            mismatchLabelKeys:
            - uuVZiH
            - B
            - 22R
            namespaceSelector:
              matchLabels:
                KBGvPMc: 7khilRkEF
                Lqg5: WxfvgOq1rLdZ
            namespaces:
            - ph
            - 0CW
            topologyKey: o
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: S2E62
                  operator: 慖昬W&眠
                  values:
                  - ""
                  - 29NA6AaCfSWBF
                  - R0As
                matchLabels:
                  Gq0: Xi7m
                  Rtu4: D0hSm
              mismatchLabelKeys:
              - Q
              namespaceSelector:
                matchExpressions:
                - key: 4yk
                  operator: aY僮úɲǺzǄbʬ魎[ȩL箜ǿ斎4
                  values:
                  - OT
                - key: BH9l6bpwtGX
                  operator: ê躄ǁɉǏƐà途kȂ儈肺Ʊï
                  values:
                  - wJQ
                matchLabels:
                  4QOyWKy: kZ1
                  IG5f2j: MsM
                  XqT5Ip: 76YsO
              topologyKey: "974"
            weight: -17338018
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: 5c8JD
                  operator: ÛȚs
                  values:
                  - xs4Xg
                  - tOUfS
                  - ""
                - key: 2ewusLRoh
                  operator: 瓞髿筗Ƕð?駢蠲ƎǓ
                  values:
                  - i
                  - KLaQc
                  - uoS2B2hi0w
                matchLabels:
                  "": OglF
              matchLabelKeys:
              - pvO
              mismatchLabelKeys:
              - 68FsjArUJY
              - 5GRmS9
              namespaceSelector:
                matchExpressions:
                - key: 8RQFQwE
                  operator: l腹Ɠ诅ĩ谸ĊOSdA垳"Kƚ胘Ff涗
                  values:
                  - k
                - key: QKHVkF
                  operator: 訁荒5ð鐛ĭȒƼ
                  values:
                  - tJLN
                  - p8J9RQwZH
                  - AW
                - key: XLQVTfL
                  operator: ğ怉ŕIǳ|Ȝȝ(灣hż氨
                  values:
                  - er
                  - eC
                  - 1n
              topologyKey: PpCu
            weight: 1133217522
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: nVQHw
                  operator: 篴ƥ,ƙ;u勮Ƕ棲ÒǕe
                  values:
                  - 3ICJ1cqEgk
                  - 3D
                matchLabels:
                  "5": kAw
                  C7ey: mAH6G
              matchLabelKeys:
              - ""
              mismatchLabelKeys:
              - 52cP
              namespaceSelector:
                matchLabels:
                  AmxN7M7D: gSriffmOd
                  Tv: HdIqs9
                  tgCq0X0O3YNL: KgERh6UV
              namespaces:
              - GBGHX
              topologyKey: 7qn
            weight: 2130596589
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: AJtD86QQ:wp
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 610
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 194
          periodSeconds: 861
          successThreshold: 859
          terminationGracePeriodSeconds: 530
          timeoutSeconds: 560
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 488
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 153
          periodSeconds: 826
          successThreshold: 857
          terminationGracePeriodSeconds: 964
          timeoutSeconds: 608
        resources:
          limits:
            cpu: "552"
            memory: "603"
          requests:
            cpu: "439"
            memory: "353"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - nex087njHP
        - 5oyM8B
        - OFS
        options:
        - name: "8"
          value: fxj
        - name: m
          value: JUWXdfQ
        - name: vjiij6
          value: TrT9
        searches:
        - xmO29
        - q7ZY
      dnsPolicy: 3徻n,
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - o0LL
        ip: 3Zo
      - ip: q
      hostIPC: true
      hostUsers: true
      hostname: N5XE
      imagePullSecrets:
      - name: J37w
      - name: XAyGS
      - name: DgDanQ
      initContainers: []
      nodeName: R
      nodeSelector: {}
      preemptionPolicy: ƙ
      priority: 2110598567
      priorityClassName: izM2e1
      readinessGates:
      - conditionType: ș:œ=ɔɃMǃ 椻
      - conditionType: 潏莥G@{
      restartPolicy: ?=,優偿跼膁1yBȇ
      runtimeClassName: UILZ
      schedulerName: ZmzwWiRN
      schedulingGates:
      - name: 1A
      - name: NJpw
      securityContext:
        fsGroup: 5399875565831145000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -2894743999424822000
        runAsNonRoot: false
        runAsUser: -3348099854506448000
        supplementalGroups:
        - -8474922347268491000
      serviceAccountName: cH3njF
      setHostnameAsFQDN: true
      subdomain: Edkae9gT
      terminationGracePeriodSeconds: -4141935907216843300
      tolerations:
      - effect: çv翰瘑ʞ煥n磄4jș$'嵺ůƤ汙
        key: XG
        operator: ~Ģ
        tolerationSeconds: 8980242645943914000
        value: vV8V
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: 1k8
      - name: ZKUY8P
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 3SyCJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - 3SyCJ-webhook-service.default.svc
  - 3SyCJ-webhook-service.default.svc.E3h6ntJE
  issuerRef:
    kind: Issuer
    name: QSmzerg-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: 1k8
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 3SyCJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: QSmzerg-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: QSmzerg-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 3SyCJ-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: 3SyCJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: QSmzerg-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: 3SyCJ
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: QSmzerg-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: 3SyCJ-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: S
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-087.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: YL
    health:
      healthProbeBindAddress: pMd
    kind: dJY7cp
    leaderElection:
      leaderElect: false
      resourceName: xisUSR6
    metrics:
      bindAddress: FSQLz
    webhook:
      port: 220
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nJ
subjects:
- kind: ServiceAccount
  name: xOqjN
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nJ-election-role
subjects:
- kind: ServiceAccount
  name: xOqjN
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nJ
subjects:
- kind: ServiceAccount
  name: xOqjN
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nJ-rpk-bundle
subjects:
- kind: ServiceAccount
  name: xOqjN
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: o2
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: o2-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: o2
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ
  namespace: default
spec:
  replicas: -2134074333
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: o2
  strategy:
    rollingUpdate:
      maxSurge: 65570750
      maxUnavailable: 954120139
    type: 袂ȴľ9
  template:
    metadata:
      annotations:
        U: 5klmK
      creationTimestamp: null
      labels:
        Fp: P6olJSs3t
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: o2
        cbzDUdfwq: OrZ5
    spec:
      activeDeadlineSeconds: 3611247376970001400
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: YYfg1
                operator: ěǁÏ~裚l孎ŵĲ浊鸾ɫP鎿:炎
                values:
                - 6sqb3h3
                - Dst1
                - XAU
            weight: 972142003
          - preference:
              matchExpressions:
              - key: aY5tWb
                operator: n贱趶b|(>Ȅ4
                values:
                - Syn
              - key: coAU1eb
                operator: Uaĝģ倍ʜ&曚
                values:
                - xqKq1GUp
                - qT7u
              - key: gLH5MMiej
                operator: 逫仿imĺT
                values:
                - Q8F1H
                - orsn
              matchFields:
              - key: Ycs5M5v
                operator: '|±í琛ʛ'
              - key: X98
                operator: 檚D鮩ȵÿ&ÿƬ庩vș<xǠ嫅扏a
            weight: -1123521216
          - preference:
              matchExpressions:
              - key: R6zE1egomo9
                operator: ĎǞ別B揄Þ.Dú蠃ȥ
                values:
                - tPULUk
                - U9cI0
                - xecrdb
              matchFields:
              - key: idsY
                operator: 佖²ő烈ox表Ƶ&C:#ɢD,7淐q
                values:
                - Lj5AZm
                - aeyCr3c
              - key: ""
                operator: ƲǦ÷sȐǘ俵茱w賗
                values:
                - 7oyPr
              - key: GzcwD
                operator: 廭膩Ʈ?ŋ竵觯ĪD
                values:
                - R6SEfaK
                - 7EK6F
            weight: 170313723
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: TZnpCGpqE
                  operator: 蘫5ã
                  values:
                  - ""
                  - 8Tb7Cc
                - key: hp1
                  operator: c
                - key: ""
                  operator: 稚載
                  values:
                  - u52ble
                  - eg6S1oR
                matchLabels:
                  "3": SpkCl
                  dBf: SitIjoNzN
              matchLabelKeys:
              - C6B
              mismatchLabelKeys:
              - rj
              - O3YdvSW
              - b
              namespaceSelector:
                matchExpressions:
                - key: XPJhL
                  operator: Ñ0w阼ÒlǊÐʅtN#犚攻鲁m畱酢
                  values:
                  - g0bELoxCMIC
                  - MwMeJjt
                  - LlZ
                matchLabels:
                  "": qtl0ftS
                  pKXT: pD
              namespaces:
              - ykefLwxA
              - pS5vdN
              - 3YnM
              topologyKey: "Y"
            weight: -2027790518
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  ViXKTypb: aXr40yz
              mismatchLabelKeys:
              - t
              - Y8z
              namespaceSelector:
                matchLabels:
                  KEz0tEf: VtuIk
                  Tzhknw: ""
                  jiEPp: "686"
              namespaces:
              - faQn9
              topologyKey: C
            weight: -792978151
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                XlaCcNFzfUH: sgrd
            matchLabelKeys:
            - "22"
            mismatchLabelKeys:
            - l6mlUPp
            - o3wkL8tPFB
            - zcf
            namespaceSelector:
              matchLabels:
                "5": dstr
                X: KzeZK
            topologyKey: TxRf
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector: {}
              mismatchLabelKeys:
              - ""
              - cc
              - Ph1pLL8OT
              namespaceSelector:
                matchExpressions:
                - key: ""
                  operator: 蘷GƜ{ŋ=ǿƲ玬
                - key: 5N8H
                  operator: 屢鴻ƒɤǥ頻uȞ:r乂*Ɩ曇Ɂ
                  values:
                  - r1HJj7Snv
                  - CNkYTu
                  - muc
                - key: c8iAY4a
                  operator: m豍ĢłÌ
                  values:
                  - cAt3
              topologyKey: ""
            weight: -703347438
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: b
                  operator: 瞘V·ō鄠舼
                  values:
                  - QDyF
                - key: 72Qpu5D
                  operator: ŷ靃r{
                  values:
                  - 5V3z
                - key: tu68Td3
                  operator: ǒ缑燖gBý妶Hhɫ
                matchLabels:
                  eVIWP: 0t9
              matchLabelKeys:
              - RtYofa
              mismatchLabelKeys:
              - 5W9Fsy5W
              - yrg4pN
              namespaceSelector:
                matchExpressions:
                - key: DCqk
                  operator: Ƴ鵘^Tȡɏ鉣帹鄦ƮƂğ蘿ǫĔɒ
                  values:
                  - enFCmXwlDFxY8
                  - MyA
                  - ROhdonoh
                - key: NuML2tCn
                  operator: 駳盟鏄<
                matchLabels:
                  "": GlRK9OO
                  EFuR91: hbWFRx
                  O: RztNwoLc4I
              topologyKey: WZvpHbNfc
            weight: -1314685971
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: KCu
                operator: §ı+A
                values:
                - "y"
              - key: 0JP7Nw8
                operator: ɍ击跍ǥƞH氽P虏Xʣ
                values:
                - ""
                - DfEgNNGEJ
            matchLabelKeys:
            - d0
            - 7xN4Kz62
            - rk
            namespaceSelector:
              matchExpressions:
              - key: r2m
                operator: 蚫]R/ě発Ȼ鉿ɮwǔOȋ熍旭
              matchLabels:
                2FBg: r
                hA5i: AdW0H3r
            topologyKey: DCtQ
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: 87:1XQEc73
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 623
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 53
          periodSeconds: 173
          successThreshold: 385
          terminationGracePeriodSeconds: 164
          timeoutSeconds: 179
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 835
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 876
          periodSeconds: 361
          successThreshold: 438
          terminationGracePeriodSeconds: 657
          timeoutSeconds: 513
        resources:
          limits:
            cpu: "879"
            memory: "600"
          requests:
            cpu: "580"
            memory: "545"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - HE4
        options:
        - name: HN
          value: facMpv
        searches:
        - mL2v
        - kY6pNx9uR
      dnsPolicy: 59gBʃÀ¿躮e
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - J
        - St
        - XqkV
        ip: y7
      - ip: zO7rtopVEQS
      - hostnames:
        - su
        ip: "n"
      hostIPC: true
      hostUsers: false
      hostname: XkI5
      imagePullSecrets:
      - name: BRp
      - name: LEJ
      initContainers: []
      nodeName: I3PDr2y7pMU
      nodeSelector:
        Y2GbQ: y3p0UgXdu
        rG7Dr: Hcyrd
      preemptionPolicy: 9/堾嫜鐖搜
      priority: -1277325964
      priorityClassName: m
      readinessGates:
      - conditionType: ȕ屾襜
      - conditionType: 夞ɳ zŊǪƼ祧欁|
      restartPolicy: Ŗì繁KŨȥ畢Ÿʑɵ
      runtimeClassName: GeM
      schedulerName: VYFE6IX29R
      schedulingGates:
      - name: SjAY
      - name: IhZWyz
      - name: ZuL3FRU
      securityContext:
        fsGroup: 3380202771088037000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 8369722166000037000
        runAsNonRoot: true
        runAsUser: 8211600035314606000
        sysctls:
        - name: vxQN5q
          value: VkF98
        - name: NA7TunIRRR78Y9
          value: bncd
        - name: c
          value: Y9s
      serviceAccountName: hM
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: L3v7npWScJbD2
      terminationGracePeriodSeconds: 8001308259005676000
      tolerations:
      - effect: ;Ⱦ袄裝砤紺
        key: 3UGAq89M
        operator: 攙Ķd!施ʇ
        tolerationSeconds: -1696575707541867300
        value: a
      - effect: )荵脒y殚sÄ涅Ľ]­Ĭ舍×ȩŕ
        key: 4h2
        operator: ɇ
        tolerationSeconds: -4336237698479852500
        value: Mv
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: OLhY
      - name: LICPc
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - o2-webhook-service.default.svc
  - o2-webhook-service.default.svc.O7Xx
  issuerRef:
    kind: Issuer
    name: nJ-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: OLhY
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    XFSHB: ot7Wo
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: o2
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    q93: ONPg3F
    rZBEA7mOLYT: iFtHtFH
  name: nJ-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: nJ-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: o2-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: nJ-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: o2-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: xOqjN
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-088.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: Gpn
    health:
      healthProbeBindAddress: qx
    kind: mAeO0vP
    leaderElection:
      leaderElect: true
      resourceName: BP61Er
    metrics:
      bindAddress: rwdC
    webhook:
      port: 82
kind: ConfigMap
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: cCP-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: cCP-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: cCP
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: cCP
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cCP
subjects:
- kind: ServiceAccount
  name: akO9K6
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: cCP-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: cCP
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: cCP-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cCP-election-role
subjects:
- kind: ServiceAccount
  name: akO9K6
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: cCP
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cCP
subjects:
- kind: ServiceAccount
  name: akO9K6
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: cCP-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: WqmcFb
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: WqmcFb-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: WqmcFb
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: cCP
  namespace: default
spec:
  replicas: -2144644648
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: WqmcFb
  strategy:
    rollingUpdate:
      maxSurge: 1212904920
      maxUnavailable: 769659126
    type: ({z恲縅Da驯
  template:
    metadata:
      annotations:
        W4R: "9"
        ar71kLiEtX: K
        kwi: trQ
        xbu5FAyuP: NYj4WkniUocV
      creationTimestamp: null
      labels:
        4c: 3o5HPEk0sv
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: WqmcFb
    spec:
      activeDeadlineSeconds: -2405601678923557000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchFields:
              - key: tefUtgH
                operator: 鍗úskɯ
                values:
                - FmQyZFxdl
              - key: Cnyt
                operator: wɞh纚蟯巑
                values:
                - nt876qCF
                - "3"
                - V24g7T7
              - key: iZes
                operator: ŏƊ:訨ŷ蘭ǆ懙复7杖Ƣ黍_[JÂ
                values:
                - Uap
            weight: 963706628
          - preference:
              matchExpressions:
              - key: Wdc1
                operator: R妯é0惁烤ƹ蘄蔻Ȼc綸
                values:
                - 8xsr
                - ZlVAx
              matchFields:
              - key: sWCyDV3
                operator: T鏡荡印)ȹvá焏b雖杚涻咦&z
                values:
                - MhiM
                - z
            weight: 1320782896
          - preference:
              matchFields:
              - key: ztK0gOd
                operator: /Ë匸ʨ襡ȁ宫鐦ȷ鲤ſ
                values:
                - CG016
                - NOb
              - key: RqBMw
                operator: 遳²Ø8$赁&缥殌Q梊D
            weight: 2120338660
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: iVIXc3
                operator: őǳ葢=Ǣ紈簾;Ĕƣ建鳧縃0
                values:
                - ""
                - jHnJ
              - key: IaK
                operator: u|ƚ賾*f®ưĀ
                values:
                - vuIyd
                - Drs
              matchFields:
              - key: Dhw
                operator: ""
              - key: aD
                operator: 賒傸緗u櫦軂{撇ż
                values:
                - b8X2
                - "8"
                - reNUvHEmQi6
            - matchFields:
              - key: YYx8
                operator: ǣtjGȓ旯DĔėĝ
            - matchExpressions:
              - key: bKL57zEUMd
                operator: 0ćȳǋ蒓Ķ37NJAĬ玍BŽ櫁樷廜
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: EAq0Qy5
                  operator: Ƣ
                - key: sFBS8
                  operator: ""
                - key: 1oR5pb62G
                  operator: µ硚惔垄ɳw騃!幬NųB罍p
                  values:
                  - lP
                  - AG7Y
                matchLabels:
                  vjOirJLgcD: X4PzOx3RhF
              matchLabelKeys:
              - J
              - BB
              mismatchLabelKeys:
              - ciDrkLK
              - jtPS
              namespaceSelector:
                matchExpressions:
                - key: Cxpw
                  operator: z爛Ƌ槐锨煞ō鴦
                  values:
                  - 3A
                  - 9cg3gZ
                - key: Zee
                  operator: 痣ǆ籎]HǀǦm{oȳ掟
                  values:
                  - NzVKBIF
                  - kPK
                - key: 5nlaG6GHo
                  operator: ǇŅ]Ȗ
                matchLabels:
                  OOY3uhAXpo: qSB
                  aojS: gOkolN
                  oGPTB: KFJgCX
              namespaces:
              - HfF1GUt5
              topologyKey: 90WdT7
            weight: 1054168312
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: MUJtlbN0
                operator: 蛂ȇ堯cU狖陪Ʋ縔ƋYȲ
                values:
                - 8u
              matchLabels:
                Hia4jM7: pU1n
                KLNPg4V8K: ZSkbNZASEFws
                LZzCes: dTDFEcfxY
            mismatchLabelKeys:
            - WXTpWt1q
            - J8g1XC
            namespaceSelector:
              matchExpressions:
              - key: 7CKrX
                operator: GĒ
              matchLabels:
                8MuoqJnDQmxwY: kMrO8wMx
                Z9THJX: p9MH7m2Q
                t0s: UdXxXsk3DU
            namespaces:
            - B
            - rlS9qYanCUN
            topologyKey: CSJMR
          - labelSelector:
              matchExpressions:
              - key: 94ZFj3AMl0
                operator: ƐǢʎįɡ犍ɠ
                values:
                - x23a
                - fVpPg
                - gzdv
              - key: Maml
                operator: '[ĕ蟅ķv唛硉峄蠿;k犂ʣ緹Þ巯ŇI謭'
              - key: oAlgJu4xG
                operator: 庉<rʞ麣髬KÈ伅驲+荁ʝ鋾Ǽ虤嫈YC
                values:
                - AOrA7Gts
                - W6m5TLl5
            matchLabelKeys:
            - Am5
            - Wd
            namespaceSelector:
              matchExpressions:
              - key: iFQ
                operator: Xc颔'ɸʔƨ悸
                values:
                - p0
              - key: 9LRAVi
                operator: ~骇V顷輅接浽笾7怀閥č某Èe
                values:
                - Eq9cZmf
              - key: T57rF
                operator: 蘳%Ê讘
                values:
                - Vl9AdO
                - ey
              matchLabels:
                S6gIwX: hVQl
            namespaces:
            - BJR
            topologyKey: wqEeIw
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  AwXhslQF: mDlbddl
                  YF: 4IBMM
              matchLabelKeys:
              - eLx
              mismatchLabelKeys:
              - bqu
              namespaceSelector:
                matchLabels:
                  dNKom: xDLYKJqm
                  tgw8: Dp0cquM
                  w6: tk4zVWd2
              topologyKey: ""
            weight: 1764017182
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: w3
                  operator: 琨
                  values:
                  - 6Op
                - key: Yian6Gl
                  operator: 耿牿羠
                  values:
                  - eAkPFc
                  - uE
                  - iBl3qSphY
                - key: MjkNc
                  operator: Ő迃貰zŝ陴9ɸĳ§%
                matchLabels:
                  "": 1qht
                  bE: Vks
                  wZ: dPNcq
              matchLabelKeys:
              - A7UTGA0zL
              - AmhQ6
              - rjMF
              mismatchLabelKeys:
              - Ds
              - sYp
              namespaceSelector:
                matchExpressions:
                - key: URXc
                  operator: ""
                  values:
                  - 13ucCNW
                  - TwwfUY
              namespaces:
              - Q3U0f7I
              topologyKey: kTYlaSXm3c
            weight: 1738819439
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: wfjt8C3
                  operator: ǝɵø
                  values:
                  - UAhDz
                  - G0
                  - CX4RYXVV
                - key: HWO7U
                  operator: 跔ƀśtƂǠµMǗ蕟ŠɋƲhǳ母ʩʬ
                  values:
                  - A1t
                  - k3
                  - objEB
                - key: o
                  operator: y{Yh膽ťĉ糰啎F
                  values:
                  - vGL
                matchLabels:
                  RlbLVxkz: Rb4k
              matchLabelKeys:
              - ahc
              - IxRM
              namespaceSelector: {}
              namespaces:
              - Efwm
              - Hb3
              - fvCnT0m6
              topologyKey: Z0rS5Kc
            weight: 536551224
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: YEcGDGM4
                operator: 鴣zx歔<7ôÐ紈ķKƞɛt±魡
                values:
                - iJgp
              - key: vClL5uk
                operator: ¡慏糕ǝ焯ǥ}4ɊFƸ
                values:
                - aqL
                - zgvor
                - ""
              - key: 5qdmQ
                operator: Eŕɑ熂
            matchLabelKeys:
            - 4NAKk
            - HBQw
            - VgbD
            mismatchLabelKeys:
            - "n"
            - YpjR
            - uLkyZq
            namespaceSelector:
              matchExpressions:
              - key: QnR8
                operator: '|'
              - key: Tgd3gSj
                operator: 冫偱?Ʊ3
                values:
                - f1KW4
            topologyKey: ch5hEI
          - labelSelector:
              matchExpressions:
              - key: w
                operator: TƲ2Ŧ葫əj霠#熶唚巊}歋Ƙ
                values:
                - ZNPsn7RS
                - sMpAh
                - brRxvdM
              - key: jruDZ6q
                operator: ƑgÓ槊
                values:
                - ""
                - ""
              - key: OzN
                operator: 0V柱ȵ_Õ
                values:
                - Yn0
                - Z3jsY1DsSh
              matchLabels:
                KM: Pv79uIjog
                R4rKYD: P
                cPCC: HK17
            matchLabelKeys:
            - TBZF8
            - THCF
            mismatchLabelKeys:
            - eGqGjRo
            - k2QBitaU
            - ZFF
            namespaceSelector:
              matchExpressions:
              - key: r
                operator: +ʠ曗Ig兘龤鏹ɗóɾ旯曂ƈ7
                values:
                - "7"
              matchLabels:
                2AYp: qXwxt
                gNztl: N8B
            namespaces:
            - BfDTMQ
            topologyKey: j603Ss
          - labelSelector:
              matchExpressions:
              - key: K5WhrQtRnt1
                operator: ux
                values:
                - tGE
                - 6Yt
            matchLabelKeys:
            - x1y
            - 7upR
            - azE4
            namespaceSelector:
              matchExpressions:
              - key: Lvc6ZE0D7
                operator: ¦5ƭ映榁袭·ȥ>玟ɪƑ=&茟
                values:
                - S2IZ
                - "3"
                - i
              - key: IMnOYKW
                operator: Ǯő
                values:
                - w
                - 4EBn47
                - kZ1G
              - key: JQ
                operator: 5蠰[醂ż
                values:
                - ""
                - bVo
                - J
              matchLabels:
                1UFu: vLW
                VRA: F2hdzU
            topologyKey: yV
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: I:y3ROS
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 895
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 342
          periodSeconds: 649
          successThreshold: 298
          terminationGracePeriodSeconds: 849
          timeoutSeconds: 148
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 192
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 994
          periodSeconds: 475
          successThreshold: 443
          terminationGracePeriodSeconds: 514
          timeoutSeconds: 185
        resources:
          limits:
            cpu: "434"
            memory: "590"
          requests:
            cpu: "637"
            memory: "249"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - HrhMd
        options:
        - value: 5SI8
        searches:
        - Tyl2T5Mt3y
      dnsPolicy: 'Pßčʦ榲÷绩š}:'
      ephemeralContainers: null
      hostIPC: true
      hostPID: true
      hostUsers: true
      hostname: Fe
      imagePullSecrets:
      - name: gBOg0mI
      - name: Tykic
      - {}
      initContainers: []
      nodeName: jH6G5f
      nodeSelector:
        YLyedHB: pxcC
        a6woHeKel: rceE
        bGbWY5E1F4Jac: Oq
      preemptionPolicy: Ž曶}韡鵰ȓd}韀瞀P凄q.兪鐞Ȥ莑\
      priority: -177953537
      priorityClassName: 3jtR
      readinessGates:
      - conditionType: Ħʑ摳ŰE谩摩飄ʪ癹1旂n笪o殀骥Ʀ畨
      - conditionType: PĆ噼ƮgĽŅV
      - conditionType: Hſ桎ɐɓ!uø苕灰ű
      resourceClaims:
      - name: Vb5gyg
        source:
          resourceClaimName: ""
          resourceClaimTemplateName: IYY5Ta
      - name: HhZbUPuhcBd
        source:
          resourceClaimName: T
          resourceClaimTemplateName: "4"
      - name: F12g6
        source:
          resourceClaimName: 80R1yY
          resourceClaimTemplateName: K4AI7yrO
      restartPolicy: ¼蠸ɯ
      runtimeClassName: MC5
      schedulerName: BXME
      schedulingGates:
      - name: zm2LXXZ
      - name: uPS5a
      securityContext:
        fsGroup: -4948740130642859000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 1600747191373743000
        runAsNonRoot: false
        runAsUser: -8772834372891012000
        supplementalGroups:
        - 3495344937554265600
        - -729386749022923000
        sysctls:
        - name: 8YRnWYy2kE
          value: 3bUQ
        - name: qtXD5d4
          value: TWT7Re07z
        - name: Nvjbq2Hzi8
          value: 3tWxKfQ
      serviceAccountName: 1TvXd
      setHostnameAsFQDN: false
      subdomain: K9
      terminationGracePeriodSeconds: -1056991240725260900
      tolerations:
      - effect: 垛"n焸骋
        key: jk
        operator: 肪G乻,ʫ鴺钷鉱 ʌ侏Iºɗȸ7儨ƣ
        tolerationSeconds: -1286742372947447600
        value: 42mO
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: I4LlqW0
            operator: ɘ咎:*©篗ɺŶƹ4萬ʄo麂ʉ狨蝁2
          - key: d
            operator: '%ƚ'
            values:
            - LaBM
            - 7j5Hr89o
            - 26a
          - key: q6LBAJgMa
            operator: Ȱ椼|
            values:
            - fX
          matchLabels:
            Egb: 9Ela
            rsZCnx: BNM33
        maxSkew: -1683677098
        minDomains: -1523899896
        nodeAffinityPolicy: '`B灦ǠyǸ爪óȣȉaȩI6皔帾ɓ齥'
        nodeTaintsPolicy: Ǳ_ǁ拶0ãFɛȥ泱鿗极c汷<ʟH
        topologyKey: dTqiO
        whenUnsatisfiable: ȍ
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: Fmt
      - name: 2ekz
      - name: ulq
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - WqmcFb-webhook-service.default.svc
  - WqmcFb-webhook-service.default.svc.BhU
  issuerRef:
    kind: Issuer
    name: cCP-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: Fmt
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: cCP-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: cCP-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: WqmcFb-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    G: g1H20bqs
    GIyHjLLo: ""
    OV: QDDDF
  creationTimestamp: null
  labels:
    1S48I: gbO1FYE
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: WqmcFb
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    jHlVD3i0I: Hfqg8dMgdc
  name: cCP-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      1S48I: gbO1FYE
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: WqmcFb
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
      jHlVD3i0I: Hfqg8dMgdc
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: cCP-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: WqmcFb-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: akO9K6
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-089.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    9eKE: ayih32GI
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: yHixING
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: TxdHR
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: UbL
    health:
      healthProbeBindAddress: 9BJDnl
    kind: JTWcul
    leaderElection:
      leaderElect: true
      resourceName: Gvhjc3S42
    metrics:
      bindAddress: 1GNyShDudY1
    webhook:
      port: 344
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: yHixING
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 8WTbb-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: yHixING
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 8WTbb-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: yHixING
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: yHixING
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: yHixING-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: yHixING
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: yHixING
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 8WTbb
  namespace: default
spec:
  replicas: -1025225275
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: yHixING
  strategy:
    rollingUpdate:
      maxSurge: 1620202023
      maxUnavailable: 274330924
    type: 壻Ȃ鲤幂
  template:
    metadata:
      annotations:
        54zKz: jYt9
        AqNeS: 4qPWyA
        G5a7A: HiY
        Yz12: ""
      creationTimestamp: null
      labels:
        EuL: QLG
        XG: ""
        Yk: 1vwgUydM
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: yHixING
        hzGggQD: yviK
        oW: 0Y
        sjUSas: toa
    spec:
      activeDeadlineSeconds: -1971868051082364200
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: X3VCza
                operator: ŭ唊Ǜƞɶ葻Ā*
                values:
                - wTKp
                - ERDbGr3
                - qv
              - key: AtvIaK5
                operator: i膏丅燝ǟ
              - key: kXeyrV
                operator: kĔ
              matchFields:
              - key: ""
                operator: șC_憭ʭ湜佯T8DT砆
                values:
                - NOHQwMW
            weight: 1381343894
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: T79U
                operator: ɧɯ澫ŧ兣ź*ƥOw
                values:
                - w
              - key: Vo8
                operator: 牖~褊!\蚅ċ|ƣFG=ʗ陴_川vɠp
                values:
                - t
                - 1DzvnmfGZEV
                - xKQ
              matchFields:
              - key: C04n
                operator: ""
                values:
                - aHQBq
                - xVJz
              - key: oh
                operator: Whʍnɞ蛁寈Ɨɫűȕ鵚×銽窓1ɧ
                values:
                - kqEuTdf9
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  T: tAXcL0
                  V0ZO: cQJbNBL4n5
                  v6FbY: qDVcB
              matchLabelKeys:
              - yePHie0
              - vw
              mismatchLabelKeys:
              - CRpRwcuOEZ
              namespaceSelector:
                matchExpressions:
                - key: 1mDDe9
                  operator: Ȯ沀榇演Ɲ譅6S
                  values:
                  - D
                  - 9OcM
                matchLabels:
                  S9: 4d2S8pDx6qt
                  SA4J6BA: xoPw9xv
                  z: jqVbCB
              topologyKey: du9Ao9T
            weight: 1468290431
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: uoBkHnTW
                  operator: Ʋɼj/鑙#!ħ
                  values:
                  - OO
                  - m0iR5eEF
                matchLabels:
                  iS49J1: eo3z
                  sEhsr: "8"
              mismatchLabelKeys:
              - ""
              - Z3BkmE
              - 7vjLUdg
              namespaceSelector:
                matchExpressions:
                - key: e7tsTrj
                  operator: Đʑ瞥綡痢%äɬD
                  values:
                  - 2yW5YS
                matchLabels:
                  BgcyI2: sD
                  Wjsu: 0FtXt
                  nNLiy4: 3AVrp
              topologyKey: "9"
            weight: 1759502779
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: 9qz74
                  operator: 姵U錦ǲ朚浙覐鬑Nz輊
                  values:
                  - VBm
                  - 7cv
                - key: ""
                  operator: Ǿ賏u烎Ď+沚NɁƩf暢ɀŽ憺誾{ʑ
                matchLabels:
                  zz: fHFz4v0M
              matchLabelKeys:
              - ""
              mismatchLabelKeys:
              - s
              - Vc
              - WAz
              namespaceSelector:
                matchExpressions:
                - key: wsgg1nz
                  operator: 哢ǗőÛC#1¨ŊŹŊp
                - key: "1"
                  operator: ""
                  values:
                  - i39kyd4
                - key: Rjjmd
                  operator: 蓄1C
                  values:
                  - 3jAI
                matchLabels:
                  WFLHH: XJuW
                  sCBfi: D6R
                  z8U: P7FdAC
              topologyKey: rQLA
            weight: 1674830551
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  K9WHX: NuxCH
                  maWcqq: kxCw
              matchLabelKeys:
              - ZmOCOym
              - wZ2g2md6x
              mismatchLabelKeys:
              - 1a
              - w85D1yL
              namespaceSelector:
                matchExpressions:
                - key: eUJi1
                  operator: (uÃ適癗ǆ
                matchLabels:
                  9Q: BL
              topologyKey: LGshJ6
            weight: -1253640651
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: yh9
                  operator: 碔TƁ謘
                  values:
                  - Ve1ypW
                  - kCva
                  - ""
                - key: hL1Nz
                  operator: 筷ȭ且樂牄齣ƲO驣眍
                  values:
                  - ""
                - key: 1EaXNjt
                  operator: ł慻譑ǄZ芸
                  values:
                  - bDLU
                  - rgBDhrqy
                matchLabels:
                  GRp10v: J95
                  naqvy: thHr0tL4w
              matchLabelKeys:
              - QW
              mismatchLabelKeys:
              - UfA
              - ScfR
              namespaceSelector:
                matchLabels:
                  "04": wcnUl0EW
              namespaces:
              - noZ3
              - qEV
              topologyKey: 8h5O
            weight: 421293484
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: BKsXZ
                operator: ""
                values:
                - NIJ9
                - DWERr
              matchLabels:
                OA: gKXA
            mismatchLabelKeys:
            - 4tP
            - J4vm4n8
            - "7"
            namespaceSelector:
              matchExpressions:
              - key: Oa
                operator: 彦膀WK氙U嬥蜎t}jȮǁű"
                values:
                - HqSj
              - key: wz2RZV
                operator: ʄ峢h謓勶蓿
                values:
                - aViZO
                - o8nC
                - fkE6q
              - key: OxV8VXtyiC
                operator: '>Ɗ愞'
              matchLabels:
                Qyt: FP7AwrkY
                t: c8BEj5L
            namespaces:
            - bmwgBy
            - X8tn8Th
            - lFqPal9
            topologyKey: "6e2"
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: TPAc:u
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 399
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 720
          periodSeconds: 992
          successThreshold: 659
          terminationGracePeriodSeconds: 489
          timeoutSeconds: 26
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 334
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 252
          periodSeconds: 964
          successThreshold: 958
          terminationGracePeriodSeconds: 657
          timeoutSeconds: 851
        resources:
          limits:
            cpu: "751"
            memory: "208"
          requests:
            cpu: "438"
            memory: "219"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - 41sorB33
        - 2g7f
        - xf
        options:
        - name: Mx
          value: wELDyO
        - name: 1tcBvK23BT69o
          value: hhs56
        - name: bvg
          value: T
        searches:
        - s25
        - "55"
        - HGkB
      dnsPolicy: 閌k牘Ⱦ
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - wFZetw
        - fGma
        - mwLkljZhY8nh9
        ip: rUtWpPG
      - hostnames:
        - QBs7SX
        - hr
        - aR
        ip: o03ImUaa
      hostNetwork: true
      hostPID: true
      hostUsers: false
      imagePullSecrets:
      - name: "Y"
      - name: dMWEdsM
      initContainers: []
      nodeSelector:
        a: r
        eCJnhsKq: AE5n4RCt
        hn4HoimI3: qMsr2Cp75uKw
      preemptionPolicy: ""
      priority: 364279596
      priorityClassName: UR
      readinessGates:
      - conditionType: ɛƤ砻PƳsĕ鴆:Ɍ蘛
      - conditionType: 粢
      resourceClaims:
      - name: oZW
        source:
          resourceClaimName: DvQUgFvN
          resourceClaimTemplateName: jY5v61yc
      - name: XLtZBG
        source:
          resourceClaimName: sb7Xv
          resourceClaimTemplateName: JWxd
      restartPolicy: 谽
      runtimeClassName: 9F1lbzmuV
      schedulerName: pWZ5
      securityContext:
        fsGroup: -5510930515482674000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 7435962813127169000
        runAsNonRoot: false
        runAsUser: 8634968706269563000
        supplementalGroups:
        - 4998646178116102000
        - 6581577714527332000
      serviceAccountName: Ymi8
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: 8GF8
      terminationGracePeriodSeconds: 5456055603645806000
      tolerations:
      - effect: ǯ矴苅ɠ暡běJɧ
        key: IiLZnjHW0
        operator: 貭螎妺'阙tɬ`^溤ɻʘ壌
        tolerationSeconds: -2823534263961733600
        value: 3uTJ
      - effect: 返ƔȨ鴪ʒ-軻+Ž屜^ǻ鬏
        tolerationSeconds: 5972720753201202000
      - effect: Dp鷲Ȼtɷd´iƱbĦ岕
        operator: Ŀɖ"ɪ眭ƄxĖ鈗兣鱖显=Ȇ
        tolerationSeconds: -2886177850537770500
        value: At
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: Nkpr
            operator: R~脊ľ碮ǆ筪煺ɇJǖ暏塗Ġ
            values:
            - OQd
          matchLabels:
            USzZL: koYBIbq
            py6g4Vun: x
            w5GT: "N"
        matchLabelKeys:
        - lKa2KMJ7w
        - OuX0gzH
        - DS3nRVt4p
        maxSkew: -623744214
        minDomains: 376208763
        nodeAffinityPolicy: 肧 嵖
        nodeTaintsPolicy: Ĺ
        topologyKey: AIvqn
        whenUnsatisfiable: 逩$;oɝ枂ɐ^+cÝÅ焏6
      - labelSelector:
          matchLabels:
            1i5I4UN: 5Qq48
            s5E0VEkJ: d7
            yJxt: 7UVK6F7Li0
        matchLabelKeys:
        - l8EUPy
        - OpoJ52XwW
        - RP0od
        maxSkew: -1858645886
        minDomains: 1623598401
        nodeAffinityPolicy: RkC熭蒁k穖eAnʗɬ8­玁
        nodeTaintsPolicy: Ȱāa×Ɠ鵍[Vp9toʤK
        topologyKey: "n"
        whenUnsatisfiable: uƈl塻柜Ɔi馿实Ē9潳
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: k
      - name: 2hip
      - name: QfSB7e1
      - name: cG
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: yHixING
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - yHixING-webhook-service.default.svc
  - yHixING-webhook-service.default.svc.8HDrm7
  issuerRef:
    kind: Issuer
    name: 8WTbb-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: k
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: yHixING
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 8WTbb-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 8WTbb-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: yHixING-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: yHixING
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 8WTbb-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: yHixING
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 8WTbb-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: yHixING-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: TxdHR
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-090.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    DxAFTmru: 8nIlFqE
    zLK: RRb
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: drBf
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 6e
    health:
      healthProbeBindAddress: Kx
    kind: vA2F
    leaderElection:
      leaderElect: true
      resourceName: v75JBm
    metrics:
      bindAddress: V
    webhook:
      port: 403
kind: ConfigMap
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: Wo
subjects:
- kind: ServiceAccount
  name: drBf
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Wo-election-role
subjects:
- kind: ServiceAccount
  name: drBf
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Wo
subjects:
- kind: ServiceAccount
  name: drBf
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: Wo-rpk-bundle
subjects:
- kind: ServiceAccount
  name: drBf
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: L07
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: L07-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: L07
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo
  namespace: default
spec:
  replicas: 1077780708
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: L07
  strategy:
    rollingUpdate:
      maxSurge: 1083035120
      maxUnavailable: 1593683340
    type: 續g列Ɣ.ɳɆ+
  template:
    metadata:
      annotations:
        Af: o
        nsW4: L5nc
        qEgJ6l5Y: Jc
      creationTimestamp: null
      labels:
        2XSKh7: RHTX9zBs
        3L1V: fRaQV
        8Og: 9sewKu
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: L07
        l52wT: rKC
        o: fm
        oLa5n: tszi
    spec:
      activeDeadlineSeconds: 7426556808200361000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: 4YNPv
                operator: c:z0h+ǖ蹔璤>bȬkC«B.
                values:
                - 9jj2w
              matchFields:
              - key: m6mSFDJ
                operator: ġȻÂɾ煇鉭葬(麸9ćǖ-Ɔ0劫
                values:
                - IqPiu
              - key: ztqx
                operator: _ʞðäS撒鞏?
              - key: 5k8t5
                operator: $Xƽmxɪ]Ɯ桌o3
                values:
                - H0
            weight: 531350691
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: 356l1qk
                operator: 鎨%通8ȉ2?窛đ(ɏįíyð饽w腲ɍ
              - key: ""
                operator: 戳t樽妓m矅ǹ龎eum)猄遘擢輶醚Óå
                values:
                - e
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: Po
                  operator: ɶlJsFM揺Ðo铞ō
                - key: KxYm
                  operator: 壨kdG倫坋Z儮|檖簻Nv綥?
                matchLabels:
                  fd5Zyx83: wUQY
              matchLabelKeys:
              - WMy6R
              mismatchLabelKeys:
              - SZwHr
              - w1U
              - 8G8t6yXwo
              namespaceSelector:
                matchExpressions:
                - key: Vd
                  operator: N縏
                  values:
                  - Y8MfZ
                  - amK05
                  - pHx
                - key: iYWqou
                  operator: 'Õ掮f<ɯ)刎軲棿鴛ǝ炄兦@ȷȺ憰 '
                  values:
                  - nvX
                  - do7UW
                - key: zo9ciSv7
                  operator: ~-ɭ
                  values:
                  - C
                  - Z1c
                matchLabels:
                  "": HuJ5lU
                  3jRy: kaBE
                  shCNeEq8: 8VCDok6s
              topologyKey: KsilH6PoPPG0
            weight: 1148632629
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: bJt
                operator: f;
            matchLabelKeys:
            - FQMC
            - 6w5GHqG9N
            - POXxmlaC
            mismatchLabelKeys:
            - OOhk
            - RUJnYvl34I
            - tiTIT
            namespaceSelector: {}
            topologyKey: yaMngcwS
          - labelSelector: {}
            matchLabelKeys:
            - WErO3r
            - R1
            - 7omme
            mismatchLabelKeys:
            - wvL74
            namespaceSelector:
              matchExpressions:
              - key: 04i
                operator: 舣ŏƜ屫ǑsƢ縔hOǄ
                values:
                - 5HLbg
                - "5"
              matchLabels:
                OoGFPD: BQbNs
                WQhgu44ZdII: 2XbkPw
            namespaces:
            - KLQj21cs
            - lPKL
            topologyKey: ypOInzNz
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                sCE6zRKBM6: Nnh2
                u4ExUV2: w
                yr: wz2PC
            mismatchLabelKeys:
            - Tvv6K
            - S
            - E47R3eWM
            namespaceSelector:
              matchExpressions:
              - key: lYXfE
                operator: ""
                values:
                - b5eP3
                - 2U5L
              - key: 01i5
                operator: 癋鲏簷Ĵɂ«Ėxzé{\Ù$醝6
                values:
                - 0ZMLtwC
                - TtKO
              - key: KfpD
                operator: :ȜU闁ƥ*@Ƃ鵊ɓɃƍ柚ɾW!A抳
                values:
                - ONi
              matchLabels:
                "": 0yku
            namespaces:
            - uU
            topologyKey: 6AS
          - labelSelector:
              matchExpressions:
              - key: UX8
                operator: =g>ȚʋI楚UȁȩhɎô稞Ţɾ
                values:
                - wMSQ7pJHieM
                - a8
              matchLabels:
                cXg: PQX2vPSKR
                xAxD7: s2NdT
            mismatchLabelKeys:
            - 8o
            - GqWJ07b
            - orc
            namespaceSelector:
              matchLabels:
                "5": 8u8tWkV
                ksLu7e: DJyLZOeGIG
            namespaces:
            - mWMme
            - OkpN4
            - zCJ3
            topologyKey: mH2Koq
          - labelSelector:
              matchExpressions:
              - key: VHW
                operator: 妻
              matchLabels:
                "": l0im5GY
                HiOR: itM
            mismatchLabelKeys:
            - PEnC
            - W
            namespaceSelector:
              matchExpressions:
              - key: TBroOcL4
                operator: ʧÏƽ娲屃o´陴CȺČ½駇爮D
                values:
                - Xw
                - Sm
              matchLabels:
                OdRD: "8"
                W2: m2po
            namespaces:
            - 168ZXg
            topologyKey: oEYq
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: MxYHsvk3O:tr
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 751
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 167
          periodSeconds: 599
          successThreshold: 902
          terminationGracePeriodSeconds: 187
          timeoutSeconds: 755
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 601
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 621
          periodSeconds: 191
          successThreshold: 703
          terminationGracePeriodSeconds: 320
          timeoutSeconds: 236
        resources:
          limits:
            cpu: "979"
            memory: "649"
          requests:
            cpu: "589"
            memory: "772"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - FNqDGX
        - eMXTC
        options:
        - name: k
          value: "y"
        - name: BKaHiRyOuIJ
          value: Pec
        - name: vrbJ7
          value: vS
        searches:
        - QmwrWFmwT5
        - "1"
      dnsPolicy: 匵Hêèǟ嬀ś珡9ɣ颒仳&źEî
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - qc
        - EsiahLF
        - ""
        ip: Od94GJ
      hostNetwork: true
      hostPID: true
      hostUsers: true
      hostname: nX59cJ7Q1
      imagePullSecrets:
      - name: 1ey
      - name: xc1
      initContainers: []
      nodeName: wzDYEmoHf
      nodeSelector:
        "": fqW
        6cwd518: vDr5
        SRqdM: "n"
      preemptionPolicy: Ĳ@Əŧɘ
      priority: -68369161
      priorityClassName: Usu
      resourceClaims:
      - name: za
        source:
          resourceClaimName: RfNC6
          resourceClaimTemplateName: djsDs
      - name: 2B8jAE
        source:
          resourceClaimName: ""
          resourceClaimTemplateName: kGHx27tPmO
      restartPolicy: $ɦz豭¹ľ*贲ŕ饽
      runtimeClassName: 2nrZ
      schedulerName: e0h
      schedulingGates:
      - name: tC
      - name: 3VNu
      securityContext:
        fsGroup: 8760724915021653000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -7117884882793934000
        runAsNonRoot: false
        runAsUser: 93401498521963710
        supplementalGroups:
        - 6515785209000024000
        sysctls:
        - name: UbiWP1Qy
          value: 92c0
      serviceAccountName: B
      setHostnameAsFQDN: true
      subdomain: He
      terminationGracePeriodSeconds: -3790827313059005000
      tolerations:
      - effect: y篃b=ɠiP鞔仄
        key: BcPi3U
        operator: 琦
        tolerationSeconds: 7300458800534152000
        value: EqJYLF
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: JaxhC
            operator: G¾'梍<ɿ-g隆勚
          - key: Tg23Dy
            operator: 鱬餼剭xYȭ舐Ȅ婜頓^>ǾMH@ƌ
            values:
            - r
            - zR
          - key: Q0q6KDuUA1A
            operator: ĵ[GĆǓɠpǞ
            values:
            - bwz
            - v
          matchLabels:
            GXa: lz6itoOFa
        maxSkew: -1518162657
        minDomains: 1464511912
        nodeAffinityPolicy: Tȏ0呍ƙcɥK;á}^蔱ƽ鼼膘鰥
        nodeTaintsPolicy: '!ȢǊ穗勊ƨZǊŌǉC黇崶'
        topologyKey: BKxJdiei4
        whenUnsatisfiable: Bt髩;Ǘ乼ą仔À縍找祡
      - labelSelector:
          matchExpressions:
          - key: jO0waM
            operator: ƻ渎áh鿒ʐT燁Ȱŉʃ)Ŭ
            values:
            - ak4c
          - key: WHbCk
            operator: i挘枚.H苅黵彄Ʌɱ¦w轎ȤĊlʅ&ɦ
            values:
            - HFZw4g
            - 0yGnEPt
            - nMy3
          - key: gtgv2tJx
            operator: 鏖-
            values:
            - D2j
          matchLabels:
            4IEJ: dxBx
            Qq: HC5nG1B2
        matchLabelKeys:
        - id7
        - ZB
        maxSkew: 1631460802
        minDomains: -1455938103
        nodeAffinityPolicy: ÛĊc剖#OÛæ啰薖rK0侽ȓ戃Y®
        nodeTaintsPolicy: Æ怅Ċ-Ȕ硱AohȠWb&躶伭轿ɒ§朩
        topologyKey: ""
        whenUnsatisfiable: Ǩ1ļ/礷杏UÊ慉1殹ʡłƳ肷y断阩Ķ
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: Y2CEr
      - name: yus
      - name: zb
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - L07-webhook-service.default.svc
  - L07-webhook-service.default.svc.o
  issuerRef:
    kind: Issuer
    name: Wo-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: Y2CEr
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: Wo-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: L07-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    2Kv4rY7: ihBdOLL
  creationTimestamp: null
  labels:
    DZeu: yUBayuz
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: L07
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    nI2ZSs: 4AI8h
  name: Wo-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      DZeu: yUBayuz
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: L07
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
      nI2ZSs: 4AI8h
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: Wo-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: L07-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: drBf
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-091.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    L1Wi1Vv: trqviAw
    arzbYiweWtKdUO: e
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: 7QeW
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 2g21wLfvha
    health:
      healthProbeBindAddress: M
    kind: hF
    leaderElection:
      leaderElect: false
      resourceName: ZaKPCipuSAF
    metrics:
      bindAddress: fpiHY
    webhook:
      port: 288
kind: ConfigMap
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: w-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: w-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: w
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: w
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: w
subjects:
- kind: ServiceAccount
  name: 7QeW
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: w-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: w
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: w-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: w-election-role
subjects:
- kind: ServiceAccount
  name: 7QeW
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: w
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: w
subjects:
- kind: ServiceAccount
  name: 7QeW
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: w-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: MK
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: MK-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: MK
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: w
  namespace: default
spec:
  replicas: 465956058
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: MK
  strategy:
    rollingUpdate:
      maxSurge: 114116698
      maxUnavailable: 1318520614
    type: RollingUpdate
  template:
    metadata:
      annotations:
        b: ""
        og: TTk
        w: Ec1C5ZYz
      creationTimestamp: null
      labels:
        "": 1u
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: MK
        rC: NsL
        zMPbD3oC9e: "78"
    spec:
      activeDeadlineSeconds: -1714400685903453000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: wT
                operator: ¬Ǡİ
                values:
                - K8zVs6
                - OiW9rn
                - NSB50
              - key: xJD
                operator: 匽rȼ&鉘ǢȽ@杊bµ£薏楽敬踵Ȕ}矁
                values:
                - AnJdD
              matchFields:
              - key: kDJ
                operator: 轈塍懿鳛FĽǏ翼×鉁ca
                values:
                - 9HbNE
                - WbS9R0Io7lh8
                - ""
              - key: 19V7X
                operator: Z懲豝玗鸚ŝ
                values:
                - Wgt
                - VAiR3yri
                - Mv4ZYnRW
            weight: -1575671648
          - preference:
              matchExpressions:
              - key: GclSjduBY
                operator: 許宆柑Ŀ%
                values:
                - A
              matchFields:
              - key: JSUjCW
                operator: 迿YóÕP碋^ƛ県B故p¹ɴǒ
                values:
                - NYS
                - H5WI8
                - 80DCQFaVvMUZ
              - key: FrjwMk
                operator: 5]
              - key: ""
                operator: ),2C
                values:
                - Dr
                - Utrrr
                - XO
            weight: 358541297
          - preference:
              matchExpressions:
              - key: ap
                operator: 碸`檄E隅ìXkÍǜ?投|EN覯Ȃ抢
              - key: vRZs5
                operator: s|,
              - key: dQtdl
                operator: 礫
                values:
                - H
                - Ngxjd2J
                - zLKiCr632U
              matchFields:
              - key: lcT
                operator: h`ñƞ柳ʨļ惜rŗ湫
              - key: 2CoC40
                operator: ',''ɛ惖ØtŴ氲_Ĥ'
                values:
                - qzkngYp7
            weight: 1573697926
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: iqEK
                operator: ""
                values:
                - BnEmj
                - Pu
                - Yl7
              - key: xHJ
                operator: GŸɊț魁O­
                values:
                - ebQ
                - iZ6
                - SnW5FIj7WT4
              matchFields:
              - key: T6TMAw1
                operator: 幔Ɛ諌ȕ\ǫVƯ
              - key: DIQvo1
                operator: 誘殀世=~­7Ĉ啮êB
                values:
                - 11FTC
                - 4cBApZ
              - key: W
                operator: kø綘荦别鬁ɽKȒ^ʡy
                values:
                - 0lb
                - iKxZOBh
                - jrY3DM5
            - matchExpressions:
              - key: EpMu0d
                operator: ȷ晻f蕏l喽gd穁27ʤ=6
                values:
                - tI8ubj
                - e3MpfKkXN
              - key: dsp6SlP
                operator: 攟Ʃ肛櫃ǿ毶đ導`ƞ賷q彝ǖģ
                values:
                - 1zU
                - 8E
              matchFields:
              - key: DoXLSFX
                operator: e戄ɷ
                values:
                - SFVnaP4
              - key: pSlK
                operator: ßĔ
                values:
                - GnUUD3Kyfwg
                - 93NU5k
              - key: LOXYaRMex
                operator: ßɜ(蚄罺Ĕ撌癲柃XGL瀺Ⱦ
                values:
                - 8nbcJ7z3
                - iOH53FU
                - gTbKoNIUO
            - matchExpressions:
              - key: x
                operator: ȓ6°ȓɍ{@懭aDǐ靲鋲ș枤k
                values:
                - zE
              - key: p9Qx3FpXwt
                operator: gJǁƎOǄɗ"ß
              matchFields:
              - key: 3rQOU
                operator: Ÿ惞ȟɝ,ɝȟ
                values:
                - iW6
                - ay
                - zj
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: dU6OlTc
                  operator: Éƀ簈焈凧偍u嫈
                  values:
                  - 5oY9y
                  - pI9
                matchLabels:
                  BhzF2R7y: awLd
                  Fe356q0RV: uCVBS
                  pqTa: CNZsT
              matchLabelKeys:
              - 93D
              mismatchLabelKeys:
              - nzWkLm6n8lH
              - gKn
              - xskOFuW5h
              namespaceSelector:
                matchExpressions:
                - key: oFAencrI
                  operator: 筢 P ȶ2銍条纫
                  values:
                  - t
                  - ""
                - key: aJGJ6
                  operator: ""
                matchLabels:
                  d: b7X2
                  owpA28: rcy
                  v: PUZxD1d
              namespaces:
              - WHo6n7
              topologyKey: bvEpADM
            weight: 1226445040
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: 5cV11ykE2n
                  operator: čǗ\ƍ椠/+緤ïɚl嚶Ƨ?ȷ9薷韼
                - key: Ey8lEo0
                  operator: ɇƻm瞤%ʂ
                  values:
                  - Bk
                - key: QpOW
                  operator: 5ǸlØɱz髪yƤ諽5裵3龽3|W
                matchLabels:
                  "": WFBa19zDl
                  UaEG9BtE: SyTK7uXmk
              mismatchLabelKeys:
              - JGD5a
              - ILrnAt
              namespaceSelector:
                matchExpressions:
                - key: nY6
                  operator: '*:Ž漡÷ɅɥƑ竼漛àĸ'
                  values:
                  - "31"
                  - lnT
                  - Uy
                - key: NLmeQg3Y
                  operator: Á,ǟ芛冟昢ř7
                matchLabels:
                  vO: TAoy2
              namespaces:
              - GPcfE
              - KTNCRWxAgg
              topologyKey: 0yYmj1xk
            weight: -197811464
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: AzMtKeOS
                  operator: ƹʮ敳盗)-E7"ǰ莱Ə帗5櫮
                  values:
                  - yFqc
                - key: rTymvATFQX
                  operator: ZEʫɑƑWǔŤ阸糴\濥ȝ{ǭG
                  values:
                  - 2zL7b1cn
                  - IKN8
                - key: WL7P9y
                  operator: '}2j饚Ȝ-V貣$ǆsoơĽ'
                  values:
                  - vyzptrSDQ
                matchLabels:
                  T: AFZwOi
                  omxkx50: F
              matchLabelKeys:
              - aAm
              mismatchLabelKeys:
              - coHImv
              - 6qfwr
              - kTRU
              namespaceSelector:
                matchExpressions:
                - key: ZF4
                  operator: ʇ志祏鶜
                  values:
                  - goksXlnx26ii
              namespaces:
              - XwnZ
              - oZedscASIS
              topologyKey: WJOleyoe9AilS
            weight: -1949722643
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                "": K
                ekEjzFJABpF: nTd5kM
                ga: zBY9Zw
            matchLabelKeys:
            - ndb
            - kyV41U
            mismatchLabelKeys:
            - RZhrX
            - WsnXDwJs
            namespaceSelector:
              matchExpressions:
              - key: EC9dNce7
                operator: ­XʄǕ
                values:
                - 4uelgr
                - RY47
              - key: YKBtnp
                operator: Ľȿ8ŧ`
              matchLabels:
                Yv3Ec: "767"
            namespaces:
            - Uh
            - TmlA4
            topologyKey: LTB
          - labelSelector:
              matchExpressions:
              - key: LZMZwu8c1
                operator: 宾ɯ
                values:
                - 4VUoI
                - qgTyUz
              - key: Pn4
                operator: Ŀɫ濖Q頩ěȩƐ!唋\
                values:
                - pzD5Q
                - pAz
                - aTUO0D
            namespaceSelector:
              matchExpressions:
              - key: H6rFVua
                operator: 唗
                values:
                - oXdmC
                - YBB
                - jWtX
              - key: "0"
                operator: ""
                values:
                - x7
            namespaces:
            - lPMp
            topologyKey: RRm1TlG9U
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - oMtn
        - Q
        - 3z6Z0vrvjWuC
        command:
        - /manager
        env: []
        image: zZLbhNE:lWf3R8lv
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 693
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 775
          periodSeconds: 140
          successThreshold: 898
          terminationGracePeriodSeconds: 893
          timeoutSeconds: 373
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 772
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 542
          periodSeconds: 202
          successThreshold: 25
          terminationGracePeriodSeconds: 51
          timeoutSeconds: 467
        resources:
          limits:
            cpu: "355"
            memory: "848"
          requests:
            cpu: "654"
            memory: "528"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - ""
        - wGa
        - cbD6vx
        searches:
        - WT3ga
        - BMNWNT
      dnsPolicy: ɺ甾&çɬʝ洳
      enableServiceLinks: true
      ephemeralContainers: null
      hostNetwork: true
      hostUsers: true
      hostname: sAG
      imagePullSecrets:
      - name: l
      - name: wZ
      initContainers: []
      nodeName: btGPq
      nodeSelector:
        1j: XVI1ow
        L: 4vYfc1B
        gcrub: N4XDel
      preemptionPolicy: ƣ@j箹ņkxĜŜY蘈捤UR萯ɋ繒面
      priority: -648803911
      priorityClassName: 9ayqBWp
      readinessGates:
      - conditionType: 9O?H筩愸ƚ
      resourceClaims:
      - name: grLm6
        source:
          resourceClaimName: 4GcgO
          resourceClaimTemplateName: ys
      - name: WmLc
        source:
          resourceClaimName: qeJLvH
          resourceClaimTemplateName: aoLUqjT
      restartPolicy: ʀŲ帰養Ę盀庶涶ſ蘷黋{羐í%ɤƛŅ笱
      runtimeClassName: e
      schedulerName: ZJBO6zBd70
      schedulingGates:
      - name: vRoMM
      - name: bkvQxgtg
      - name: g55
      securityContext:
        fsGroup: 9036213274773337000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -4181610202844855300
        runAsNonRoot: true
        runAsUser: 3208304726385965000
        supplementalGroups:
        - -4886089164957959000
        - -7700939358399440000
        - 778039103595347000
        sysctls:
        - name: cCfV
          value: lY
      serviceAccountName: YJp
      setHostnameAsFQDN: false
      subdomain: 6ezP
      terminationGracePeriodSeconds: 8674922963466259000
      tolerations:
      - effect: Ŝ弋ǿ'ȪǹB壮蛵"ò憇!IɧĪ
        key: UBue0C
        operator: ŶƉc壋仉é
        tolerationSeconds: 2544005659124591600
        value: 8KbM
      - effect: +鳷L92.``ʯ鐸
        key: q
        operator: ',H'
        tolerationSeconds: 340853087111583100
        value: DG4bCMspM3cC
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: j4on6hLt
            operator: Ɇ泄2)翀QPk枾虭R
          - key: vLFYlvjI4
            operator: ȃPʫÓ¾ƃē.ɮʀ
            values:
            - ""
            - JTIuTIpxEX6
          matchLabels:
            "": nlKLp
            0vL: rB28X
            nM9J: 4MiZ23
        matchLabelKeys:
        - zSNRqjI
        - PPHN
        - 9cbd1s
        maxSkew: -1182862367
        minDomains: -1147199766
        nodeAffinityPolicy: Ì7C衿
        nodeTaintsPolicy: Ȫ白澠Ǭɖ4ƙȔTɴƅt轇ŝ峮ťLĒ竑
        topologyKey: 3ZAQ3zLPLaDHQa
        whenUnsatisfiable: 竺剅¤1]Ő_ĲKǄ勦
      - labelSelector:
          matchLabels:
            nnmbVf: zS
        matchLabelKeys:
        - 5ZZi
        - oM8BDL
        - KIAllk7m1
        maxSkew: -1740710177
        minDomains: 70262932
        nodeAffinityPolicy: 霵»(Ǧ=|ʦ
        nodeTaintsPolicy: 鐧4ɧȞ昕稚獂祭緓{立詼霫鶉Ɯ
        topologyKey: Tj
        whenUnsatisfiable: 鎥ɄƁ:呰ıįL+ef
      - labelSelector:
          matchExpressions:
          - key: 4HXx2h9w0e
            operator: ŠƼ鹴2Â
            values:
            - "3"
          - key: S59C23AuYL
            operator: E{ǽ
            values:
            - CpLhWj
            - cz
          matchLabels:
            OjRs: e
        maxSkew: 719914443
        minDomains: 1945209038
        nodeAffinityPolicy: 绽'ɔ睓嶵A蠫ŵ折Ĥ蝳鵽µ扶哭軉q
        nodeTaintsPolicy: ',ǿð騏ǫż+ű'
        topologyKey: P7V1U
        whenUnsatisfiable: 觽o5
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: Nl5My
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - MK-webhook-service.default.svc
  - MK-webhook-service.default.svc.1Sdc1S8Vj
  issuerRef:
    kind: Issuer
    name: w-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: Nl5My
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: w-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: w-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: MK-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    Y6pF: 16c
    qjH: CdtB5
    sseemE: EObsGst
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MK
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    t: W
    wH2b: ""
  name: w-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: MK
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
      t: W
      wH2b: ""
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: w-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: MK-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 7QeW
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-092.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    Hs8Cfsf: SbOxXEt
  creationTimestamp: null
  labels:
    GvLRN: sCR
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qv3g
    app.kubernetes.io/version: v2.3.8-24.3.6
    gi: 9j2
    helm.sh/chart: operator-v2.3.8-24.3.6
    zb8lDT9V: olwEfoWZ
  name: LjYLOL6C
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: AyCq0rx4
    health:
      healthProbeBindAddress: hEh
    kind: jC3houv
    leaderElection:
      leaderElect: false
      resourceName: 4wmsG
    metrics:
      bindAddress: Po1Kv7
    webhook:
      port: 309
kind: ConfigMap
metadata:
  annotations:
    9LGf5lZUJKBVgzZ: YR
    syzBd0: yol8
  creationTimestamp: null
  labels:
    GvLRN: sCR
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qv3g
    app.kubernetes.io/version: v2.3.8-24.3.6
    gi: 9j2
    helm.sh/chart: operator-v2.3.8-24.3.6
    zb8lDT9V: olwEfoWZ
  name: f3nfwQai-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    9LGf5lZUJKBVgzZ: YR
    syzBd0: yol8
  creationTimestamp: null
  labels:
    GvLRN: sCR
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qv3g
    app.kubernetes.io/version: v2.3.8-24.3.6
    gi: 9j2
    helm.sh/chart: operator-v2.3.8-24.3.6
    zb8lDT9V: olwEfoWZ
  name: f3nfwQai-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: qv3g
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    9LGf5lZUJKBVgzZ: YR
    syzBd0: yol8
  creationTimestamp: null
  labels:
    GvLRN: sCR
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qv3g
    app.kubernetes.io/version: v2.3.8-24.3.6
    gi: 9j2
    helm.sh/chart: operator-v2.3.8-24.3.6
    zb8lDT9V: olwEfoWZ
  name: qv3g-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: qv3g
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    9LGf5lZUJKBVgzZ: YR
    syzBd0: yol8
  creationTimestamp: null
  labels:
    GvLRN: sCR
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qv3g
    app.kubernetes.io/version: v2.3.8-24.3.6
    gi: 9j2
    helm.sh/chart: operator-v2.3.8-24.3.6
    zb8lDT9V: olwEfoWZ
  name: f3nfwQai
  namespace: default
spec:
  replicas: -640359018
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: qv3g
  strategy:
    rollingUpdate:
      maxSurge: 271259276
      maxUnavailable: 434662353
    type: 8ǋ"^ȨiĠ煆鱥邵Sǆz6
  template:
    metadata:
      annotations:
        0MHGObJ: 3swt
        72goJNc: T3kiEhZ0c
        aeP0Xjf: BEhxl
        x: y395
      creationTimestamp: null
      labels:
        Ez65gbl: FkifNNg
        ST: noxhcU3w
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: qv3g
    spec:
      activeDeadlineSeconds: 1283089350938494200
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: Hyf
                operator: ȸ珖řb»鸤
                values:
                - hBcM96l
              - key: VbE
                operator: ǻ駉
                values:
                - BJobX
              matchFields:
              - key: 5zN3
                operator: TiǦ}qªɋ\ʫ缗sn釣鄉霧
                values:
                - a
                - xJGrL
                - sH
              - key: h2khTpu1
                operator: 豷
                values:
                - TgE3T28e2xM
                - 8X
              - key: 1lewW9
                operator: 収?'ƣ倔aF
                values:
                - 81vaIczUOh
            weight: 1392185488
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: 7s2CI
                operator: ÍȦ待úɬ葭ʒ
              - key: HILp27o
                operator: 怀媲ÉƗ紌遼W绑ǊR
                values:
                - nZjMm5xOjT
                - 1srsB
                - 8JbslUta
              - key: eURCi4
                operator: ""
                values:
                - UaRk7gAPblI
                - b6j0RwC
              matchFields:
              - key: Pzytt7e
                operator: '''r殍ƹG讗Ö汓邬靆ǝŮ'
                values:
                - 0MKfN
              - key: adCfSY
                operator: '!'
                values:
                - D3J
                - PV2Rk29dyvs
                - xN4ClC
        podAffinity: {}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: 92qa
                  operator: ' 碖'
                  values:
                  - 8kt4
                  - t2zwPqJT7B2
                - key: w2uZ
                  operator: 鱧毛o}ɩ7ã1锽楰脼nMl
                  values:
                  - ui
                - key: 3e
                  operator: 鐭瀱p媱齷Sĩ漜áʙ-sɴʔȠ»遤
                  values:
                  - 4KW
                  - 3SfR2ZTdr5
                  - Gr
                matchLabels:
                  NYpePV: ""
              matchLabelKeys:
              - vbEhwb
              mismatchLabelKeys:
              - c
              - siyP1i
              namespaceSelector:
                matchExpressions:
                - key: 46YU
                  operator: 瞮@
                  values:
                  - 0t
                  - Tsm
                  - UHZEqL2WN
                - key: 2TgUz
                  operator: Ŗ]茏 2琥嶉>j
                  values:
                  - NtFw
                  - c8ocx6
                matchLabels:
                  Xd: RBMRgt
                  fB5VVZRnFNF: Ch5hN9u
              topologyKey: Gdjao5d
            weight: 1863276625
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: En
                  operator: Ē芾4ȠǪb(ėWáVƂ泅喂Ȩ旞
                  values:
                  - 6fe
                - key: rLrYr
                  operator: 9蜚ă#Ƨ蠯ǋ羖笷篑Ū
                - key: FaCGY7
                  operator: 3痯Ɨ<苺-Ȅ歑ʡ
              matchLabelKeys:
              - RXoII
              - MM
              - T7DSb1C
              namespaceSelector:
                matchExpressions:
                - key: v
                  operator: 匟oƁ
                  values:
                  - NqF
                matchLabels:
                  lYQfuaC: et1FOhjB6u0bn
              topologyKey: 2DrH
            weight: -72563172
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: WYvcZ
                  operator: ±ƫU諴B
                  values:
                  - sVGIg93D
                matchLabels:
                  jVjdQMRjClk: 7yWJ
              mismatchLabelKeys:
              - 2nB
              - zks8
              - K0kGATK1f
              namespaceSelector:
                matchLabels:
                  RP7sq: qPxpKFpXpqj1y
              namespaces:
              - SYk38bH
              - ZzryZH
              - RmkISjQ
              topologyKey: tijSyG
            weight: 1559885295
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: lsCmzZ
                operator: 9<ÞĚC膈摅űƨʜƉ訪ƕ主Ƭ
              matchLabels:
                14zlKzVn0HhY: ""
            matchLabelKeys:
            - oWA1G
            - 6prHp9Q
            mismatchLabelKeys:
            - FM
            - aAVExkvDNy
            - eaVvyBfoE
            namespaceSelector:
              matchExpressions:
              - key: 53Nk066h
                operator: N6K勖v夤?6ń瞩&
              - key: 1THOSy
                operator: ËĜȣ釓ï扻9浓D礌
                values:
                - aqLudQ
              matchLabels:
                F: fuxu
                IwcO: 2IzN2XSxxoK
            namespaces:
            - h
            - gr4pab4sPh
            topologyKey: QiOfKmkr7
          - labelSelector:
              matchExpressions:
              - key: 0ww
                operator: ""
                values:
                - btwHX
              matchLabels:
                TRx: tMVTwhtem
                bW: TN8KWOD
                h4: BP
            matchLabelKeys:
            - whE630QW
            - QEbQ929uIHgP
            mismatchLabelKeys:
            - Bb38
            namespaceSelector:
              matchExpressions:
              - key: eB
                operator: KĞ<7I鈺琫w=>掷瀿慅®[
                values:
                - CPT1QEsYs
                - VAt
                - s
              - key: 8IgFJ
                operator: ¥氎裰}WL
                values:
                - Cly8CZuj9
                - IkiN
              - key: bJjoTw8H
                operator: '>w絀8ÎQ!珳=ŎBđƢ'
                values:
                - xEUM
                - A0ntQcf6J012e
                - ZFsEi4
              matchLabels:
                Jv: v
                mE8A: 0SLIrs
            namespaces:
            - hDkSA
            - miWLozihw
            topologyKey: BT
          - labelSelector:
              matchExpressions:
              - key: TFwaHQ
                operator: 佝
                values:
                - XS7VdS2jiB5iJ1
                - dkr
                - CvQohLd
              matchLabels:
                ROMUu: RziG
                lfCj: LL
            mismatchLabelKeys:
            - e1sxrTk
            namespaceSelector:
              matchExpressions:
              - key: J2
                operator: '''圢揿辔>裉ĈM怔ğȶ乲ǑǙB'
                values:
                - BhbfW
                - Rapg6wcFsFY
              - key: Q4sx
                operator: Ĕrœ膯J騑1櫣fn轾v
                values:
                - l7yQI
                - Gd
                - 7qhas45TT
              - key: E
                operator: 瞳y
                values:
                - zHyUNJ
                - e
              matchLabels:
                A1aTpjMJ: DR4Q1G
                a9vAgM3: r4Q1jQTko
                iL: ZScBjRtF
            namespaces:
            - UB
            - Y6
            topologyKey: H8
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - IoP
        - oEPSF
        - w659VcIIlO
        command:
        - /manager
        env: []
        image: 6C:EyNNr90u1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 42
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 33
          periodSeconds: 217
          successThreshold: 427
          terminationGracePeriodSeconds: 585
          timeoutSeconds: 793
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 750
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 888
          periodSeconds: 672
          successThreshold: 953
          terminationGracePeriodSeconds: 179
          timeoutSeconds: 755
        resources:
          limits:
            cpu: "840"
            memory: "687"
          requests:
            cpu: "213"
            memory: "914"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        options:
        - name: rHF
          value: wbVPx
        searches:
        - Z
        - YhcoeKtk8
      dnsPolicy: ƣƉ魔睡t>-
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - Sf55kgu
        - V
        ip: 8EIGmw
      hostIPC: true
      hostNetwork: true
      hostPID: true
      hostUsers: true
      hostname: SyS
      imagePullSecrets:
      - name: B8MH
      - name: MpD9S4
      initContainers: []
      nodeName: 8xSS
      nodeSelector:
        8bS: HvFyOVS
        BvjBFrbwA: 9PmXSzNC
        NX68EWwX: v2ca6I
        S: QgAVakORL
        hPM5u6oyVr5Q: NILGBGR
      preemptionPolicy: Uy
      priority: -383467081
      priorityClassName: Zq
      readinessGates:
      - conditionType: ʠ倈髈[±9G¯Ć鰹MɨĨB¬9
      - conditionType: 态橳X]瓢Ľ瀍<ɠʃ殽#Ŷ
      resourceClaims:
      - name: 02puRm0TM
        source:
          resourceClaimName: 8KaSS
          resourceClaimTemplateName: e9W
      - name: bzvM2
        source:
          resourceClaimName: 1EE9dLMoYR
          resourceClaimTemplateName: ""
      restartPolicy: 鶳PƖjƻuȭɧ眊çĞ1選ɞ档Ĉ
      runtimeClassName: sO51e
      schedulerName: 9o
      schedulingGates:
      - name: tWpVV
      - name: Mh
      securityContext:
        fsGroup: 3798983524639040500
        fsGroupChangePolicy: Always
        runAsGroup: -1601124087103919000
        runAsNonRoot: false
        runAsUser: -982536854129911900
        supplementalGroups:
        - 6537418073124356000
        sysctls:
        - name: O
          value: hq
      serviceAccountName: ePC
      setHostnameAsFQDN: false
      shareProcessNamespace: true
      subdomain: Qm1ULdBq
      terminationGracePeriodSeconds: 5823482532669229000
      tolerations:
      - effect: Ņ玿琀螺窖凐>梾'əǃ
        key: U5tT7c8Z
        operator: :"_Ʀ$赡2/哓4霻蔙z貖
        tolerationSeconds: 1686643156274961400
        value: U
      - effect: Ś紇#²'窳ŃE楼ʌ繄Ĳň=煸\
        key: 3S
        operator: ǾɄš&ɥ
        tolerationSeconds: -1023764199846933900
        value: rztGBGzB7O
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: 0LVYyK7
            operator: 骽燔iP
            values:
            - EFe0Ex
          - key: okGzu
            operator: r鲟n缼À
            values:
            - zpDHv
          - key: aO1
            operator: ɟ
            values:
            - vOdcIx8L8
          matchLabels:
            CLm: ""
        maxSkew: 446998704
        minDomains: -1084918344
        nodeAffinityPolicy: '}{õäȕ试瞁潬s攍mƸď'
        nodeTaintsPolicy: 'ȿ灛暚ǀ藌p竒z '
        topologyKey: UOrE2qa
        whenUnsatisfiable: sDIÉr鱵Ǘ
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: KDzi
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    9LGf5lZUJKBVgzZ: YR
    syzBd0: yol8
  creationTimestamp: null
  labels:
    GvLRN: sCR
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qv3g
    app.kubernetes.io/version: v2.3.8-24.3.6
    gi: 9j2
    helm.sh/chart: operator-v2.3.8-24.3.6
    zb8lDT9V: olwEfoWZ
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - qv3g-webhook-service.default.svc
  - qv3g-webhook-service.default.svc.AVM6O
  issuerRef:
    kind: Issuer
    name: f3nfwQai-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: KDzi
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    9LGf5lZUJKBVgzZ: YR
    syzBd0: yol8
  creationTimestamp: null
  labels:
    GvLRN: sCR
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qv3g
    app.kubernetes.io/version: v2.3.8-24.3.6
    gi: 9j2
    helm.sh/chart: operator-v2.3.8-24.3.6
    zb8lDT9V: olwEfoWZ
  name: f3nfwQai-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: f3nfwQai-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: qv3g-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    9LGf5lZUJKBVgzZ: YR
    syzBd0: yol8
  creationTimestamp: null
  labels:
    GvLRN: sCR
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: qv3g
    app.kubernetes.io/version: v2.3.8-24.3.6
    gi: 9j2
    helm.sh/chart: operator-v2.3.8-24.3.6
    zb8lDT9V: olwEfoWZ
  name: f3nfwQai-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      GvLRN: sCR
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: qv3g
      app.kubernetes.io/version: v2.3.8-24.3.6
      gi: 9j2
      helm.sh/chart: operator-v2.3.8-24.3.6
      zb8lDT9V: olwEfoWZ
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: f3nfwQai-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: qv3g-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: LjYLOL6C
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-093.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: J2qRpt9
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: CGxTpM
    health:
      healthProbeBindAddress: ""
    kind: DV1a
    leaderElection:
      leaderElect: false
      resourceName: ENC2EL
    metrics:
      bindAddress: cpGulJEUfUy
    webhook:
      port: 132
kind: ConfigMap
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: KXsg6
subjects:
- kind: ServiceAccount
  name: J2qRpt9
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: KXsg6-election-role
subjects:
- kind: ServiceAccount
  name: J2qRpt9
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: KXsg6
subjects:
- kind: ServiceAccount
  name: J2qRpt9
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: KXsg6-rpk-bundle
subjects:
- kind: ServiceAccount
  name: J2qRpt9
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Tlv
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Tlv-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: Tlv
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6
  namespace: default
spec:
  replicas: -1993597595
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: Tlv
  strategy:
    rollingUpdate:
      maxSurge: 1765614033
      maxUnavailable: 577102752
    type: RollingUpdate
  template:
    metadata:
      annotations:
        E: MGTsek
      creationTimestamp: null
      labels:
        0B90: DS2
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: Tlv
        iL23T6g: i3UAi0
        omBc4D: z
    spec:
      activeDeadlineSeconds: 7174288372376315000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchFields:
              - key: q6Pr3z4Mzca
                operator: xʧ蟳lʯ`8@wɝå瘑ğ1üq檞
                values:
                - jGsIQc2o
                - r
                - EqBS
              - key: aNGtuo2
                operator: À%ʐ)B
                values:
                - PcSAPwFBU
                - qyyrGDmd3
                - Dnu1u
            weight: -1046930517
          - preference:
              matchExpressions:
              - key: nDu3
                operator: 幎åF烵wƿ-Y
                values:
                - XVCtIA2
              - key: 6tko
                operator: țÜġ攕m愥
                values:
                - ""
              matchFields:
              - key: cTaskfhl
                operator: '!懰à!z巀ǫ聏Ŀ洛'
                values:
                - I
                - RTUk
              - key: ""
                operator: 衸ȑ睆悢Ɗm$碍g凴
                values:
                - acgX15
                - gPPCx
              - key: JQS8dsDDW
                operator: 鍪侥逬Ɉ礢mɌ)樭ǖ鱃Ő{¿HK
                values:
                - XAFyZ
                - mDGk
            weight: -1470109753
          - preference:
              matchExpressions:
              - key: xdMof
                operator: 颇Ķó喻靌m$RŸ,ɼʙãe
              matchFields:
              - key: VIMhEo
                operator: cƁP赊.貦1歵偭d?昪1郳駘
            weight: 109100852
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: sWEgkzyWf
                operator: ɪɑɞ諠0猡Z!ƭ檒ȭ
              matchFields:
              - key: VR
                operator: ;蝆燤
              - key: Ny
                operator: 我拜襔ƜXKȨȟ栃鸬;ê0枀s
                values:
                - dSjy
              - key: Pf2poB
                operator: 馛Ɍ鐠 ǋŀȦ2瘰)脁j蒲兤ėơ!?
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: RMd6Z
                operator: ƫ盻Ë(锁C3o櫾
                values:
                - HRL
                - nzu7a
              - key: sz4k9edh18oe
                operator: 鯎
                values:
                - X436
                - 9r00YJ
                - CxtPgJ
              - key: Je7BebNY
                operator: j@牔愯¼ěľ8Ġ阱F
            matchLabelKeys:
            - yF8N
            - yn
            mismatchLabelKeys:
            - 822V
            - rdNZl
            - 5kHY
            namespaceSelector:
              matchExpressions:
              - key: a528F
                operator: 已
                values:
                - LYEJ
                - ""
              - key: MUeKVboDkPn
                operator: 驱鋐赋遻ʡo
              - key: AIL
                operator: 馕$qNƚ
            namespaces:
            - DYsdJ
            topologyKey: mb
          - labelSelector:
              matchExpressions:
              - key: ""
                operator: l3嶲ʞ=Y!+ÒƓęK蕝誴
                values:
                - ugI55WCRU
            matchLabelKeys:
            - 5NU8D
            - AeuBGXu
            - csP
            mismatchLabelKeys:
            - 5qplYNUD6w
            namespaceSelector:
              matchExpressions:
              - key: f
                operator: X坅ï
                values:
                - u
                - E2jME
              - key: B
                operator: ""
                values:
                - SfA7
              matchLabels:
                eNXuwRax: liFL
            namespaces:
            - 2RXA7U9b
            topologyKey: Lskq0l
          - labelSelector:
              matchExpressions:
              - key: 62CRwslTK1
                operator: 濍1礴
                values:
                - AREVT84
                - GoqgW
            matchLabelKeys:
            - UAILumGhD
            mismatchLabelKeys:
            - F31wTd
            namespaceSelector:
              matchExpressions:
              - key: E
                operator: Ƕƪų疛w5川fǉƖ寭
                values:
                - 7C2f
                - i3aee89gfcm
                - AE
              - key: rlLY
                operator: 胬豧Ð!跦o
                values:
                - iE
                - frIWT
                - WYkucb1C
              - key: sNqY3
                operator: 桐$蜑凷P-Ȓ玠趉T攗ʘ鏝
                values:
                - RLg75ME54
                - Ruw
                - tHp44zbHkWh
              matchLabels:
                GyWL: V7vtUB
                X: m62ibm
            namespaces:
            - 9K
            - 0TUIot
            topologyKey: kFQqQq
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: w4yYA
                  operator: 沶ŞʚũļĈ1Ʈ
                  values:
                  - jKL
                - key: 7f2P
                  operator: d訸ìě狲陝{q
                  values:
                  - Mk
                - key: ywf1CZA
                  operator: C浰Ë憾Vç噑ō>
                matchLabels:
                  6uW: hAorNoBl
              matchLabelKeys:
              - Bmsl9
              - xy
              - wokJ5Gom
              mismatchLabelKeys:
              - Yrrw
              namespaceSelector:
                matchExpressions:
                - key: QnQUFZjQA
                  operator: \
                  values:
                  - 8lrJz
                  - LWwHX
                - key: VYrp
                  operator: 篂àŸ-rs鐳轾Ȭǅ蘢
                  values:
                  - ELcYpYSC
                  - HOb
                  - B5U
                matchLabels:
                  NPE: MgO4
              namespaces:
              - ""
              - PX
              topologyKey: odLq5X2Tl
            weight: -1679674974
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - ""
        - 2BwL4Tf6d
        - LY5cEH
        command:
        - /manager
        env: []
        image: kE0AJ1:wA5XUe
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 375
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 882
          periodSeconds: 987
          successThreshold: 528
          terminationGracePeriodSeconds: 97
          timeoutSeconds: 399
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 13
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 598
          periodSeconds: 74
          successThreshold: 313
          terminationGracePeriodSeconds: 799
          timeoutSeconds: 26
        resources:
          limits:
            cpu: "281"
            memory: "944"
          requests:
            cpu: "742"
            memory: "363"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - 0l7aqP
        options:
        - name: HouI7M
          value: KbwklDr4ub9X
        - name: yPxW32ed
          value: q
      dnsPolicy: 矝ɭƱ镏&w圓p炽Ň°<ƑÝ薮謥Ƕ絴e
      ephemeralContainers: null
      hostNetwork: true
      hostPID: true
      hostUsers: false
      hostname: Z4O
      imagePullSecrets:
      - name: DQh0
      - name: W8kPWEv
      initContainers: []
      nodeName: C2To9PpO
      nodeSelector:
        GYCj: lf229d
        J: Ly6XF
        KlO6x: HRQk5
        hKAyXpZrD: rps8LOZ0
        "n": 7JH
      preemptionPolicy: (吠!睧呗ļÊK
      priority: -937002552
      priorityClassName: VWb
      restartPolicy: 2ʫǯ鵮甌
      runtimeClassName: 8UYn22
      schedulerName: kBIiMPq
      schedulingGates:
      - name: 5HaN1hN3i
      securityContext:
        fsGroup: 600852388106857900
        fsGroupChangePolicy: Always
        runAsGroup: 2551983261573605400
        runAsNonRoot: false
        runAsUser: 7889401706800922000
        supplementalGroups:
        - -5305071421925969000
        sysctls:
        - name: H
          value: "N"
      serviceAccountName: 9twRjrb4yT
      setHostnameAsFQDN: true
      shareProcessNamespace: true
      subdomain: IjJ
      terminationGracePeriodSeconds: 62214698983836060
      tolerations:
      - effect: ʐ
        key: VkA
        operator: 這蘱
        tolerationSeconds: 4441979411744754000
        value: wBjsw70
      - effect: ű敩棲%da<_&
        key: hWLzvPC
        operator: 睴墊鸛NìTF蝴崧炏ƒI=j
        tolerationSeconds: 3618647065810892300
        value: II
      - effect: xŲ5ɺ.èT湟鷯ȕÈƘp
        key: 6h
        operator: D瘈ŰY2çŬ墖Ðʀ泃2臝ưfK*
        tolerationSeconds: 6813537940048247000
        value: 0d
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            1lJ3OETG: piq4
            rFVf: Qi
        matchLabelKeys:
        - KaRc
        - li3
        maxSkew: -884623376
        minDomains: -1461178719
        nodeAffinityPolicy: 瓜胮ł阃ʈ厖ʨ
        nodeTaintsPolicy: œŐ怅秪8ķ'瞈蓹ʫ腀烘ƍ鹓掮橻*pŴ
        topologyKey: dPb2VRW
        whenUnsatisfiable: c碿Ɓ曣ì=
      - labelSelector:
          matchExpressions:
          - key: yRJip
            operator: ʣɺ圾鐍宕唾b捥pǂ衃ȹ屙屜豴ƞʟƝ]
          matchLabels:
            ivTn: Xtf9ps
        matchLabelKeys:
        - J3
        maxSkew: 2022884886
        minDomains: 370293399
        nodeAffinityPolicy: Kæ顄1Ȇų贒塡\岓;韩爢逕
        nodeTaintsPolicy: =0佱]
        topologyKey: ""
        whenUnsatisfiable: ɿ±兏錌VMOþ
      - labelSelector:
          matchExpressions:
          - key: BCzPhb
            operator: Ǧ暋
          matchLabels:
            t: kBJ
        matchLabelKeys:
        - eF7g
        maxSkew: -476399995
        minDomains: 2012120508
        nodeAffinityPolicy: 硻孻r)8Ʃ
        nodeTaintsPolicy: 磻嶼疛Ű怢蔧ĳ]b?ʮŇõɈ
        topologyKey: OcJMDNvd
        whenUnsatisfiable: 2ðɞ樀ȵ檛舼闲i
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: sSlcvPv
      - name: D
      - name: S1tN5CgpGS
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - Tlv-webhook-service.default.svc
  - Tlv-webhook-service.default.svc.rkrYVShLr
  issuerRef:
    kind: Issuer
    name: KXsg6-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: sSlcvPv
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: KXsg6-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: Tlv-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    C1ah: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: Tlv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KXsg6-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: Tlv
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: KXsg6-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: Tlv-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: J2qRpt9
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-094.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 1G
    health:
      healthProbeBindAddress: rqw
    kind: b
    leaderElection:
      leaderElect: false
      resourceName: N0V
    metrics:
      bindAddress: l9XfgCTZ
    webhook:
      port: 132
kind: ConfigMap
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: FCXrBjh-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: FCXrBjh-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: FCXrBjh
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: FCXrBjh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: FCXrBjh
subjects:
- kind: ServiceAccount
  name: 11c
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: FCXrBjh-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: FCXrBjh
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: FCXrBjh-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: FCXrBjh-election-role
subjects:
- kind: ServiceAccount
  name: 11c
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: FCXrBjh
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: FCXrBjh
subjects:
- kind: ServiceAccount
  name: 11c
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: FCXrBjh-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: DjMfg
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: DjMfg-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: DjMfg
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: FCXrBjh
  namespace: default
spec:
  replicas: 336015805
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: DjMfg
  strategy:
    rollingUpdate:
      maxSurge: 583208704
      maxUnavailable: 547870506
    type: 鉊^#ŝ狿E*侺ɭğRʝē
  template:
    metadata:
      annotations:
        7j4r: ""
        iUJakWUJQyJ: HCFA
        kwTvCI: zoeC
      creationTimestamp: null
      labels:
        ESgxffT: "7"
        KC1v: wOG
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: DjMfg
        e7SaSbbhQt: 3pRhc
    spec:
      activeDeadlineSeconds: 4312700860172301000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference: {}
            weight: -1480556469
          - preference:
              matchFields:
              - key: kVMNZ0
                operator: e
                values:
                - ZIlVGeklJl
                - wUZJY7ZL
                - VulNe
              - key: Pho
                operator: 洐敦訙頱杍齎4嚃/Ƕ跎Û揢s
                values:
                - I0l5Sd
                - "0"
            weight: 523172076
          - preference:
              matchExpressions:
              - key: ueUhTsHk
                operator: 遽rö缠Ș
                values:
                - MwOZFRUZ63
                - obx3VgYD
                - p
              - key: gI
                operator: ñÇĿ蓗ƚ廌
                values:
                - 9F6u3jcB
              - key: PyBFi7e6M4w
                operator: Iǫy倽8炾Ɗw砖ƿvʢvůĶõ角
                values:
                - d4fQGUL0qD065H
              matchFields:
              - key: lLrStODrCt
                operator: 輕ś韉^腁BLŨ龁fǅu
              - key: 6KRH
                operator: ť+ı烨
                values:
                - Yipx1H
                - GwJrv
                - 1xh
            weight: 2007599181
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms: []
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: IsZZ
                  operator: Ȑaɩ=嶸Ů揮G
                - key: X9Q
                  operator: Ąʏ偮阡
                  values:
                  - OLofN0f
                  - olGDG
                matchLabels:
                  "": Mxtg
                  C0aF: 3LAOb
              matchLabelKeys:
              - b
              mismatchLabelKeys:
              - I3oc
              namespaceSelector:
                matchExpressions:
                - key: 2K6MLe5Sij
                  operator: ""
                - key: 1q
                  operator: Ŝ敻Ū拓;`ɹơBhģ
                  values:
                  - wG
                  - s6tUVH0K1Ohs
                matchLabels:
                  UJakgFPJN: ""
              namespaces:
              - I
              - I0LC6J
              - zrjppPYN
              topologyKey: 6K9q
            weight: 576277368
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                6hFxzzpKRz: ""
                ek: S
            matchLabelKeys:
            - ""
            - Zw7HjV
            - XxezbwW
            mismatchLabelKeys:
            - JDtlaSis3
            - ByZU
            - KzvEH
            namespaceSelector:
              matchExpressions:
              - key: 00cq
                operator: Ȧ奙\9庱ʙ犬Ǚ紐ts
              - key: MDoi3pS
                operator: :攟ǙȀ搃n磣#
                values:
                - Dl1TOqSotnF
                - o1ghc
              matchLabels:
                j5z4V: E
            namespaces:
            - H0vIXY
            - AS
            - A26P4P
            topologyKey: j1
          - labelSelector:
              matchExpressions:
              - key: IQVLE
                operator: ɶ惙W@臆&Ų艧谫磷[%ɜ貃斱ïǺ1
              - key: u
                operator: S¼罊ƙ灳殜}縮矀ʋc
                values:
                - "9"
                - MzjMhYBtE
              - key: 46KT
                operator: UW腶旚硔G-úƢ4ǅɭ泒pmq涙
                values:
                - C4Lv5m
                - vy2ts1
                - KKhq6iF
              matchLabels:
                Tv: P73R
            matchLabelKeys:
            - L8dB6f
            - r
            mismatchLabelKeys:
            - ZTtJG
            namespaceSelector:
              matchExpressions:
              - key: AMsA
                operator: ""
                values:
                - ""
              matchLabels:
                elTLp: 0R0g6qN67
                j: GUZTUIx
            topologyKey: 8Boz8
          - labelSelector:
              matchLabels:
                CWH: npc
            matchLabelKeys:
            - LGgpau
            - L
            - ""
            namespaceSelector:
              matchExpressions:
              - key: pqb0mw
                operator: KA萁Ǎ飙¬#Ƀ
                values:
                - QVTLq
                - "7"
                - wNXcKivx
            namespaces:
            - 3PgpNTma
            - L0n6MznC
            - ""
            topologyKey: ""
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  0lWFZ: JTBr
                  nfPE: iQ
              matchLabelKeys:
              - YfVs
              - 6rrI4fY
              - kZFY4KtUY6
              mismatchLabelKeys:
              - vqiDDI23
              - 7As1fsWY8
              namespaceSelector:
                matchExpressions:
                - key: ""
                  operator: 遥*ʃ貉ȁ
                  values:
                  - nvcdSJIKFC
                matchLabels:
                  2OZ: C
                  ja0: 27D5g
              namespaces:
              - eu1Jt
              - trpI
              - ouNQ
              topologyKey: NM
            weight: 1545551065
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: LUEU0ybbJPC
                  operator: ɲű瘏ÞƝ瘗|ɕĀȇȍ桜
                  values:
                  - gwne
                matchLabels:
                  "": X05vdX
              matchLabelKeys:
              - ""
              - bz3
              - 8cILXOszL
              mismatchLabelKeys:
              - dRBoAj
              - IY
              namespaceSelector:
                matchExpressions:
                - key: gBFi
                  operator: 魟蠸ʯ矫R[\6ưGb噆莐
                  values:
                  - ""
                  - Mx4Rw9
                  - ""
                matchLabels:
                  5Jv: aqOMf7s
              namespaces:
              - s4TVh4n
              topologyKey: 8a3oLWzBb
            weight: 2069617429
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: L
                operator: vǤ枑r餆_唯晵+P写鮚ɩ粠
                values:
                - ""
                - Ia3C5qCZ7
              matchLabels:
                EX: O911NE
                l87: NxQB
                sPDQU: eXfPq
            matchLabelKeys:
            - 7NA
            mismatchLabelKeys:
            - 5Xqup
            - 5hDbku
            namespaceSelector:
              matchExpressions:
              - key: 9NcL
                operator: 皀Ȣ"ňň门轍鿂桀!珿匦u芢ʍ殖Ê?
              - key: O
                operator: D糁0Ǣ砪
                values:
                - mvVScWm
                - YL5
              matchLabels:
                0ZLQL: oxS
                OBBv: os9b
            namespaces:
            - ""
            - UW9NriJ
            - LREoZjeh
            topologyKey: 6ckA
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - 7G3Tgu
        - Oh
        command:
        - /manager
        env: []
        image: uzG5:PQfV4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 402
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 358
          periodSeconds: 714
          successThreshold: 0
          terminationGracePeriodSeconds: 938
          timeoutSeconds: 640
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 532
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 547
          periodSeconds: 32
          successThreshold: 721
          terminationGracePeriodSeconds: 810
          timeoutSeconds: 912
        resources:
          limits:
            cpu: "79"
            memory: "376"
          requests:
            cpu: "468"
            memory: "414"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - lFF4bR
        - WNBLqImd8Z
        options:
        - name: P6cwWXMT1mx9
          value: 0Jt1XYAF0G
        searches:
        - UW507
      dnsPolicy: 澧ȳ蹝ŀ舡Į÷徂囉ū
      ephemeralContainers: null
      hostIPC: true
      hostPID: true
      hostUsers: true
      hostname: 7UVj
      imagePullSecrets:
      - name: 6DEkd
      initContainers: []
      nodeName: pND0B
      nodeSelector:
        5MEphPPV9Q: TU8wH
        ZKrTPa: vOZnX
        cUG: ""
        zPhtPKQVA8DB: Fe
      preemptionPolicy: ""
      priority: 1616331802
      priorityClassName: 8bGWLWaS
      readinessGates:
      - conditionType: 抜ý.Qd3ʉ3恬g
      - conditionType: 0Ď盁(i尋禌囁
      - conditionType: ŧ
      resourceClaims:
      - name: bmK28GU
        source:
          resourceClaimName: ""
          resourceClaimTemplateName: jknGpi
      - name: Md9RczSC
        source:
          resourceClaimName: a
          resourceClaimTemplateName: J
      - name: vR
        source:
          resourceClaimName: TxAxhaxwmg
          resourceClaimTemplateName: aX3XI
      restartPolicy: 緊b轼钩ȃ硩qŅ-'碦y
      schedulerName: WiUOP
      securityContext:
        fsGroup: 1482652060705232400
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -8503677918205262000
        runAsNonRoot: false
        runAsUser: -7947396771839663000
        supplementalGroups:
        - 2337230613663300000
      serviceAccountName: D3Fi
      setHostnameAsFQDN: false
      subdomain: z0rSMEL
      terminationGracePeriodSeconds: -2274820483759401500
      tolerations:
      - effect: 谕{ɼthx郔Ŀ鰏y¡U啲ȉ11玭ȩ
        key: X
        operator:  novo
        tolerationSeconds: 867278555089113000
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: 2UohIse
            operator: '[À莄¦咎鵈f柫Ȇ'
            values:
            - ekZ2Cc
          - key: xEbcug
            operator: 埔ā馸+d澝ʙHǀȀdX鋪?
          matchLabels:
            1Qd7: XqQg
            lMH: q
        matchLabelKeys:
        - 359mNB
        maxSkew: 1481426489
        minDomains: 1823933433
        nodeAffinityPolicy: 0坑~ĞYɴǪɤ栘
        nodeTaintsPolicy: Ȋ8Ǽ'ȶƠɥ奐X哬ĿiȲi扶ǈ
        topologyKey: 8LMG23
        whenUnsatisfiable: ' 褼ƶÎa'
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: YLbdlLDRh
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - DjMfg-webhook-service.default.svc
  - DjMfg-webhook-service.default.svc.
  issuerRef:
    kind: Issuer
    name: FCXrBjh-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: YLbdlLDRh
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    p1R: fWL
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: DjMfg
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    oLWSEoF: Ps5P
    uO6upU7K: lMwbJ
  name: FCXrBjh-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: FCXrBjh-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: DjMfg-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: FCXrBjh-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: DjMfg-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 11c
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-095.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    "": iI7Bd
    9H7uauZ: fIw
    G1: kAPGZ
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: "02"
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: 7iYs
    health:
      healthProbeBindAddress: pG7
    kind: yss
    leaderElection:
      leaderElect: true
      resourceName: ZAL2weN
    metrics:
      bindAddress: ISgWYPuoIKL
    webhook:
      port: 492
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 02-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 02-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: "02"
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: "02"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "02"
subjects:
- kind: ServiceAccount
  name: "02"
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 02-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: "02"
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 02-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 02-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 02-election-role
subjects:
- kind: ServiceAccount
  name: "02"
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: "02"
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "02"
subjects:
- kind: ServiceAccount
  name: "02"
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 02-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 02-rpk-bundle
subjects:
- kind: ServiceAccount
  name: "02"
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 02-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: "Y"
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: Y-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: "Y"
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: "02"
  namespace: default
spec:
  replicas: 360762065
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: "Y"
  strategy:
    rollingUpdate:
      maxSurge: 735491605
      maxUnavailable: 567419297
    type: 揘ÓCDǶl魾甍7Å:桋眠
  template:
    metadata:
      annotations:
        9nuNhaa: ""
        L3Zre: xPQq
        lT9cv: ld
        w1pf: cF
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: "Y"
    spec:
      activeDeadlineSeconds: -5189798555752399000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: VEXvr
                operator: 沭麟繱迡襗=o废ǫŊîd塘Ƣ^j1
              matchFields:
              - key: gXM
                operator: ¤ƟL舷x
                values:
                - P
              - key: Eo
                operator: 鈼ũǧ娂Ǆa
                values:
                - S2
                - zeGNO
            - {}
            - matchExpressions:
              - key: roUmde69CU
                operator: XĢ
                values:
                - 3XZeDET8iN
                - yHRIidx5f
              - key: zGQRR6C
                operator: Ŗ翬O话
                values:
                - wapE
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: htJ
                  operator: '`2@(陊ʍ*$Ɯ'
                - key: bmCu
                  operator: $蛹ǚ±ôvąȂŖRə$騹"nǕ
                - key: PPqbX
                  operator: 臋裕
                  values:
                  - o7
                  - ENhqd
                  - Ycq
              matchLabelKeys:
              - Auod
              namespaceSelector:
                matchExpressions:
                - key: NqT
                  operator: '[鱝Ş馿v½諭翧u駌峂鿚蠒熱耱ȇǴŲ鲆'
                - key: kMEBL5uMoy
                  operator: 澪=旷ăT
                  values:
                  - 5kvY8
              namespaces:
              - 2q
              - aUqjio
              topologyKey: IShL
            weight: -106735637
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "4"
                operator: ìĈȶʏ炁紂Jg筽ľ濹ƪ§U%fY{l
                values:
                - 8qEmRa0O
                - ct6Y9jDs
                - 57gZlur
              matchLabels:
                "2": YfJu
                Mo0: vLH4ENxhbDse
                kvyj3T: R04qP
            matchLabelKeys:
            - gv5
            - ""
            - SSdJGtxwlbI3SZ
            mismatchLabelKeys:
            - fTxrmd
            - o6FYrVSa
            - FdoGR
            namespaceSelector:
              matchExpressions:
              - key: hfeM9T
                operator: ʜ0TƷX鑳RQɜ
              - key: MSIa
                operator: ņ-虨髾QǷ璕<»0呛詒
                values:
                - X8Fw4dn
              matchLabels:
                OkFI0: rNU
                UPGENQ: hFWvc
                xLmBtaTlV: aD8dxGbO
            namespaces:
            - e
            topologyKey: "5"
          - labelSelector:
              matchExpressions:
              - key: o6xg
                operator: DV蹰釖潲兽ʎɃ楛y鮔垙ɶ碹
              - key: 9fds5dbn
                operator: lK緀J ŷ
                values:
                - tRS6o5qbaW
                - ""
              matchLabels:
                BR7kHV: Y2
                H3bid2hq: ZZF
                jeUD9Eb8c: jv7Ob
            matchLabelKeys:
            - l
            - wc7GaKJE0
            mismatchLabelKeys:
            - D
            namespaceSelector:
              matchExpressions:
              - key: SeXXNVQ
                operator: ɠ倦r#ɕy壴xȗ癬ɍȶw瓣ßȧ儛
                values:
                - sU
                - wf9j0
                - ""
              - key: MIEY
                operator: D眻VK
                values:
                - Db
              - key: 2mLM
                operator: Ŝ鷃祘R
              matchLabels:
                7qh8Kz82NKKf0: Du8r3QTY
                NA4Bmm: GtjhcVh26
            topologyKey: VuQrDua
          - labelSelector:
              matchExpressions:
              - key: KlxXbW
                operator: Əȴ鲤6±³Ɖ睁噩NSa]|Ŗ齈鹆½
                values:
                - yR
                - 5ht
              - key: LX9A
                operator: 鳰8ÿ(bs出E
                values:
                - JWwi
                - NS7Lkp
                - 4M8O29W6uL
              matchLabels:
                WOb9: tyTuKUM
                tuF: EmqXBndw
            mismatchLabelKeys:
            - TYmbhaoXUES
            - 9PHHHC
            namespaceSelector:
              matchExpressions:
              - key: mcaeC
                operator: Ń@镱廟2ƀ炦S£¼s嬶vɮ灁G
              - key: Dol
                operator: _jƃ蓨ȫ/ïĝ`gàɇo噉:$
                values:
                - "0"
                - z5
                - JVj9WBibY
              - key: 66xP
                operator: ""
                values:
                - Qgfldp4
              matchLabels:
                2CQDCJnO: muM7iSfp98gGc
                DMEs6vF2Cx: m2gvK
            namespaces:
            - A5bL5n4
            - 3GdwXhJ
            - 5k
            topologyKey: YrsnF
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ROz4cS
                  operator: '|茿聛7ņē轅'
                - key: KcU
                  operator: 硉ÿ楖ʑAA躡@摠Ċ鮢
                  values:
                  - HVry2L
                  - QmQasM
                - key: e
                  operator: ȩċñ0获
                  values:
                  - Gs9bv0
                  - 9AcxBwT
                matchLabels:
                  Hc9ym: 7sAxb3ICrm0AGN
                  Wcs: ""
              matchLabelKeys:
              - TO
              - duOXG
              - Fu
              mismatchLabelKeys:
              - xZKoqdTwVzLBWAd
              - ES2
              - RRf
              namespaceSelector:
                matchExpressions:
                - key: yQ6
                  operator: Č犒½p7ƻ哉
                  values:
                  - QrEq8rUjBG
                  - Eaamg
                  - bHjn
                - key: 2enEH
                  operator: GNǗh為>ǝ
                  values:
                  - 8lpNjXpOK
                  - 6pbGURc
                  - JcLhc1
              namespaces:
              - jmMD
              - 1XDGscQ
              topologyKey: nBql6
            weight: -712062132
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: L
                operator: 粷
              - key: pVfmf
                operator: m 烿C)朏ŏ+?ʈ疮韽Ɓ業ĀX<ʒ
                values:
                - muA
              - key: I
                operator: '|鐱乞Ý'
                values:
                - wKLvmKP
                - UA0d
                - na
            matchLabelKeys:
            - d4bm
            namespaceSelector:
              matchExpressions:
              - key: B
                operator: Râ抢溺o<
                values:
                - DNtk1YoZ
                - 3de
                - yZB6
            namespaces:
            - mT597g
            topologyKey: tl8TD
          - labelSelector:
              matchExpressions:
              - key: x1
                operator: ı}ď[滪ĒſßǂɐW嬿d
                values:
                - ""
              matchLabels:
                S6bh4lH: ""
                u5GHCoq: 9YGP0Hm
            matchLabelKeys:
            - VqFEOh
            - v70Gh7h
            - BXbloka
            mismatchLabelKeys:
            - 1vq7
            - p48
            namespaceSelector:
              matchExpressions:
              - key: JzKKMx
                operator: 幻<ʝ^L,E彂fǬ纫柹
                values:
                - uVNC2CP
                - xIY5Eq9YI
              - key: OXdWcR
                operator: 8Ȱ纣+9į(ƎŇ繀ǻǍ崵
                values:
                - s5hf68n5M
                - Rj82w9aV
              - key: 2MOjjD
                operator: 哽偊ȨĪȆa茒E¨珰H进U
                values:
                - AnI2UobR
                - 9mzLuJP
                - LuLh
            namespaces:
            - dplLHJ
            - mObHl
            topologyKey: Mqm
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: iqTYWQsJpRK:ob8Ckc
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 268
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 536
          periodSeconds: 124
          successThreshold: 567
          terminationGracePeriodSeconds: 395
          timeoutSeconds: 164
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 838
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 229
          periodSeconds: 206
          successThreshold: 835
          terminationGracePeriodSeconds: 557
          timeoutSeconds: 959
        resources:
          limits:
            cpu: "878"
            memory: "828"
          requests:
            cpu: "8"
            memory: "727"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        options:
        - name: kUN
          value: 3E
        searches:
        - Rvg
        - 5Mio6X
      dnsPolicy: '{犈焆秏廟鄎Ǐ愦昽鳡趄ʋ鍤毺啨$~Ȓ'
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - E1
        - Ms7c0
        - DQCq8lAh
        ip: eKwSf
      - hostnames:
        - j5hqa
        - 2yJxVYi
        - 3i9
        ip: de
      hostIPC: true
      hostNetwork: true
      hostPID: true
      hostUsers: true
      hostname: H4L810WpX
      imagePullSecrets:
      - name: yaN2Lmpx
      - name: xDw
      - name: apv4pFzhBjVx
      initContainers: []
      nodeName: f2NAVVEK5e
      nodeSelector:
        VQbueW: qBbPRL
        dm0kfT8Z: fo6X8
      preemptionPolicy: 戎n
      priority: -355922683
      priorityClassName: G
      readinessGates:
      - conditionType: c棬mǃ¡ũʞ
      - conditionType: d·ȥ
      resourceClaims:
      - name: vDDPU
        source:
          resourceClaimName: 6QFV3qmpygo
          resourceClaimTemplateName: kDwPql
      - name: 6Kj5KeZ
        source:
          resourceClaimName: 9O
          resourceClaimTemplateName: uc
      - name: dckb26E
        source:
          resourceClaimName: 6EwGvomYU
          resourceClaimTemplateName: PW5EWGy2O
      restartPolicy: 腦aȼVǈɢof -飕
      runtimeClassName: J51Hvp
      schedulerName: 9N9BuRt
      schedulingGates:
      - name: 5OGdvDwQZ
      securityContext:
        fsGroup: 3343785438557929500
        fsGroupChangePolicy: Always
        runAsGroup: 8681115766071522000
        runAsNonRoot: true
        runAsUser: -2571971518779016000
        supplementalGroups:
        - -2651151158394969600
        sysctls:
        - name: gWGida2
          value: EXxd2y65is
      serviceAccountName: e1RNmR0qi
      setHostnameAsFQDN: false
      subdomain: CY
      terminationGracePeriodSeconds: -2459426983939630600
      tolerations:
      - effect: ȟvS(p$ĘƢƈȍ
        key: UVfmCM7k
        operator: į鸳ɧ舛諣¡`鋲 脨岆Ƹ鬓鴣4涂砲z
        tolerationSeconds: 2911494638029461000
        value: Q2jwBw4y
      topologySpreadConstraints:
      - labelSelector: {}
        matchLabelKeys:
        - 68dM4h
        - sGU
        - 4jULOMdhi7
        maxSkew: -877046888
        minDomains: -727956295
        nodeAffinityPolicy: Ȍ摔ë
        nodeTaintsPolicy: 8爺ɭ¶7偀h鴞ě麿+ǭ媓,:Ƃ
        topologyKey: w
        whenUnsatisfiable: 'do&鯡iƷȋ:ƃ¨_:'
      - labelSelector:
          matchExpressions:
          - key: ""
            operator: '!'
            values:
            - odp7e
          - key: uqHg
            operator: ňÞɺ侶nJ甛Ƚ魲K凣Ā
            values:
            - W
            - 25lA
            - r
        maxSkew: -1109097320
        minDomains: 1745016350
        nodeAffinityPolicy: s玦癮桋ɔřȏǭ?Řǃ^+
        nodeTaintsPolicy: 8秺´/h逰耥r
        topologyKey: "Y"
        whenUnsatisfiable: X!Ē
      - labelSelector:
          matchLabels:
            Ck4cSQ: ""
            G: lNI23Kw
        matchLabelKeys:
        - rxjITPswa
        - mj
        - AO
        maxSkew: 1133850006
        minDomains: -658634592
        nodeAffinityPolicy: 滫統ǵɷ舭欑Y7玗幫ǓOƭ畺
        nodeTaintsPolicy: 痵Ħƾl毷,u高nʎ獗洺ÒN膍笢健
        topologyKey: ZUbNp
        whenUnsatisfiable: ʃrx
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: YoQanUblkHW
      - name: M3D
      - name: gpg8EfW
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - Y-webhook-service.default.svc
  - Y-webhook-service.default.svc.eMY
  issuerRef:
    kind: Issuer
    name: 02-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: YoQanUblkHW
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    DQ: JM
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "Y"
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 02-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 02-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: Y-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 02-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: Y-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: 02
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-096.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axov6PJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: nNP8R
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: ""
    health:
      healthProbeBindAddress: lvqpPK5eKr
    kind: ChedzQo
    leaderElection:
      leaderElect: true
      resourceName: sWNn
    metrics:
      bindAddress: rgNc
    webhook:
      port: 372
kind: ConfigMap
metadata:
  annotations:
    3ph3En: TkDm8Umw
    sQ: xI
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axov6PJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 3SkASoputZl-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    3ph3En: TkDm8Umw
    sQ: xI
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axov6PJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 3SkASoputZl-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: axov6PJ
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    3ph3En: TkDm8Umw
    sQ: xI
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axov6PJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: axov6PJ-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: axov6PJ
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    3ph3En: TkDm8Umw
    sQ: xI
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axov6PJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 3SkASoputZl
  namespace: default
spec:
  replicas: 706970284
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: axov6PJ
  strategy:
    rollingUpdate:
      maxSurge: 617699443
      maxUnavailable: 275149160
    type: .A觾
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        87UF9H: uLISBH0
        S8pIPxt1: 6p
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: axov6PJ
        j6HM: OxIJL
        pWA: aDvN0CDtcMztj
    spec:
      activeDeadlineSeconds: 550779547880226300
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: ""
                operator: +轴{苌á$ÝĿl\
                values:
                - yEVNYtK
                - WIC5ZN
                - vTvkZUD
              matchFields:
              - key: VW
                operator: ƯLÍ葵J悚ǈEj鿒ʆ悟ǆ?
              - key: Xn7C0
                operator: x冮
                values:
                - p
                - m3tN6
              - key: vaF1g
                operator: Ǐ豃Äǥ遆Mȁ戚[=ȺĂ潰OŊɁ秓
                values:
                - gqT9u3m8H
            weight: -351781364
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: MBj
                operator: µ鴈鑚ĝ胩H泯o機隆ñT髳鈍Ȕ笡Ǽ矓
                values:
                - eX05
                - oMhHn
              - key: ""
                operator: G敯ǬȦ敫|:^FŽǒ聡M撾蛱
              - key: rO1kO7V
                operator: =嵉
                values:
                - ha0hN
                - RtcdWRu
            - matchExpressions:
              - key: xNeB
                operator: ~ǳʧ屦鶵Ȼc叾gǎ艟ª
                values:
                - TrKoFU
                - oQZZzSWRJE
                - tmFp70H
              - key: N5
                operator: ȫ檛±髿p鿴kø嘲,ɑcf踯
                values:
                - qp
                - JfB3HqjUS1
              matchFields:
              - key: fZAirF
                operator: )ň鐈ǒhĄ傴Ö噊
                values:
                - Mu6JOTl9
              - key: Vnab3
                operator: 氅太妍@wì瓔箆L
                values:
                - xm3gfmiGb
                - GzK
            - matchExpressions:
              - key: 1GpE8
                operator: ;ǈŋŹƎ}¾蹉ʞ弆
                values:
                - 34yIsdr
                - p4gdl9
                - wXXz
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: xSnjni
                  operator: z
                  values:
                  - QwwBQif
                  - GBK
                - key: aiM2Qiv
                  operator: fw塃髫·,
                matchLabels:
                  "": eCUoOLQX
                  0Hzi: ZjGO
              mismatchLabelKeys:
              - "65"
              namespaceSelector: {}
              namespaces:
              - jRnXMuxXLr
              - V1Dbg
              topologyKey: V6B37Cx
            weight: -565502833
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  BWDcQx: 7QzW5L38
                  J7MZmQq2: Hc
                  KcfM4: cZQn
              matchLabelKeys:
              - Cq4P
              - lBN0hp9
              - B0vaRhY4
              mismatchLabelKeys:
              - CD2
              - RnNQGp
              - IlBYaC
              namespaceSelector:
                matchLabels:
                  HK: 37HFCEj
                  UG: 53JjIlAj5
              namespaces:
              - e1P
              - 7ctg7lG
              topologyKey: "1"
            weight: 1779812559
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: f
                operator: +¡Ⱥ窛柤B浪
                values:
                - 7TN
                - zoEO5
              - key: qWBWiBy
                operator: 荼詓庈ǵ|Ħʭ~
                values:
                - 17r5W8
                - E1iSxL
              - key: sK
                operator: 庛©
                values:
                - wt8cgCsy
              matchLabels:
                M0Ok: yq8ZE4TE
                Md73: Xspa
                QRF: W0tceICL9D
            matchLabelKeys:
            - F76TZ1M6
            mismatchLabelKeys:
            - BIBQagnwWO
            - fK
            namespaceSelector:
              matchExpressions:
              - key: aBm
                operator: ʔ李¸妛ÃĹ×
                values:
                - qROA
                - Kjv
              - key: vG
                operator: ']Ś皝'
                values:
                - bBOM
                - zwkRrw
                - YwIq6
              - key: MJkhL
                operator: ƈur[^ùʗ裉ž楄ɟ枼=iƘ螮ʪʞ胷
                values:
                - NTmBqfMo
            namespaces:
            - c7nH
            topologyKey: RqllFD
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: qSeEIW6Apx5W
                operator: 蝻歃ʬfĴŢ錕
                values:
                - H8S6EqA
                - LJOpcpwKT
              - key: hrPdzj3Mw
                operator: ""
              - key: XwB
                operator: ŷȏR嘘咣貪9
                values:
                - WuJg
              matchLabels:
                0pM: zBiMfY
                JwF: Ube
                ctfv3: IwaRF6
            matchLabelKeys:
            - k
            - CFfSR
            mismatchLabelKeys:
            - ame
            - 3eLdFIdt
            namespaceSelector:
              matchExpressions:
              - key: 3OBCUOaVvzVM
                operator: 龫嗰ñƮɗ熈É|
                values:
                - gyd5k
                - FnZx
              - key: 23i
                operator: 靘þʫ®?土Xǣç+
                values:
                - iWoMb
                - dCgr9AcE
                - ""
              matchLabels:
                9sf: dnwoVQ2
            namespaces:
            - jlD57GYm
            - WOHEcN
            - JQTco2ilX0
            topologyKey: hAV31Qv
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: xS:v
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 136
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 953
          periodSeconds: 927
          successThreshold: 429
          terminationGracePeriodSeconds: 146
          timeoutSeconds: 833
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 649
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 409
          periodSeconds: 980
          successThreshold: 228
          terminationGracePeriodSeconds: 211
          timeoutSeconds: 674
        resources:
          limits:
            cpu: "267"
            memory: "680"
          requests:
            cpu: "98"
            memory: "479"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - o2YA
        options:
        - name: rpJ
          value: 8wO3
        - value: sZ6V
      dnsPolicy: Q
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - TO9
        - qAT
        ip: iv
      - ip: B
      hostPID: true
      hostUsers: false
      hostname: sn26g
      imagePullSecrets:
      - name: QcP
      - name: R2U0oMf0N
      - name: 0drXBt
      initContainers: []
      nodeName: Dn36O8GLl2N
      nodeSelector:
        lsKAX2: ""
        pl07LOV: iyuRUDY3
      preemptionPolicy: ÓɪÏM捾lª呤ĵǚȩ悕嬮ʔ獯M
      priority: -532975533
      priorityClassName: oxhVXSmZ
      readinessGates:
      - conditionType: vl釾}&Ƽ頃坘斂ƛ
      resourceClaims:
      - name: viJ
        source:
          resourceClaimName: cr3C1cPYTm
          resourceClaimTemplateName: Aughz5gCZ0Rj
      - name: cp7L
        source:
          resourceClaimName: ttbkT5a4Cs
          resourceClaimTemplateName: rX
      - name: Kw30Uvsks
        source:
          resourceClaimName: 6vgh
          resourceClaimTemplateName: NbMeVHOYO
      runtimeClassName: 46m7rxLW
      schedulerName: "8"
      schedulingGates:
      - name: yLeDn
      - name: dz5f4
      - name: jKbEJKXk8rP9
      securityContext:
        fsGroup: -6244828504979236000
        fsGroupChangePolicy: Always
        runAsGroup: 7262050681363773000
        runAsNonRoot: true
        runAsUser: 2807608889417989000
        supplementalGroups:
        - -5471763151526323000
        - 8657413726406249000
        - 5967647221799464000
        sysctls:
        - name: ""
          value: yxvPZ
        - name: Kw1cBNshv
          value: MSm
        - name: PViWFVa
          value: 60Ua
      serviceAccountName: nNP8R
      setHostnameAsFQDN: true
      subdomain: kUb
      terminationGracePeriodSeconds: -6520358260173701000
      tolerations:
      - effect: 3śǨA?幏Ȉ犮厚:極
        key: Jwt6dkh
        operator: _ý竷
        tolerationSeconds: -7587356670156981000
        value: gGG
      - effect: '{j$Ózm哘韤I]ǜ氃ǫȭȼ窆ȑ+'
        key: WuZTIZTn
        operator: ʖkɻE尯宋滇愚
        tolerationSeconds: 8496080604790588000
        value: SK3PIdx
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: c5fm
            operator: 醿Ɵ若眐赟燔熬Ơ[蓹
          - key: dsqH
            operator: ""
            values:
            - J6
            - Juatfa
          - key: j21pMVew
            operator: l:+峏ɍYÃ朵缍D榸荙ʪ ǳ4
            values:
            - Pfu9
          matchLabels:
            r0ZVuk0iLxe: kDtC8qRrnXh
            zfvjCsZ: pkyXUe
        maxSkew: 1010311869
        minDomains: 671823264
        nodeAffinityPolicy: 钩哉<雒Ņ嘙ȼ
        nodeTaintsPolicy: 前|拱丅叇/ƻCĮh
        topologyKey: Bd
        whenUnsatisfiable: '&ô棙齆}襟Ǎ恻稶孤7Zʪ'
      - labelSelector:
          matchExpressions:
          - key: 8xR
            operator: R8ƠÔ,
            values:
            - j
            - R
            - 08B
          matchLabels:
            IAeV939: xyLVq1Ps83
            lVc: ""
        matchLabelKeys:
        - 0uS54AcB
        maxSkew: 1129480646
        minDomains: -1902572954
        nodeAffinityPolicy: Ì3冓ŧ'Ƞ窕矺Ƈļ悅ʋ
        nodeTaintsPolicy: 箒WGȈ(鳙á{ƝƟ驖
        topologyKey: ""
        whenUnsatisfiable: qZȬ閯
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: 7DqgCF2lW
      - name: 5Dsn
      - name: LOFXwQCU
      - name: rQux
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    3ph3En: TkDm8Umw
    sQ: xI
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axov6PJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - axov6PJ-webhook-service.default.svc
  - axov6PJ-webhook-service.default.svc.8
  issuerRef:
    kind: Issuer
    name: 3SkASoputZl-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: 7DqgCF2lW
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    3ph3En: TkDm8Umw
    sQ: xI
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: axov6PJ
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: 3SkASoputZl-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 3SkASoputZl-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: axov6PJ-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 3SkASoputZl-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: axov6PJ-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: nNP8R
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-097.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: MuFtP
    health:
      healthProbeBindAddress: WIsjt1
    kind: qrUo
    leaderElection:
      leaderElect: true
      resourceName: Upp
    metrics:
      bindAddress: zOUvrhAiMkg
    webhook:
      port: 133
kind: ConfigMap
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: KPhNK5uNi
subjects:
- kind: ServiceAccount
  name: hOWRGjU5
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: KPhNK5uNi-election-role
subjects:
- kind: ServiceAccount
  name: hOWRGjU5
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: KPhNK5uNi
subjects:
- kind: ServiceAccount
  name: hOWRGjU5
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: KPhNK5uNi-rpk-bundle
subjects:
- kind: ServiceAccount
  name: hOWRGjU5
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: MkL0HtR
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: MkL0HtR-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: MkL0HtR
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi
  namespace: default
spec:
  replicas: 1843856420
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: MkL0HtR
  strategy:
    rollingUpdate:
      maxSurge: 547551553
      maxUnavailable: 1550314739
    type: ʋs锼E*
  template:
    metadata:
      annotations:
        2H14: UmxAS
        U5g0p: yuaycTPAR
        a: iq
        alOr8NH7: TxWNmXmHhCY
        wrmSg: J0Ald8ZXm
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: MkL0HtR
    spec:
      activeDeadlineSeconds: 8453138196629512000
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: MAVgRhlIw
                operator: 郁z1hÚ}喌šūƫȒʋ%湦
              matchFields:
              - key: lAPYYE
                operator: úŸ橨v篘#v
                values:
                - Hbs
                - plt
                - awevjY
              - key: gj0z
                operator: 繌ř籮純鯁ȫ
                values:
                - cSoPPh
              - key: hOq
                operator: ơɂ簲ɮt?ɺ"ǌ9幚Ĭ瘫泂韻嗚ĵ
            weight: 430419159
          - preference:
              matchExpressions:
              - key: atJOrQ
                operator: 霷骴Ȑjɱ梯唡Ƈ亜9m
                values:
                - omBCX
                - DOcC1
              - key: RPUBut
                operator: =庪VÚʄ¬>ʂ麿ǨĩMǈɴy2+
              - key: wrkBzkuW
                operator: '@Ŭ俒ĈƓ}ďȜ矃桞儻卄槴8Ûʟ'
                values:
                - FkaW67
                - xGT
                - a9U
              matchFields:
              - key: bLx0
                operator: '纣ǫH榹ɐ眧¤­婮w '
                values:
                - pC02CKW
                - rx
                - XSb
              - key: xkIrY
                operator: ""
            weight: -1528981107
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: Cjg
                operator: ʫ
              matchFields:
              - key: RkUF
                operator: +紮o笍赖@Ãƫ獙甋p
            - matchExpressions:
              - key: X
                operator: 鶄/8]嬜<d@襭Ìf當簹!汽
                values:
                - H
                - Htu
                - 8Dl
              matchFields:
              - key: 8PEu
                operator: ȹʔǟ偧0ǦQ&刚Ø餄譌ŸnǱ
                values:
                - wFlnXb
                - g7S
              - key: Q
                operator: 烜煨ë喅ɳ'âɦoĺJI
                values:
                - u6B
              - key: bFn5HitWC
                operator: ʭ#Ĳǋ沬"
                values:
                - I7mCR4
                - JfXuBj
            - matchExpressions:
              - key: bInSx
                operator: 葨僆R首K鰳ǌG!豝~Ƞ硢
                values:
                - UDSFml
              matchFields:
              - key: Cv
                operator: 挫ű
                values:
                - "y"
              - key: cfx77
                operator: 酴ʃ)硞"嬙;Ýʙ$ʖþ熢
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: TMLjn
                  operator: 屹Ǌoņ龎享;
                - key: 2wj
                  operator: ºĐ谔Âv8倯2Ƿa糺+ɷ廵
                  values:
                  - Jm
                  - lR
                  - z2
                matchLabels:
                  "": nn
              mismatchLabelKeys:
              - h
              - uOnzjn
              namespaceSelector:
                matchExpressions:
                - key: LHEt
                  operator: Āɋ
                  values:
                  - tlN
                matchLabels:
                  dWm34KN: 7MMMT
              topologyKey: W
            weight: -1984593178
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: xF3G
                  operator: ɷ岤呄ǐʏhďh戗桞ʃǱ龩鿝S轪]ʎ`
                  values:
                  - pJt2Z6mSe
                - key: j3fu9daCsreX3
                  operator: 睤糊
                  values:
                  - XIm
                  - dT8mi16Z
                - key: hOdl5D
                  operator: ƹ囬£V辸ʆ
                  values:
                  - 8zJkvLrg
                  - S
                  - a
                matchLabels:
                  J: qeX33sUleWxS
                  LuGagtY4N: YW
              matchLabelKeys:
              - 4w6Ou
              - s0g49
              - 4rZEmbE
              mismatchLabelKeys:
              - rE1f
              - iJU6
              - 0U
              namespaceSelector:
                matchExpressions:
                - key: tRuy
                  operator: ȇ丼Ǩţ蝈eɹǑ卙ǥ
                  values:
                  - "Y"
                matchLabels:
                  fKASyaFJ: ZQQi
                  vSd5Khy: 5wqbbkj2
              namespaces:
              - Pz
              - zYzByZ8
              topologyKey: XX
            weight: 1094174505
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: IhO6mq
                operator: 'ƣ鶃 '
                values:
                - 2ne
                - xavoi
                - p5Sd
              - key: GlTJ
                operator: -Ȧ劊ȉ<ƼfT燯4
                values:
                - Xo8s
                - mW0K
            mismatchLabelKeys:
            - BEDLsDbj
            - c
            - "1"
            namespaceSelector:
              matchExpressions:
              - key: WQla
                operator: 欖
                values:
                - 2OdZ6
                - CHJrspy
              - key: p
                operator: 漁ȉ黌j褣鮱àƩ汯R钲}J腃
              - key: uTBXVQpWm
                operator: 雪ź庭媡W坚İ
                values:
                - pEW0
                - Lsw
              matchLabels:
                0D: 5S
                KKHohV4: rFA
                hAuQU: HJ8vq
            topologyKey: o7
          - labelSelector:
              matchExpressions:
              - key: Khm
                operator: ƦȨōɾ?訐coÇÂ勽瘎嗹ǒʏ筭7岾ō
                values:
                - cjYkK
                - K6TcG
              - key: V9GBW
                operator: LSq簴ǖ堺ʥ´ŒĜɢ
              - key: lVLw3VA
                operator: ź°R钤ǽɫš妛>H²tįɖ兤ƴ濍
                values:
                - 2y
              matchLabels:
                A: iGHu
                qUKp: kSv9gQh
                rgSonxW: mZ
            matchLabelKeys:
            - kPLfuzBI
            mismatchLabelKeys:
            - KdX
            - hW7hCY
            namespaceSelector:
              matchExpressions:
              - key: nZZPQn
                operator: 薩呓Ǭ郞ÁĈ皻xF_
                values:
                - MT
                - jbKz
              matchLabels:
                aogTtoRlP: bhxF3W
                f8G7V: Bo
            topologyKey: itF8LPMHiW
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  B8kX: ps
                  ed0: yfr8Mo1s
              mismatchLabelKeys:
              - qTXnQ
              - a
              - Wkm1
              namespaceSelector:
                matchLabels:
                  P: dlxV6
                  QtoC8F98: d2
                  fx37DkCYrj: zEtmwGL
              namespaces:
              - E0S
              topologyKey: eVtM2oezTJ
            weight: 925822609
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - l9a
        - Arx
        - bLHpq0J3
        command:
        - /manager
        env: []
        image: HoNUZ89Keda:3EcYA
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 847
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 922
          periodSeconds: 729
          successThreshold: 713
          terminationGracePeriodSeconds: 336
          timeoutSeconds: 324
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 362
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 964
          periodSeconds: 99
          successThreshold: 305
          terminationGracePeriodSeconds: 853
          timeoutSeconds: 141
        resources:
          limits:
            cpu: "212"
            memory: "397"
          requests:
            cpu: "121"
            memory: "731"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - vD1Q
        options:
        - name: nocNEHfaAOe
          value: 03vE
        - name: QSNCgZ
          value: ""
        - name: fX8EUziir
          value: h1lo
        searches:
        - MmVL
        - 0ZNhetg4
        - fPbabAt
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - iuGeT9
        - L
        - dzDpaq0m
        ip: qQjd2
      - hostnames:
        - ciiy7Zr1
        - de5O
        ip: wJoe4k
      hostPID: true
      hostUsers: false
      hostname: C0eddorzlX
      imagePullSecrets:
      - name: 4Ig
      - name: aS
      - name: zg
      initContainers: []
      nodeName: ntH0dNCmb
      nodeSelector:
        "": m9D
        K1fAX8N: BkIZia
        OR83: OXDX
        c0: Cw3DE
        vLoT: zs
      preemptionPolicy: ʞ鹅zM@#ť
      priority: 80812349
      priorityClassName: XRWG
      restartPolicy: 聥yfĜ縩
      runtimeClassName: A1IOFH
      schedulerName: v89zEGC1E
      schedulingGates:
      - name: VX9B
      securityContext:
        fsGroup: -5684185103106526000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: -6734736261006962000
        runAsNonRoot: true
        runAsUser: 6709862083486745000
        sysctls:
        - name: XcMYeaD
          value: bdrh
      serviceAccountName: 4v
      setHostnameAsFQDN: true
      subdomain: JZBy8ZayZwcMF
      terminationGracePeriodSeconds: -8250315328961058000
      tolerations:
      - effect: 召Ǘ萃Ļ搲ňW#õ挝ǭO]}BʟFRT
        key: Z
        operator: qȄuűE匸
        tolerationSeconds: -4881064580795227000
        value: MBj
      - effect: 鮋吪攏ǒTK
        key: Su7DDEM
        operator: èʗ*´ǒó鄶B$?ƣ厰}
        tolerationSeconds: 7632226241464207000
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: 0cumQ8tluj1c
            operator: $鮖ɛ笼.j嵭驟俉Ȧȥ碿轾ő椫梁£f題
          matchLabels:
            1W3KQX: MpkDb
            GtFt5w: R
        maxSkew: 276375209
        minDomains: -1200472072
        nodeAffinityPolicy: 0橏孀Ɉœ
        nodeTaintsPolicy: Ê曕{Wœ»$
        topologyKey: dl6bnLmrg
        whenUnsatisfiable: Įǂ恼7靍ʀĝȀ=ĸ卌ǄĢ
      - labelSelector:
          matchExpressions:
          - key: S
            operator: Kv殌ÂʓÌZʀ資ʕƣȭ擁ɎY
            values:
            - z10m
            - 5GGc1
          matchLabels:
            D47d: u
        matchLabelKeys:
        - B
        - F1EEoBx
        - 2mLy27IC5
        maxSkew: 1503337367
        minDomains: 1416806673
        nodeAffinityPolicy: .3掲ʑ
        nodeTaintsPolicy: ƜǟQ郤蟹ī籸烒É:籧kȟ_rɩ
        topologyKey: tpp9zbzN
        whenUnsatisfiable: ÑŗHupɩ嘅NƀƏȮ笡澛牪Ǌw
      - labelSelector:
          matchLabels:
            0aa: ""
        matchLabelKeys:
        - SkOlYv
        - 0luz
        maxSkew: 2123040071
        minDomains: 476945799
        nodeAffinityPolicy: lH洒Ņ顸ɐ]紗ȁ瀣
        nodeTaintsPolicy: ŧ/ô:儮6Ñ"廬懼"sS>瑘Ơ
        topologyKey: WGNmR
        whenUnsatisfiable: ȇ]漞ɜ煔C!rFÚ[ù&'
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: EJIW1
      - name: ""
      - name: McerRJI
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - MkL0HtR-webhook-service.default.svc
  - MkL0HtR-webhook-service.default.svc.9vz2maUN9g
  issuerRef:
    kind: Issuer
    name: KPhNK5uNi-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: EJIW1
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    GnXQ: mU
    dEUN: 9jQ
    eWh: j
  creationTimestamp: null
  labels:
    1DVgfA62: TO
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: MkL0HtR
    app.kubernetes.io/version: v2.3.8-24.3.6
    dwmXsKZoxFp: TZf
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: KPhNK5uNi-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: KPhNK5uNi-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: MkL0HtR-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: KPhNK5uNi-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: MkL0HtR-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: hOWRGjU5
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-098.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    4L: T4HM0h0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: LH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: L
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: Yv
    health:
      healthProbeBindAddress: P
    kind: AzYFtSq85
    leaderElection:
      leaderElect: false
      resourceName: igrTR
    metrics:
      bindAddress: U0X
    webhook:
      port: 269
kind: ConfigMap
metadata:
  annotations:
    A: YuZnq6
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: LH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: iP-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    A: YuZnq6
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: LH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: iP-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: LH
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    A: YuZnq6
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: LH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: LH-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: LH
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    A: YuZnq6
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: LH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: iP
  namespace: default
spec:
  replicas: -2084315406
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: LH
  strategy:
    rollingUpdate:
      maxSurge: 1353699977
      maxUnavailable: 132140350
    type: 毒醆ų粔,渞FƨȖ
  template:
    metadata:
      annotations:
        16r: Njj9s
        Ts: tJoO25k
        bssVBE: ""
        na: "66"
        tBil: bsRufV62
      creationTimestamp: null
      labels:
        LnVk: ed9K
        Vy3g: 6OA
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: LH
        k3I6: wI
        npjtD1N9QO: fb
    spec:
      activeDeadlineSeconds: 545118660215539400
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: ald
                operator: ȴlȪu腩掕N
                values:
                - QIf64n5
              - key: hHmKEv
                operator: ""
            weight: -1268287639
          - preference:
              matchExpressions:
              - key: E
                operator: 鯢ƐÑ$șűl
                values:
                - MDiM
                - WXr8
              - key: MnV
                operator: 搗諧ʑ篑V0粛
                values:
                - ToI
              - key: cMpL
                operator: S炻螇Ȓȡ溜ƍ§ 
              matchFields:
              - key: 4WZJu7
                operator: 7*楕ȿ杗Ŵ&Nʜ¤ǒ唁貖R
              - key: 3K
                operator: 汱[¶jKĬƛ"Rɤ莫檾ùǵ3Q硂
                values:
                - Em7FnwV8
                - LvzZDy
              - key: 8OSP
                operator: ŷǗĨkY6蝷oX炰Ȳ鍛侵綜ʥ浧
                values:
                - p
                - c
            weight: -1521381926
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchFields:
              - key: deY2qL
                operator: 僪Ǖ輈満Ǭȅ軩ʄ[Lʑ鶙h婍
                values:
                - 3w
                - 5kCYPTyW4H
              - key: xrRA2b7
                operator: æ吩ÇȐ祇耺´áhA优w()ɨB
                values:
                - nAdB
                - TbZ644d5
                - W8MxvKLY
              - key: kH5O
                operator: Xm{鶞竆棼]
                values:
                - DBrNWf1O
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  pOMm: YgM5C
              matchLabelKeys:
              - xb0W3
              - U9Z5
              mismatchLabelKeys:
              - W2j
              - NQU
              - Bi4K
              namespaceSelector:
                matchLabels:
                  9La7NrIsW9hs: kiZh
                  AMZur: YI
                  eD17ZVn: bOP
              topologyKey: Y4nSDgLHUU83
            weight: 1168243410
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: FYU6jaRx
                  operator: ""
                - key: 1G0P
                  operator: 铘Tʥȭ橆Ⱦɹb嫠獬#Ʒ弼蓮Ȇ
                matchLabels:
                  K: PKwJL3m
              matchLabelKeys:
              - jR
              - gDG
              - vx3f
              mismatchLabelKeys:
              - "N"
              - yocNWg5CR
              namespaceSelector:
                matchExpressions:
                - key: mM7f
                  operator: 耳m黦3悇LP7ʝFɁr饒U沰Gʤƻ錾
                  values:
                  - V5prB
                  - qF4z6
                - key: fXuR
                  operator: ~溥蠿A0鱢ǭxìX
                  values:
                  - nNM77Ukqw
                  - "461"
                - key: dh
                  operator: ¡鷥叢#Xɤ;Fʔŋuûw
                  values:
                  - MH9D5l
                  - o
                  - UlIYIT
                matchLabels:
                  uKZc: ebdq
              namespaces:
              - g0
              topologyKey: bm8
            weight: 1737502384
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: oLCSLPem
                operator: 梉ʘ琓咻_b轝,ǡʍ匽ʅcǎb
            matchLabelKeys:
            - CV4HigFw
            mismatchLabelKeys:
            - g5n7ks
            namespaceSelector: {}
            topologyKey: ti3S
          - labelSelector:
              matchExpressions:
              - key: ""
                operator: ǴĽ^ă吭嬤ƫţ¶贡ǰZ+搭W笢q
                values:
                - Zj9W
              - key: KpXFtva
                operator: ǥǗ
                values:
                - Q5sTjgK
              matchLabels:
                4v5: jQtD
                R401l9rUj: rVe5
            matchLabelKeys:
            - vL
            mismatchLabelKeys:
            - JhKxxK2g
            namespaceSelector:
              matchExpressions:
              - key: ""
                operator: ƽ邲Ƙ鬾É[D+VzsǂÐ*2®
              - key: sQXR
                operator: t¢ǂĬĬ馅H徶ęʁv輷
              - key: jJ
                operator: 犁屾滬ƽ帹ğŎ-Ţ士tJɾȹ翺2
                values:
                - yP9jnx
              matchLabels:
                "3": w2u5
            namespaces:
            - oTbjakxO
            - 4UXHSQ
            topologyKey: CnoN
          - labelSelector:
              matchExpressions:
              - key: i0m3imR
                operator: 亿4ȅǵ葽呵&Cd嬚
                values:
                - cd08S
                - epeV
              matchLabels:
                Vi: wAjlUyRQKL
            matchLabelKeys:
            - 1s3GN0Q8YB
            - kc99V
            namespaceSelector:
              matchExpressions:
              - key: 4a776D
                operator: 鍎ô³4a嚲ð
                values:
                - R6uXvLOEk
                - VYeFB
              - key: dIilgJQ
                operator: ű鱒$+Ȇɳ艿a沍俸埔
                values:
                - cUQcGHb
                - EGhtIfoCD
                - Y9IXc
              matchLabels:
                mPll5xZ: 7Pg6gu
            namespaces:
            - Pa5iF
            - ""
            - LeJzcHt
            topologyKey: tFH
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: jFoQu
                  operator: '&zs)VXĞ¤lYAZRŰ岃!'
                - key: uU4exdU
                  operator: 賾
                  values:
                  - 9nlB9d
              matchLabelKeys:
              - N6aRuXn
              mismatchLabelKeys:
              - QCFq
              - "0"
              - 5cP
              namespaceSelector:
                matchLabels:
                  "": 0eUrGy
                  OOtA47: sFd
              namespaces:
              - ""
              - Pw50
              - Z852nRmS
              topologyKey: nWv
            weight: -1358082559
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: KDHE
                operator: 芲7Tô旇龮n踴酽ǦÇ
                values:
                - A
                - jUxOXdqh
                - bEh8NQQc
              matchLabels:
                "": 6lw
                dkU4C12: rDEKG0ghK32by1z
            matchLabelKeys:
            - 26xZQi2t0
            - T95c27r6
            - hZ
            mismatchLabelKeys:
            - OQ0z
            - lN1N
            - wLsm
            namespaceSelector:
              matchExpressions:
              - key: o
                operator: 孻ķA<罅JA話Ĵ=蛻奲ȑ)*?焩藶勗
                values:
                - 5b5AlNnx
              matchLabels:
                9wwbN9zXP: xzl80R
                DCWnY: zvgO
            namespaces:
            - xo
            topologyKey: ""
          - labelSelector:
              matchExpressions:
              - key: TO7
                operator: ʪ蛕ȣƇ訊ɔ涙ɪD#
                values:
                - EVAp
              - key: Mq1cXCqn
                operator: ""
              - key: v9EpgKH
                operator: 騛进怅ĉ鳦ǃŕ]轢宪泬Ə
                values:
                - Qj
                - 7pgJ
                - s5Bb
              matchLabels:
                Eogtig: mjIAV
            matchLabelKeys:
            - lPjkbOOt
            - XBaEp
            - Sa0Ag999
            mismatchLabelKeys:
            - ErcgQS
            - wknKG
            - BZCC
            namespaceSelector:
              matchLabels:
                tK6Qy5: 7DI1
            namespaces:
            - UZdPeg
            topologyKey: Pt7S
          - labelSelector:
              matchExpressions:
              - key: i72cYW
                operator: ""
              - key: JvhLgGW
                operator: 乘ƀÂ
            matchLabelKeys:
            - GX6z0C6F
            - ""
            - K83EDUe6
            mismatchLabelKeys:
            - NTPXCIb
            - pUtiiY6LdsE
            namespaceSelector:
              matchExpressions:
              - key: mgkvAfh
                operator: Dǻ1=VȞ畵ǝ*ɓǌ|~²墐[柈
                values:
                - 62G0D2N
              - key: xXsil
                operator: ;ʏ鎁塱鞩Ƣ輑俸藋酛fY敂需孛h·
                values:
                - yoSApSTbGc2
                - yIuVFn
              - key: waJJLLnotI
                operator: ï覸gɸO遃婍ŤF=
              matchLabels:
                mL: vHkR4b
            namespaces:
            - O
            - UZ
            - ""
            topologyKey: kKU
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - P
        - WM7Be
        - JLya
        command:
        - /manager
        env: []
        image: h8K:P
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 807
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 369
          periodSeconds: 599
          successThreshold: 709
          terminationGracePeriodSeconds: 323
          timeoutSeconds: 4
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 339
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 644
          periodSeconds: 736
          successThreshold: 767
          terminationGracePeriodSeconds: 870
          timeoutSeconds: 438
        resources:
          limits:
            cpu: "999"
            memory: "995"
          requests:
            cpu: "310"
            memory: "451"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - qpD5w
        options:
        - name: zj7ZjaHqjc
          value: 5qwMFE2
        - name: lX0K
          value: PjOY4lKisl0eB
        searches:
        - j6Heur6Yfcu
        - ZfVso
      dnsPolicy: Þ蕉豐}k剦ö
      ephemeralContainers: null
      hostAliases:
      - hostnames:
        - OjcDtB1C
        ip: 5GcNoI
      hostUsers: true
      hostname: WPBEbkbr31C
      imagePullSecrets:
      - name: RpOpIPKb
      - name: z
      - name: CD
      initContainers: []
      nodeName: vD
      nodeSelector:
        llGzbN: oI
        vNIq: uv
        wgpBg: lQkdHPNDw
      preemptionPolicy: M過恳釁納xlʄ跾ôa
      priority: -1879763257
      priorityClassName: SoOt
      resourceClaims:
      - name: NMMsJNTcTe
        source:
          resourceClaimName: NVhvRVXR3
          resourceClaimTemplateName: 16X
      - name: c9Tig
        source:
          resourceClaimName: xXSm
          resourceClaimTemplateName: s
      - name: 6Ie
        source:
          resourceClaimName: DYB
          resourceClaimTemplateName: QMu
      restartPolicy: 毃ăǊ瞩棁gɚIM/玏øetC
      runtimeClassName: G55Wt6r
      schedulerName: aAG
      schedulingGates:
      - name: T
      - name: 74fRcwJH
      securityContext:
        fsGroup: 6137577561858794000
        fsGroupChangePolicy: Always
        runAsGroup: -6949924418046833000
        runAsNonRoot: false
        runAsUser: -3469124705118572000
        supplementalGroups:
        - 50379161676887430
        - 2079034389514862800
        sysctls:
        - name: lq4pd
          value: c67ZfdgV0
        - name: KkmrwzTI83
          value: jROoHUT
      serviceAccountName: Z1BDagA0D
      setHostnameAsFQDN: true
      subdomain: kVjWC
      terminationGracePeriodSeconds: 2589748319900399000
      tolerations:
      - effect: '}牘暺骫6ʬƋô渧ċǹ6«麰Ō浌ƚ'
        key: nJTK9X
        operator: 钽ŋ蟂ʗʒw/廱}!韕綥=
        tolerationSeconds: -1109275824266343600
        value: WmIbDeZ
      - effect: ʙ凸X\H飄ȵjȝȫ(醟p佣}Ŵ迖ƴ
        key: 8pT71
        operator: <¶ǂ偾w巨縘EǲĄ凿
        tolerationSeconds: -4714273216746741000
        value: 7J3
      - effect: ǲĕ滁NǍ矣鱪湗蓜fXƅǈʨ砣
        key: ICvl9
        operator: ɬNh3ɔ]?ɘ+嫎Ķ呆
        tolerationSeconds: -235107692735406240
        value: pFLe6d0v9vvM
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: C
            operator: 醯\Ȁ蛷Qŏh+J!贍
            values:
            - QXJ
            - bU
          - key: G
            operator: ŋuoH倊Ɛ漞圳ËÞ
          - key: MyERu6o2dS
            operator: 帀
            values:
            - Jb7Q
            - 8KzFIG8
            - vYtqR
          matchLabels:
            pPwQ: UZYWrq3
        maxSkew: 573942645
        minDomains: 549576695
        nodeAffinityPolicy: 駯Ȃŀɣ愸Ē棚鬏ªǸ&
        nodeTaintsPolicy: nJ2V躴Ɔ湝鐄wƹK庖ưWȮ
        topologyKey: eZyZ
        whenUnsatisfiable: 絾ĉ儧举覶/ɹ栈ŕȓ炃7ɞƅµǉ
      - labelSelector:
          matchExpressions:
          - key: fkCFp
            operator: 軧Ɗ-ʊĭR 誣ɧĳĆȡQ
          - key: 8PZ3dT4
            operator: ǁ
        maxSkew: -812684638
        minDomains: -1931448912
        nodeAffinityPolicy: ;醴
        nodeTaintsPolicy: 漮©ʧ矜`ŵ桿圻釘[繁紁ʝ臒JVA
        topologyKey: fdWGr
        whenUnsatisfiable: Ǵ禒
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: q9uoI4af
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    A: YuZnq6
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: LH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - LH-webhook-service.default.svc
  - LH-webhook-service.default.svc.oHW
  issuerRef:
    kind: Issuer
    name: iP-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: q9uoI4af
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    A: YuZnq6
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: LH
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: iP-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: iP-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: LH-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: iP-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: LH-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: L
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/case-099.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: vE4AZ
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: nkytr
    health:
      healthProbeBindAddress: ""
    kind: LDPwZMT2
    leaderElection:
      leaderElect: false
      resourceName: INZ37
    metrics:
      bindAddress: H
    webhook:
      port: 98
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: 5U9oyj-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: 5U9oyj-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: 5U9oyj
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: 5U9oyj
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 5U9oyj
subjects:
- kind: ServiceAccount
  name: vE4AZ
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: 5U9oyj-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: 5U9oyj
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: 5U9oyj-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 5U9oyj-election-role
subjects:
- kind: ServiceAccount
  name: vE4AZ
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: 5U9oyj
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 5U9oyj
subjects:
- kind: ServiceAccount
  name: vE4AZ
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: 5U9oyj-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: RoJFv
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: RoJFv-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: RoJFv
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: 5U9oyj
  namespace: default
spec:
  replicas: -1597924950
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: RoJFv
  strategy:
    rollingUpdate:
      maxSurge: 198206459
      maxUnavailable: 462449305
    type: 櫖hƹp
  template:
    metadata:
      annotations:
        C1Z: 4udi
        L: 7WHv2
        Mqp: 7JBCm
        rQHygw: mwv
      creationTimestamp: null
      labels:
        2hLH2: sWMHe
        CxNya22J: RYElnz
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: RoJFv
        q5: uwn4hBPXu
    spec:
      activeDeadlineSeconds: -735193340589213400
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference: {}
            weight: 693437617
          - preference:
              matchFields:
              - key: bZXMlw6
                operator: oÐ撽釹5Ɇ ¦s²
                values:
                - sDd
                - 8F2y
                - v4bxGEZ
              - key: wKBrH9y
                operator: 盙[宩Ū鈂KÄ
                values:
                - V
                - UKDu2Jx
                - LRaFvDN
            weight: -311349832
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: JK
                operator: :槍ä·Ź柕ɴ癚
              - key: ag
                operator: 嚡犝ɋ(Ȕ^ɷ}猻悘nqß°盚vɨ琝c
                values:
                - NN
              - key: Bn
                operator: 曄cȾǗǊƹò}=鞋婘
                values:
                - rdIWf9
                - F2
                - cRPLp8BT
              matchFields:
              - key: sBClmvIiR
                operator: ƿ
                values:
                - e
                - ct
              - key: ""
                operator: '}ƕ1ɜDȆsȡǂD桘去'
                values:
                - Aqd
                - 5Pj9nU5
                - JIcAFrGF
              - key: dVMHpb
                operator: ""
                values:
                - k
                - tOKWTv
            - matchExpressions:
              - key: HBsK
                operator: ɬE值Et堓菷`
              - key: ""
                operator: ūh;JŦȪ瑀
                values:
                - kjdNzpt
                - u3by6
              - key: f3sh8v5
                operator: 桮妌
                values:
                - To
                - iYEBR0IW
                - x9faSamFd
              matchFields:
              - key: u
                operator: 锞Àɞ$Ƀ
              - key: uou3KQ
                operator: 跴m軋[ª轰
                values:
                - Gx
                - Pf
                - 0Oqt
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: l0TsuVz94g1
                  operator: '}+'
                  values:
                  - eXNk
                  - Vpy8AY
                  - BBWW6wicG
                - key: CBlj
                  operator: 餮ƶ
                  values:
                  - ofcM9VKBk
                  - d7oFmB
                matchLabels:
                  Bx: M6sAKG
                  N7: b8l2TfN06P
                  yZNElq8: ""
              matchLabelKeys:
              - 2dc
              - 3StV01meR
              - D
              mismatchLabelKeys:
              - 4MocNms9WRN
              - xXVciQ
              - wmb
              namespaceSelector:
                matchLabels:
                  "": Fxf
                  FC9avyj: u
              namespaces:
              - Ei9Tu
              topologyKey: gtTUI7
            weight: 352051879
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: wSGdCS
                  operator: ǳhȗ
                - key: BMVNbAg3
                  operator: 您`9ÿW绑,H
                - key: 9WOEn5Mh8XE
                  operator: 扦U
                  values:
                  - bas2Fw
                  - "n"
              matchLabelKeys:
              - Vy9q
              - "1"
              mismatchLabelKeys:
              - MA7DQ4i
              - "0"
              - xGKUX7UXiMmUz7
              namespaceSelector:
                matchExpressions:
                - key: UgSCNn0GropZx
                  operator: 儴窫Ü桩mj祄e
                matchLabels:
                  76l: c3N
                  L4s5Kur: HtfD
              namespaces:
              - C
              topologyKey: Spo
            weight: -954161113
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: hU4hJaJq
                  operator: Į羼|
                  values:
                  - eYLK
                - key: C
                  operator: ƄʙŦàŌ硩ĵ槼Ȱ
                  values:
                  - WcCKN
                  - 5NTz1o
                matchLabels:
                  06E49h0: UbEf
                  G2a3: Iz7dd
                  Uhpu: rqIWeSl
              matchLabelKeys:
              - "7"
              mismatchLabelKeys:
              - JPKTQ
              namespaceSelector:
                matchExpressions:
                - key: rvk8VYWw
                  operator: 玀|ǁħ璮
                  values:
                  - gboly3a
                  - qYMqw9V
                  - cNVEN
                - key: aW3vIV
                  operator: 歬釽1}Ʋł耢Ňʣ4鍝脟j疞2
                  values:
                  - "3"
                  - pF
                matchLabels:
                  A: tjBR
              topologyKey: xIzwui
            weight: 779867361
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: OxQpwolJYXu
                operator: 鯹ʚʁ匶Ŏ愀郂扛[þ4矬ŏ
                values:
                - wPh
              - key: mKRRQkKAI
                operator: ĺʒǫL
                values:
                - 7xbgN
                - eAw4iz
              matchLabels:
                Ayl: 9NnmG
                F: JNmeRe
                izqyN7gWS: LiVpUbwcO
            matchLabelKeys:
            - cxr21qN3
            - ""
            - pfd8
            mismatchLabelKeys:
            - GVA6z
            - w
            namespaceSelector:
              matchExpressions:
              - key: ecA2NLwK
                operator: 1鶰÷ʃ毰x?ɒʟŁ曇匳6
                values:
                - "0"
                - lDLm5J
                - q
              matchLabels:
                vnoklGOuVC9: hN1Vx8
            namespaces:
            - IkwR
            - R26hEScp5Oqz
            topologyKey: iY
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: YkG1lBP8
                  operator: I
                  values:
                  - M
                  - 8TdKG
                  - GI0k
                - key: 1jE2
                  operator: '拚tr棌矣:'
                  values:
                  - oWO
                  - 7c7dLTFPoct
                matchLabels:
                  i: lM8gG
                  lGbHM: PmuZkUsB
              matchLabelKeys:
              - x
              - VNC
              mismatchLabelKeys:
              - "0"
              - RkAy
              - 3t8PvXFQ
              namespaceSelector:
                matchExpressions:
                - key: b6hOguxE
                  operator: '"ĨƗÙ颁"鰅+āɁ6Ȋ8'
                - key: eh4r7GI
                  operator: ""
                - key: hxSS82ftGV
                  operator: 輱憖v蕎
                  values:
                  - p5cY
                matchLabels:
                  B: j5
                  dJd11: Xvsc
                  mj26Lyw: A7oJL6fXlyiV
              namespaces:
              - e3nw4U6hGP
              topologyKey: P
            weight: 1549444999
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ka
                  operator: 犁兙幕粭¢
                  values:
                  - eeiaxE
                matchLabels:
                  594QWs: HaUpe
                  IctcNe: W9LXmi
                  bAU: hMgEYY
              matchLabelKeys:
              - OlucqhxTA
              - QG4OFhr
              namespaceSelector:
                matchExpressions:
                - key: MK3pj
                  operator: ʅǴ縦眪嫓b哹熑D
                - key: W3iVTA
                  operator: Ĭ怖ȧ蜔镱竃暉卅
                  values:
                  - 3G
                  - pcrdR
                matchLabels:
                  tZEBPU: i70BhvLpdQ
              namespaces:
              - O
              - "8"
              topologyKey: O
            weight: 385351436
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector: {}
            matchLabelKeys:
            - gtw
            mismatchLabelKeys:
            - 3TMqPb
            - m
            - lBEuOKnQ
            namespaceSelector: {}
            namespaces:
            - HBzv
            topologyKey: ee9r
          - labelSelector:
              matchExpressions:
              - key: Bo3lXeT
                operator: ë憛-畇J匾Ȧİ
              matchLabels:
                JyTmc: nF6t4FWoUh
                eIaCTzevFHv: UGx
            matchLabelKeys:
            - s86A
            - x
            - hARrWalx
            mismatchLabelKeys:
            - oE4FScEQ
            - XpwDsvKa
            - asUShfC
            namespaceSelector:
              matchLabels:
                JvNpLgE: ""
            namespaces:
            - vL
            - mLu7RlSV
            - bQRFLW
            topologyKey: d
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: C9o:HAScR
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 391
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 425
          periodSeconds: 631
          successThreshold: 167
          terminationGracePeriodSeconds: 927
          timeoutSeconds: 122
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 660
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 13
          periodSeconds: 781
          successThreshold: 780
          terminationGracePeriodSeconds: 784
          timeoutSeconds: 696
        resources:
          limits:
            cpu: "641"
            memory: "710"
          requests:
            cpu: "117"
            memory: "875"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      dnsConfig:
        nameservers:
        - 2CpyVbnvo
        options:
        - name: yxl
          value: QUBh
        - name: ePNFrIFJ1Y5
          value: Jxzn
        - name: ytC
          value: ""
        searches:
        - BwsHNyhJ
        - ycnipfaM6C
        - V
      dnsPolicy: Y坝Ïʁ
      enableServiceLinks: true
      ephemeralContainers: null
      hostAliases:
      - ip: hU1
      - hostnames:
        - weRRE
        ip: f8Tjq9H0
      - ip: 4Po
      hostIPC: true
      hostUsers: true
      imagePullSecrets:
      - name: ToyEMZ
      - name: DUuKKoSMVIr
      - name: XQ
      initContainers: []
      nodeName: UVVey
      nodeSelector:
        BAev5kTlRODN: dX
        C3bQIT: xsa7cM
        F8X5: F6KozO4
        tGO: bHUSg0
      preemptionPolicy: "N"
      priority: -85316965
      priorityClassName: eG
      readinessGates:
      - conditionType: ȈʉsƻÞ額紿簀êŏ蜌呒ÔY脂ʏd_
      - conditionType: ȣ裩>岣偤
      - conditionType: 愊«漀沧Ĝeƾ¬蘸#ǡǣ崥ȗP
      resourceClaims:
      - name: Fp3HF
        source:
          resourceClaimName: FlRlT
          resourceClaimTemplateName: PXbN
      restartPolicy: 悸郊瘀Ǖ媦á蠝遴Ɗɫ×DǵŨ姭驈ƶɊ僽
      runtimeClassName: r7UMT44
      schedulerName: gq
      securityContext:
        fsGroup: 2925426353529579500
        fsGroupChangePolicy: Always
        runAsGroup: -8895832925862921000
        runAsNonRoot: false
        runAsUser: 6754487347817984000
        supplementalGroups:
        - -7829883370998095000
        - 7231314824541344000
        sysctls:
        - name: o1
          value: txAKqz
      serviceAccountName: eczy
      setHostnameAsFQDN: true
      subdomain: PLW46
      terminationGracePeriodSeconds: 7787644037227988000
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchExpressions:
          - key: woH
            operator: sOǟ鯝鵽*讻^ƹſBd翧換_啾鬟
            values:
            - 9rt
            - I
            - w
          - key: rw
            operator: ""
            values:
            - nAmnD
            - FE7I
            - 7Jxc
          - key: tEE
            operator: ʓ#J籱Ɍbĵ赟 a鯈ƹĢo绢n
            values:
            - XXm
            - bIMse
            - m
          matchLabels:
            Ke: aK7pHX
            SKcae7L: I5EirEQb
        maxSkew: 1646139378
        minDomains: -1068408282
        nodeAffinityPolicy: ĝw
        nodeTaintsPolicy: ɩ艁Ǌ
        topologyKey: ZmjDn
        whenUnsatisfiable: )坞]yQÆT聤ćŭ
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: 1Z3N4ti
      - name: qQ
      - name: w
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - RoJFv-webhook-service.default.svc
  - RoJFv-webhook-service.default.svc.Y
  issuerRef:
    kind: Issuer
    name: 5U9oyj-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: 1Z3N4ti
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: 5U9oyj-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 5U9oyj-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: RoJFv-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    E3s: wWjO
    OD7: D
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: RoJFv
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
    rnKI: dxHr
  name: 5U9oyj-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      E3s: wWjO
      OD7: D
      app.kubernetes.io/instance: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: RoJFv
      app.kubernetes.io/version: v2.3.8-24.3.6
      helm.sh/chart: operator-v2.3.8-24.3.6
      rnKI: dxHr
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: 5U9oyj-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: RoJFv-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: vE4AZ
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/default-values.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-election-role
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-rpk-bundle
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: operator
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: operator
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=info
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: operator
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: operator
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/disabled-service-account-automount-token-with-volume-overwrite.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-election-role
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-rpk-bundle
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: operator
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: operator
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=info
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-overwrite
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: operator
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: kube-api-access-overwrite
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 666
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: some-kube-root-ca-config-map.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: operator
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/enabled-service-account-automount-token-in-only-service-account-resource.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-election-role
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-rpk-bundle
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: operator
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: operator
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=info
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: operator
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: operator
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/enabled-service-account-automount-token-in-service-account-resource.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-election-role
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-rpk-bundle
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: operator
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: operator
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=info
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: operator
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: operator
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/operator-cluster-scoped.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  - consoles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  - consoles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-election-role
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-rpk-bundle
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: operator
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: operator
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: operator
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=true
        - --webhook-enabled=true
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        runAsUser: 65532
      serviceAccountName: operator
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: redpanda-serving-cert
  namespace: default
spec:
  dnsNames:
  - operator-webhook-service.default.svc
  - operator-webhook-service.default.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: operator-selfsigned-issuer
  privateKey:
    rotationPolicy: Never
  secretName: webhook-server-cert
---
# Source: operator/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: operator-mutating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: operator-webhook-service
      namespace: default
      path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/entry-point.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  creationTimestamp: null
  name: operator-validating-webhook-configuration
  namespace: default
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: operator-webhook-service
      namespace: default
      path: /validate-redpanda-vectorized-io-v1alpha1-cluster
  failurePolicy: Fail
  name: mcluster.kb.io
  rules:
  - apiGroups:
    - redpanda.vectorized.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusters
  sideEffects: None
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: operator
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=ClusterConfigured --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.restarting}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.status.upgrading}'=false --timeout=10m cluster/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          ---
          apiVersion: redpanda.vectorized.io/v1alpha1
          kind: Cluster
          metadata:
            name: cluster-tls
          spec:
            image: "docker.redpanda.com/redpandadata/redpanda"
            version: "v25.1.1"
            replicas: 3
            resources:
              requests:
                cpu: 1
                memory: 1.2Gi
              limits:
                cpu: 1
                memory: 1.2Gi
            configuration:
              rpcServer:
                port: 33145
              kafkaApi:
                - port: 9092
                  tls:
                    enabled: true
                    requireClientAuth: true
              adminApi:
              - port: 9644
              pandaproxyApi:
              - port: 8082
              developerMode: true
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
-- testdata/operator-namespaced-scoped-with-secuirty-context.yaml.golden --
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: :8081
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: aa9fc693.vectorized.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
kind: ConfigMap
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-config
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/finalizers
  - schemas/finalizers
  - topics/finalizers
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - redpandas/status
  - schemas/status
  - topics/status
  - users/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.redpanda.com
  resources:
  - schemas
  - topics
  - users
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/finalizers
  verbs:
  - update
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - helmcharts
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/finalizers
  - gitrepositories/finalizers
  - helmcharts/finalizers
  - helmrepositories/finalizers
  verbs:
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  - gitrepositories/status
  - helmcharts/status
  - helmrepositories/status
  verbs:
  - get
  - patch
  - update
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-election-role
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-election-role
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-rpk-bundle
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-rpk-bundle
subjects:
- kind: ServiceAccount
  name: operator
  namespace: default
---
# Source: operator/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/name: operator
---
# Source: operator/templates/entry-point.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: operator
    app.kubernetes.io/version: v2.3.8-24.3.6
    helm.sh/chart: operator-v2.3.8-24.3.6
  name: operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: operator
      app.kubernetes.io/name: operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: operator
        app.kubernetes.io/name: operator
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8443
        - --leader-elect
        - --webhook-enabled=false
        - --namespace=default
        - --log-level=info
        command:
        - /manager
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.3.8-24.3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      ephemeralContainers: null
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      securityContext:
        fsGroup: 222
        fsGroupChangePolicy: Always
        runAsGroup: 777
        runAsUser: 888
        supplementalGroups:
        - 555
        - 444
      serviceAccountName: operator
      terminationGracePeriodSeconds: 10
      tolerations: []
      volumes:
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: operator
  automountServiceAccountToken: false
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.default.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.default.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n default apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF

          # Wait for things to be ready
          $KUBECTL -n default wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n default wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n default get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n default delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha2
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v25.1.1
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: false
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          
          EOF
          $KUBECTL -n default delete pvc --all
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true

  restartPolicy: Never
  volumes:
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
              - key: ca.crt
                path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
